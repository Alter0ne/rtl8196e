#! /bin/sh
# Copyright (C) 2002, 2003, 2010 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Tests that Automake understands multiple suffix rules on the same line.
# PR/371 and PR/372: Reported by Duncan Gibson.
# We also check for suffixes containing `-'.

. ./defs || Exit 1

set -e

cat >>configure.in <<EOF
AC_PROG_CC
AC_OUTPUT
EOF

cat >Makefile.am << 'END'
bin_PROGRAMS = foo bar baz
foo_SOURCES = foo.x_
bar_SOURCES = bar.y-z
baz_SOURCES = baz1.x_ baz2.y-z
.y-z.c .x_.c:
	cp $< $@
  .z_.c   .w_.x_ :
	cp $< $@

.PHONY: print
print:
	@echo BEGIN: $(foo_OBJECTS) :END
	@echo BEGIN: $(bar_OBJECTS) :END
	@echo BEGIN: $(baz_OBJECTS) :END
END

$ACLOCAL
$AUTOCONF

# What we do is not portable.  Automake should warn.
AUTOMAKE_fails -a
grep '[iI]nference rules can have only one target before the colon' stderr

# But this should work anyway.
$AUTOMAKE -a -Wno-portability

./configure

OBJEXT=foo $MAKE -e print >stdout || { cat stdout; Exit 1; }
cat stdout
$FGREP 'BEGIN: foo.foo :END' stdout
$FGREP 'BEGIN: bar.foo :END' stdout
$FGREP 'BEGIN: baz1.foo baz2.foo :END' stdout

:
