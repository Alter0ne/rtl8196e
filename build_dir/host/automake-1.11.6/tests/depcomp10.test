#! /bin/sh
# Copyright (C) 2011 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# hp depmode should work with GNU make in VPATH mode (bug similar to
# depcomp9.test).
# For automake bug#8473.

# Here's the bug: hp depmode will prefix VPATH to the object file name,
# thus the second gmake will invoke depcomp with object='../../src/foo.o',
# causing errors such as (broken on multiple lines for clarity):
#   cpp: "", line 0: error 4066: Cannot create
#        "../../gllib/.deps/nonblocking.TPo" file for
#        "-M../../gllib/.deps/nonblocking.TPo" option.
#        (No such file or directory[errno=2])

required=GNUmake
. ./defs || Exit 1

mkdir src src/sub build

cat >> configure.in << 'END'
AC_PROG_CC
AM_PROG_CC_C_O
AC_CONFIG_FILES([src/Makefile])
AC_OUTPUT
END

cat > Makefile.am << 'END'
SUBDIRS = src
END

cat > src/Makefile.am << 'END'
AUTOMAKE_OPTIONS = subdir-objects
bin_PROGRAMS = foo
foo_SOURCES = foo.c foo.h sub/subfoo.c
END

cat > src/foo.h <<EOF
extern int subfoo (void);
EOF

cat >src/foo.c <<EOF
#include "foo.h"
int main (void)
{
  return subfoo ();
}
EOF

cat >src/sub/subfoo.c <<EOF
#include "foo.h"
int subfoo (void)
{
  return 0;
}
EOF

$ACLOCAL
$AUTOCONF
$AUTOMAKE -a

cd build
../configure am_cv_CC_dependencies_compiler_type=hp
# Do not error out with the first make, as the forced 'hp' depmode might
# not actually work, but we have overridden the _AM_DEPENDENCIES tests.
$MAKE || Exit 77

# We must clean and rebuild, as the actual error only happens the second
# time the objects are built because 'depcomp' has silently messed up the
# .Po files the first time.
$MAKE clean

$MAKE >out 2>&1 || { cat out; Exit 1; }
cat out
grep 'src/[._]deps' out && Exit 1

:
