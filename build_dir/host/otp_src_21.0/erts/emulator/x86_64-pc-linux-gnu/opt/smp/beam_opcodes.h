/*
 *  Warning: Do not edit this file.
 *  Auto-generated by 'beam_makeops'.
 */

#ifndef __OPCODES_H__
#define __OPCODES_H__

#define BEAM_FORMAT_NUMBER 0
#define MAX_GENERIC_OPCODE 163
#define NUM_GENERIC_OPS 355
#define NUM_SPECIFIC_OPS 394
#define SCRATCH_X_REG 1023

#if !defined(ARCH_64)
  #error "64-bit architecture assumed, but ARCH_64 not defined"
#endif
#define BEAM_WIDE_MASK 0xFFFFFFFFull
#define BEAM_LOOSE_MASK 0xFFFFull
#define BEAM_TIGHT_MASK 0xFFFFull
#define BEAM_TIGHTEST_MASK 0x3FFull
#define BEAM_WIDE_SHIFT 32
#define BEAM_LOOSE_SHIFT 16
#define BEAM_TIGHT_SHIFT 16
#define BEAM_TIGHTEST_SHIFT 10

/*
 * The following operand types for generic instructions
 * occur in beam files.
 */

#define TAG_u 0
#define TAG_i 1
#define TAG_a 2
#define TAG_x 3
#define TAG_y 4
#define TAG_f 5
#define TAG_h 6
#define TAG_z 7

/*
 * The following operand types are only used in the loader.
 */

#define TAG_n 8
#define TAG_p 9
#define TAG_r 10
#define TAG_v 11
#define TAG_l 12
#define TAG_q 13
#define TAG_o 14

#define BEAM_NUM_TAGS 15

#define TOP_call_end 0
#define TOP_commit 1
#define TOP_end 2
#define TOP_fail 3
#define TOP_is_bif 4
#define TOP_is_func 5
#define TOP_is_not_bif 6
#define TOP_is_same_var 7
#define TOP_is_type 8
#define TOP_is_type_eq 9
#define TOP_keep 10
#define TOP_new_instr 11
#define TOP_next_arg 12
#define TOP_next_instr 13
#define TOP_pred 14
#define TOP_rename 15
#define TOP_rest_args 16
#define TOP_set_var_next_arg 17
#define TOP_store_rest_args 18
#define TOP_store_type 19
#define TOP_store_val 20
#define TOP_store_var_next_arg 21
#define TOP_try_me_else 22
#define TOP_try_me_else_fail 23
#define NUM_TOPS 24

#define TE_MAX_VARS 8

extern const char tag_to_letter[];
extern const Uint op_transform[];

#define op_allocate_tt 0
#define op_allocate_heap_tIt 1
#define op_allocate_heap_zero_tIt 2
#define op_allocate_init_tty 3
#define op_allocate_zero_tt 4
#define op_apply_t 5
#define op_apply_bif 6
#define op_apply_last_tQ 7
#define op_badarg_j 8
#define op_badmatch_x 9
#define op_bif1_fbsd 10
#define op_bif1_body_bsd 11
#define op_bs_add_jsstx 12
#define op_bs_context_to_binary_x 13
#define op_bs_init_writable 14
#define op_bs_put_string_WW 15
#define op_bs_put_utf16_jts 16
#define op_bs_test_tail_imm2_fxW 17
#define op_bs_test_unit_fxt 18
#define op_bs_test_unit8_fx 19
#define op_bs_test_zero_tail2_fx 20
#define op_build_stacktrace 21
#define op_call_bif_e 22
#define op_call_error_handler 23
#define op_call_nif 24
#define op_case_end_x 25
#define op_catch_yf 26
#define op_catch_end_y 27
#define op_continue_exit 28
#define op_deallocate_Q 29
#define op_deallocate_return_Q 30
#define op_ensure_map_x 31
#define op_error_action_code 32
#define op_fconv_Sl 33
#define op_fload_ql 34
#define op_fload_Sl 35
#define op_fstore_ld 36
#define op_get_hd_xx 37
#define op_get_hd_xy 38
#define op_get_hd_yx 39
#define op_get_hd_yy 40
#define op_get_list_rry 41
#define op_get_list_rxr 42
#define op_get_list_rxx 43
#define op_get_list_rxy 44
#define op_get_list_ryr 45
#define op_get_list_xrx 46
#define op_get_list_xxx 47
#define op_get_list_xxy 48
#define op_get_list_xyx 49
#define op_get_list_xyy 50
#define op_get_list_yxx 51
#define op_get_list_yxy 52
#define op_get_list_yyx 53
#define op_get_list_yyy 54
#define op_get_tl_xx 55
#define op_get_tl_xy 56
#define op_get_tl_yx 57
#define op_get_tl_yy 58
#define op_i_apply 59
#define op_i_apply_fun 60
#define op_i_apply_fun_last_Q 61
#define op_i_apply_fun_only 62
#define op_i_apply_last_Q 63
#define op_i_apply_only 64
#define op_i_band_xcjtd 65
#define op_i_band_ssjtd 66
#define op_i_bif2_fbssd 67
#define op_i_bif2_body_bssd 68
#define op_i_bor_jIssd 69
#define op_i_bs_append_jIttsx 70
#define op_i_bs_get_binary2_fxtstx 71
#define op_i_bs_get_binary_all2_fxttx 72
#define op_i_bs_get_binary_all_reuse_xft 73
#define op_i_bs_get_binary_imm2_fxtWtx 74
#define op_i_bs_get_float2_fxtstx 75
#define op_i_bs_get_integer_fttxsx 76
#define op_i_bs_get_integer_16_xfx 77
#define op_i_bs_get_integer_32_xfx 78
#define op_i_bs_get_integer_8_xfx 79
#define op_i_bs_get_integer_imm_xWtftx 80
#define op_i_bs_get_integer_small_imm_xWftx 81
#define op_i_bs_get_utf16_xftx 82
#define op_i_bs_get_utf8_xfx 83
#define op_i_bs_init_Wtx 84
#define op_i_bs_init_bits_Wtx 85
#define op_i_bs_init_bits_fail_xjtx 86
#define op_i_bs_init_bits_fail_yjtx 87
#define op_i_bs_init_bits_fail_heap_sIjtx 88
#define op_i_bs_init_bits_heap_WItx 89
#define op_i_bs_init_fail_xjtx 90
#define op_i_bs_init_fail_yjtx 91
#define op_i_bs_init_fail_heap_sIjtx 92
#define op_i_bs_init_heap_WItx 93
#define op_i_bs_match_string_xfWW 94
#define op_i_bs_private_append_jtsSx 95
#define op_i_bs_put_utf8_js 96
#define op_i_bs_restore2_xt 97
#define op_i_bs_save2_xt 98
#define op_i_bs_skip_bits2_fxxt 99
#define op_i_bs_skip_bits2_fxyt 100
#define op_i_bs_skip_bits_all2_fxt 101
#define op_i_bs_skip_bits_imm2_fxW 102
#define op_i_bs_start_match2_xfttx 103
#define op_i_bs_start_match2_yfttx 104
#define op_i_bs_utf16_size_sx 105
#define op_i_bs_utf8_size_sx 106
#define op_i_bs_validate_unicode_js 107
#define op_i_bs_validate_unicode_retract_jsS 108
#define op_i_bsl_ssjtd 109
#define op_i_bsr_ssjtd 110
#define op_i_bxor_jIssd 111
#define op_i_call_f 112
#define op_i_call_ext_e 113
#define op_i_call_ext_last_eQ 114
#define op_i_call_ext_only_e 115
#define op_i_call_fun_t 116
#define op_i_call_fun_last_tQ 117
#define op_i_call_last_fQ 118
#define op_i_call_only_f 119
#define op_i_debug_breakpoint 120
#define op_i_element_xjsd 121
#define op_i_element_yjsd 122
#define op_i_fadd_lll 123
#define op_i_fast_element_xjId 124
#define op_i_fast_element_yjId 125
#define op_i_fdiv_lll 126
#define op_i_fmul_lll 127
#define op_i_fnegate_ll 128
#define op_i_fsub_lll 129
#define op_i_func_info_IaaI 130
#define op_i_gc_bif1_jWstd 131
#define op_i_gc_bif2_jWtssd 132
#define op_i_gc_bif3_jWtssd 133
#define op_i_generic_breakpoint 134
#define op_i_get_sd 135
#define op_i_get_hash_cId 136
#define op_i_get_map_element_fxxx 137
#define op_i_get_map_element_fxxy 138
#define op_i_get_map_element_fyxx 139
#define op_i_get_map_element_fyxy 140
#define op_i_get_map_element_hash_fxcIx 141
#define op_i_get_map_element_hash_fxcIy 142
#define op_i_get_map_element_hash_fycIx 143
#define op_i_get_map_element_hash_fycIy 144
#define op_i_get_map_elements_fsI 145
#define op_i_get_tuple_element_xPx 146
#define op_i_get_tuple_element_xPy 147
#define op_i_get_tuple_element_yPx 148
#define op_i_get_tuple_element_yPy 149
#define op_i_get_tuple_element2_xPx 150
#define op_i_get_tuple_element2y_xPyy 151
#define op_i_get_tuple_element3_xPx 152
#define op_i_hibernate 153
#define op_i_increment_rWtd 154
#define op_i_increment_xWtd 155
#define op_i_increment_yWtd 156
#define op_i_int_bnot_jStd 157
#define op_i_int_div_jtssd 158
#define op_i_is_eq_exact_immed_frc 159
#define op_i_is_eq_exact_immed_fxc 160
#define op_i_is_eq_exact_immed_fyc 161
#define op_i_is_eq_exact_literal_fxc 162
#define op_i_is_eq_exact_literal_fyc 163
#define op_i_is_ne_exact_immed_fxc 164
#define op_i_is_ne_exact_immed_fyc 165
#define op_i_is_ne_exact_literal_fxc 166
#define op_i_is_ne_exact_literal_fyc 167
#define op_i_jump_on_val_xfIW 168
#define op_i_jump_on_val_yfIW 169
#define op_i_jump_on_val_zero_xfI 170
#define op_i_jump_on_val_zero_yfI 171
#define op_i_loop_rec_f 172
#define op_i_m_div_jtssd 173
#define op_i_make_fun_Wt 174
#define op_i_minus_xxjtd 175
#define op_i_minus_ssjtd 176
#define op_i_move_call_ext_ce 177
#define op_i_move_call_ext_last_eQc 178
#define op_i_move_call_ext_only_ec 179
#define op_i_new_bs_put_binary_jsts 180
#define op_i_new_bs_put_binary_all_jst 181
#define op_i_new_bs_put_binary_imm_jWs 182
#define op_i_new_bs_put_float_jsts 183
#define op_i_new_bs_put_float_imm_jWts 184
#define op_i_new_bs_put_integer_jsts 185
#define op_i_new_bs_put_integer_imm_jWts 186
#define op_i_new_small_map_lit_dtq 187
#define op_i_perf_counter 188
#define op_i_plus_xxjtd 189
#define op_i_plus_xyjtd 190
#define op_i_plus_ssjtd 191
#define op_i_put_tuple_xI 192
#define op_i_put_tuple_yI 193
#define op_i_raise 194
#define op_i_recv_mark 195
#define op_i_recv_set 196
#define op_i_rem_xxjtd 197
#define op_i_rem_ssjtd 198
#define op_i_return_time_trace 199
#define op_i_return_to_trace 200
#define op_i_select_tuple_arity_xfI 201
#define op_i_select_tuple_arity_yfI 202
#define op_i_select_tuple_arity2_xfAA 203
#define op_i_select_tuple_arity2_yfAA 204
#define op_i_select_val2_xfcc 205
#define op_i_select_val2_yfcc 206
#define op_i_select_val_bins_xfI 207
#define op_i_select_val_bins_yfI 208
#define op_i_select_val_lins_xfI 209
#define op_i_select_val_lins_yfI 210
#define op_i_times_jtssd 211
#define op_i_trim_t 212
#define op_i_wait_error 213
#define op_i_wait_error_locked 214
#define op_i_yield 215
#define op_if_end 216
#define op_init_y 217
#define op_init2_yy 218
#define op_init3_yyy 219
#define op_int_code_end 220
#define op_is_atom_fx 221
#define op_is_atom_fy 222
#define op_is_binary_fx 223
#define op_is_binary_fy 224
#define op_is_bitstring_fx 225
#define op_is_bitstring_fy 226
#define op_is_boolean_fx 227
#define op_is_boolean_fy 228
#define op_is_eq_fss 229
#define op_is_eq_exact_fxx 230
#define op_is_eq_exact_fxy 231
#define op_is_eq_exact_fyy 232
#define op_is_float_fx 233
#define op_is_float_fy 234
#define op_is_function_fx 235
#define op_is_function_fy 236
#define op_is_function2_fSs 237
#define op_is_ge_fxx 238
#define op_is_ge_fxc 239
#define op_is_ge_fcx 240
#define op_is_ge_fss 241
#define op_is_integer_fx 242
#define op_is_integer_fy 243
#define op_is_integer_allocate_fxtt 244
#define op_is_list_fx 245
#define op_is_list_fy 246
#define op_is_lt_fxx 247
#define op_is_lt_fxc 248
#define op_is_lt_fcx 249
#define op_is_lt_fss 250
#define op_is_map_fx 251
#define op_is_map_fy 252
#define op_is_ne_fss 253
#define op_is_ne_exact_fSS 254
#define op_is_nil_fx 255
#define op_is_nil_fy 256
#define op_is_nonempty_list_fx 257
#define op_is_nonempty_list_fy 258
#define op_is_nonempty_list_allocate_frtt 259
#define op_is_nonempty_list_allocate_fxtt 260
#define op_is_nonempty_list_get_list_frxx 261
#define op_is_nonempty_list_get_list_fxxx 262
#define op_is_nonempty_list_test_heap_fIt 263
#define op_is_number_fx 264
#define op_is_number_fy 265
#define op_is_pid_fx 266
#define op_is_pid_fy 267
#define op_is_port_fx 268
#define op_is_port_fy 269
#define op_is_reference_fx 270
#define op_is_reference_fy 271
#define op_is_tagged_tuple_frAa 272
#define op_is_tagged_tuple_fxAa 273
#define op_is_tagged_tuple_fyAa 274
#define op_is_tuple_fr 275
#define op_is_tuple_fx 276
#define op_is_tuple_fy 277
#define op_is_tuple_of_arity_frA 278
#define op_is_tuple_of_arity_fxA 279
#define op_is_tuple_of_arity_fyA 280
#define op_jump_f 281
#define op_label_L 282
#define op_line_I 283
#define op_loop_rec_end_f 284
#define op_move_nx 285
#define op_move_rx 286
#define op_move_ry 287
#define op_move_xr 288
#define op_move_xx 289
#define op_move_xy 290
#define op_move_yr 291
#define op_move_yx 292
#define op_move_yy 293
#define op_move_cr 294
#define op_move_cx 295
#define op_move2_par_xxxx 296
#define op_move2_par_xxxy 297
#define op_move2_par_xxyx 298
#define op_move2_par_xyxy 299
#define op_move2_par_yxxx 300
#define op_move2_par_yxxy 301
#define op_move2_par_yxyx 302
#define op_move3_xxxxxx 303
#define op_move3_xyxyxy 304
#define op_move3_yxyxyx 305
#define op_move_call_xf 306
#define op_move_call_yf 307
#define op_move_call_cf 308
#define op_move_call_last_xfQ 309
#define op_move_call_last_yfQ 310
#define op_move_call_last_cfQ 311
#define op_move_call_only_xf 312
#define op_move_call_only_cf 313
#define op_move_deallocate_return_nQ 314
#define op_move_deallocate_return_xQ 315
#define op_move_deallocate_return_yQ 316
#define op_move_deallocate_return_cQ 317
#define op_move_dup_xxx 318
#define op_move_dup_xxy 319
#define op_move_dup_yxx 320
#define op_move_dup_yxy 321
#define op_move_jump_fn 322
#define op_move_jump_fx 323
#define op_move_jump_fy 324
#define op_move_jump_fc 325
#define op_move_return_n 326
#define op_move_return_x 327
#define op_move_return_c 328
#define op_move_shift_xxx 329
#define op_move_shift_xxy 330
#define op_move_shift_xyx 331
#define op_move_shift_yxx 332
#define op_move_window3_xxxy 333
#define op_move_window4_xxxxy 334
#define op_move_window5_xxxxxy 335
#define op_move_x1_c 336
#define op_move_x2_c 337
#define op_new_map_dtI 338
#define op_node_x 339
#define op_node_y 340
#define op_normal_exit 341
#define op_on_load 342
#define op_put_list_rnr 343
#define op_put_list_rnx 344
#define op_put_list_rxr 345
#define op_put_list_rxx 346
#define op_put_list_xnx 347
#define op_put_list_xxr 348
#define op_put_list_xxx 349
#define op_put_list_xyx 350
#define op_put_list_ynx 351
#define op_put_list_yxx 352
#define op_put_list_yyx 353
#define op_put_list_xcx 354
#define op_put_list_xcy 355
#define op_put_list_ycx 356
#define op_put_list_cxx 357
#define op_put_list_cyx 358
#define op_put_list_ssd 359
#define op_raw_raise 360
#define op_remove_message 361
#define op_return 362
#define op_return_trace 363
#define op_self_x 364
#define op_self_y 365
#define op_send 366
#define op_set_tuple_element_sSP 367
#define op_swap_xx 368
#define op_swap_xy 369
#define op_swap_temp_xxx 370
#define op_swap_temp_xyx 371
#define op_system_limit_j 372
#define op_test_arity_fxA 373
#define op_test_arity_fyA 374
#define op_test_heap_It 375
#define op_test_heap_1_put_list_Iy 376
#define op_timeout 377
#define op_timeout_locked 378
#define op_trace_jump_W 379
#define op_try_case_y 380
#define op_try_case_end_s 381
#define op_try_end_y 382
#define op_update_list_xx 383
#define op_update_list_yx 384
#define op_update_list_cx 385
#define op_update_map_assoc_sdtI 386
#define op_update_map_exact_jsdtI 387
#define op_wait_locked_f 388
#define op_wait_timeout_locked_sf 389
#define op_wait_timeout_locked_int_If 390
#define op_wait_timeout_unlocked_sf 391
#define op_wait_timeout_unlocked_int_If 392
#define op_wait_unlocked_f 393

#define NUMBER_OF_OPCODES 394
#define op_count_allocate_tt 394
#define op_count_allocate_heap_tIt 395
#define op_count_allocate_heap_zero_tIt 396
#define op_count_allocate_init_tty 397
#define op_count_allocate_zero_tt 398
#define op_count_apply_t 399
#define op_count_apply_bif 400
#define op_count_apply_last_tQ 401
#define op_count_badarg_j 402
#define op_count_badmatch_x 403
#define op_count_bif1_fbsd 404
#define op_count_bif1_body_bsd 405
#define op_count_bs_add_jsstx 406
#define op_count_bs_context_to_binary_x 407
#define op_count_bs_init_writable 408
#define op_count_bs_put_string_WW 409
#define op_count_bs_put_utf16_jts 410
#define op_count_bs_test_tail_imm2_fxW 411
#define op_count_bs_test_unit_fxt 412
#define op_count_bs_test_unit8_fx 413
#define op_count_bs_test_zero_tail2_fx 414
#define op_count_build_stacktrace 415
#define op_count_call_bif_e 416
#define op_count_call_error_handler 417
#define op_count_call_nif 418
#define op_count_case_end_x 419
#define op_count_catch_yf 420
#define op_count_catch_end_y 421
#define op_count_continue_exit 422
#define op_count_deallocate_Q 423
#define op_count_deallocate_return_Q 424
#define op_count_ensure_map_x 425
#define op_count_error_action_code 426
#define op_count_fconv_Sl 427
#define op_count_fload_ql 428
#define op_count_fload_Sl 429
#define op_count_fstore_ld 430
#define op_count_get_hd_xx 431
#define op_count_get_hd_xy 432
#define op_count_get_hd_yx 433
#define op_count_get_hd_yy 434
#define op_count_get_list_rry 435
#define op_count_get_list_rxr 436
#define op_count_get_list_rxx 437
#define op_count_get_list_rxy 438
#define op_count_get_list_ryr 439
#define op_count_get_list_xrx 440
#define op_count_get_list_xxx 441
#define op_count_get_list_xxy 442
#define op_count_get_list_xyx 443
#define op_count_get_list_xyy 444
#define op_count_get_list_yxx 445
#define op_count_get_list_yxy 446
#define op_count_get_list_yyx 447
#define op_count_get_list_yyy 448
#define op_count_get_tl_xx 449
#define op_count_get_tl_xy 450
#define op_count_get_tl_yx 451
#define op_count_get_tl_yy 452
#define op_count_i_apply 453
#define op_count_i_apply_fun 454
#define op_count_i_apply_fun_last_Q 455
#define op_count_i_apply_fun_only 456
#define op_count_i_apply_last_Q 457
#define op_count_i_apply_only 458
#define op_count_i_band_xcjtd 459
#define op_count_i_band_ssjtd 460
#define op_count_i_bif2_fbssd 461
#define op_count_i_bif2_body_bssd 462
#define op_count_i_bor_jIssd 463
#define op_count_i_bs_append_jIttsx 464
#define op_count_i_bs_get_binary2_fxtstx 465
#define op_count_i_bs_get_binary_all2_fxttx 466
#define op_count_i_bs_get_binary_all_reuse_xft 467
#define op_count_i_bs_get_binary_imm2_fxtWtx 468
#define op_count_i_bs_get_float2_fxtstx 469
#define op_count_i_bs_get_integer_fttxsx 470
#define op_count_i_bs_get_integer_16_xfx 471
#define op_count_i_bs_get_integer_32_xfx 472
#define op_count_i_bs_get_integer_8_xfx 473
#define op_count_i_bs_get_integer_imm_xWtftx 474
#define op_count_i_bs_get_integer_small_imm_xWftx 475
#define op_count_i_bs_get_utf16_xftx 476
#define op_count_i_bs_get_utf8_xfx 477
#define op_count_i_bs_init_Wtx 478
#define op_count_i_bs_init_bits_Wtx 479
#define op_count_i_bs_init_bits_fail_xjtx 480
#define op_count_i_bs_init_bits_fail_yjtx 481
#define op_count_i_bs_init_bits_fail_heap_sIjtx 482
#define op_count_i_bs_init_bits_heap_WItx 483
#define op_count_i_bs_init_fail_xjtx 484
#define op_count_i_bs_init_fail_yjtx 485
#define op_count_i_bs_init_fail_heap_sIjtx 486
#define op_count_i_bs_init_heap_WItx 487
#define op_count_i_bs_match_string_xfWW 488
#define op_count_i_bs_private_append_jtsSx 489
#define op_count_i_bs_put_utf8_js 490
#define op_count_i_bs_restore2_xt 491
#define op_count_i_bs_save2_xt 492
#define op_count_i_bs_skip_bits2_fxxt 493
#define op_count_i_bs_skip_bits2_fxyt 494
#define op_count_i_bs_skip_bits_all2_fxt 495
#define op_count_i_bs_skip_bits_imm2_fxW 496
#define op_count_i_bs_start_match2_xfttx 497
#define op_count_i_bs_start_match2_yfttx 498
#define op_count_i_bs_utf16_size_sx 499
#define op_count_i_bs_utf8_size_sx 500
#define op_count_i_bs_validate_unicode_js 501
#define op_count_i_bs_validate_unicode_retract_jsS 502
#define op_count_i_bsl_ssjtd 503
#define op_count_i_bsr_ssjtd 504
#define op_count_i_bxor_jIssd 505
#define op_count_i_call_f 506
#define op_count_i_call_ext_e 507
#define op_count_i_call_ext_last_eQ 508
#define op_count_i_call_ext_only_e 509
#define op_count_i_call_fun_t 510
#define op_count_i_call_fun_last_tQ 511
#define op_count_i_call_last_fQ 512
#define op_count_i_call_only_f 513
#define op_count_i_debug_breakpoint 514
#define op_count_i_element_xjsd 515
#define op_count_i_element_yjsd 516
#define op_count_i_fadd_lll 517
#define op_count_i_fast_element_xjId 518
#define op_count_i_fast_element_yjId 519
#define op_count_i_fdiv_lll 520
#define op_count_i_fmul_lll 521
#define op_count_i_fnegate_ll 522
#define op_count_i_fsub_lll 523
#define op_count_i_func_info_IaaI 524
#define op_count_i_gc_bif1_jWstd 525
#define op_count_i_gc_bif2_jWtssd 526
#define op_count_i_gc_bif3_jWtssd 527
#define op_count_i_generic_breakpoint 528
#define op_count_i_get_sd 529
#define op_count_i_get_hash_cId 530
#define op_count_i_get_map_element_fxxx 531
#define op_count_i_get_map_element_fxxy 532
#define op_count_i_get_map_element_fyxx 533
#define op_count_i_get_map_element_fyxy 534
#define op_count_i_get_map_element_hash_fxcIx 535
#define op_count_i_get_map_element_hash_fxcIy 536
#define op_count_i_get_map_element_hash_fycIx 537
#define op_count_i_get_map_element_hash_fycIy 538
#define op_count_i_get_map_elements_fsI 539
#define op_count_i_get_tuple_element_xPx 540
#define op_count_i_get_tuple_element_xPy 541
#define op_count_i_get_tuple_element_yPx 542
#define op_count_i_get_tuple_element_yPy 543
#define op_count_i_get_tuple_element2_xPx 544
#define op_count_i_get_tuple_element2y_xPyy 545
#define op_count_i_get_tuple_element3_xPx 546
#define op_count_i_hibernate 547
#define op_count_i_increment_rWtd 548
#define op_count_i_increment_xWtd 549
#define op_count_i_increment_yWtd 550
#define op_count_i_int_bnot_jStd 551
#define op_count_i_int_div_jtssd 552
#define op_count_i_is_eq_exact_immed_frc 553
#define op_count_i_is_eq_exact_immed_fxc 554
#define op_count_i_is_eq_exact_immed_fyc 555
#define op_count_i_is_eq_exact_literal_fxc 556
#define op_count_i_is_eq_exact_literal_fyc 557
#define op_count_i_is_ne_exact_immed_fxc 558
#define op_count_i_is_ne_exact_immed_fyc 559
#define op_count_i_is_ne_exact_literal_fxc 560
#define op_count_i_is_ne_exact_literal_fyc 561
#define op_count_i_jump_on_val_xfIW 562
#define op_count_i_jump_on_val_yfIW 563
#define op_count_i_jump_on_val_zero_xfI 564
#define op_count_i_jump_on_val_zero_yfI 565
#define op_count_i_loop_rec_f 566
#define op_count_i_m_div_jtssd 567
#define op_count_i_make_fun_Wt 568
#define op_count_i_minus_xxjtd 569
#define op_count_i_minus_ssjtd 570
#define op_count_i_move_call_ext_ce 571
#define op_count_i_move_call_ext_last_eQc 572
#define op_count_i_move_call_ext_only_ec 573
#define op_count_i_new_bs_put_binary_jsts 574
#define op_count_i_new_bs_put_binary_all_jst 575
#define op_count_i_new_bs_put_binary_imm_jWs 576
#define op_count_i_new_bs_put_float_jsts 577
#define op_count_i_new_bs_put_float_imm_jWts 578
#define op_count_i_new_bs_put_integer_jsts 579
#define op_count_i_new_bs_put_integer_imm_jWts 580
#define op_count_i_new_small_map_lit_dtq 581
#define op_count_i_perf_counter 582
#define op_count_i_plus_xxjtd 583
#define op_count_i_plus_xyjtd 584
#define op_count_i_plus_ssjtd 585
#define op_count_i_put_tuple_xI 586
#define op_count_i_put_tuple_yI 587
#define op_count_i_raise 588
#define op_count_i_recv_mark 589
#define op_count_i_recv_set 590
#define op_count_i_rem_xxjtd 591
#define op_count_i_rem_ssjtd 592
#define op_count_i_return_time_trace 593
#define op_count_i_return_to_trace 594
#define op_count_i_select_tuple_arity_xfI 595
#define op_count_i_select_tuple_arity_yfI 596
#define op_count_i_select_tuple_arity2_xfAA 597
#define op_count_i_select_tuple_arity2_yfAA 598
#define op_count_i_select_val2_xfcc 599
#define op_count_i_select_val2_yfcc 600
#define op_count_i_select_val_bins_xfI 601
#define op_count_i_select_val_bins_yfI 602
#define op_count_i_select_val_lins_xfI 603
#define op_count_i_select_val_lins_yfI 604
#define op_count_i_times_jtssd 605
#define op_count_i_trim_t 606
#define op_count_i_wait_error 607
#define op_count_i_wait_error_locked 608
#define op_count_i_yield 609
#define op_count_if_end 610
#define op_count_init_y 611
#define op_count_init2_yy 612
#define op_count_init3_yyy 613
#define op_count_int_code_end 614
#define op_count_is_atom_fx 615
#define op_count_is_atom_fy 616
#define op_count_is_binary_fx 617
#define op_count_is_binary_fy 618
#define op_count_is_bitstring_fx 619
#define op_count_is_bitstring_fy 620
#define op_count_is_boolean_fx 621
#define op_count_is_boolean_fy 622
#define op_count_is_eq_fss 623
#define op_count_is_eq_exact_fxx 624
#define op_count_is_eq_exact_fxy 625
#define op_count_is_eq_exact_fyy 626
#define op_count_is_float_fx 627
#define op_count_is_float_fy 628
#define op_count_is_function_fx 629
#define op_count_is_function_fy 630
#define op_count_is_function2_fSs 631
#define op_count_is_ge_fxx 632
#define op_count_is_ge_fxc 633
#define op_count_is_ge_fcx 634
#define op_count_is_ge_fss 635
#define op_count_is_integer_fx 636
#define op_count_is_integer_fy 637
#define op_count_is_integer_allocate_fxtt 638
#define op_count_is_list_fx 639
#define op_count_is_list_fy 640
#define op_count_is_lt_fxx 641
#define op_count_is_lt_fxc 642
#define op_count_is_lt_fcx 643
#define op_count_is_lt_fss 644
#define op_count_is_map_fx 645
#define op_count_is_map_fy 646
#define op_count_is_ne_fss 647
#define op_count_is_ne_exact_fSS 648
#define op_count_is_nil_fx 649
#define op_count_is_nil_fy 650
#define op_count_is_nonempty_list_fx 651
#define op_count_is_nonempty_list_fy 652
#define op_count_is_nonempty_list_allocate_frtt 653
#define op_count_is_nonempty_list_allocate_fxtt 654
#define op_count_is_nonempty_list_get_list_frxx 655
#define op_count_is_nonempty_list_get_list_fxxx 656
#define op_count_is_nonempty_list_test_heap_fIt 657
#define op_count_is_number_fx 658
#define op_count_is_number_fy 659
#define op_count_is_pid_fx 660
#define op_count_is_pid_fy 661
#define op_count_is_port_fx 662
#define op_count_is_port_fy 663
#define op_count_is_reference_fx 664
#define op_count_is_reference_fy 665
#define op_count_is_tagged_tuple_frAa 666
#define op_count_is_tagged_tuple_fxAa 667
#define op_count_is_tagged_tuple_fyAa 668
#define op_count_is_tuple_fr 669
#define op_count_is_tuple_fx 670
#define op_count_is_tuple_fy 671
#define op_count_is_tuple_of_arity_frA 672
#define op_count_is_tuple_of_arity_fxA 673
#define op_count_is_tuple_of_arity_fyA 674
#define op_count_jump_f 675
#define op_count_label_L 676
#define op_count_line_I 677
#define op_count_loop_rec_end_f 678
#define op_count_move_nx 679
#define op_count_move_rx 680
#define op_count_move_ry 681
#define op_count_move_xr 682
#define op_count_move_xx 683
#define op_count_move_xy 684
#define op_count_move_yr 685
#define op_count_move_yx 686
#define op_count_move_yy 687
#define op_count_move_cr 688
#define op_count_move_cx 689
#define op_count_move2_par_xxxx 690
#define op_count_move2_par_xxxy 691
#define op_count_move2_par_xxyx 692
#define op_count_move2_par_xyxy 693
#define op_count_move2_par_yxxx 694
#define op_count_move2_par_yxxy 695
#define op_count_move2_par_yxyx 696
#define op_count_move3_xxxxxx 697
#define op_count_move3_xyxyxy 698
#define op_count_move3_yxyxyx 699
#define op_count_move_call_xf 700
#define op_count_move_call_yf 701
#define op_count_move_call_cf 702
#define op_count_move_call_last_xfQ 703
#define op_count_move_call_last_yfQ 704
#define op_count_move_call_last_cfQ 705
#define op_count_move_call_only_xf 706
#define op_count_move_call_only_cf 707
#define op_count_move_deallocate_return_nQ 708
#define op_count_move_deallocate_return_xQ 709
#define op_count_move_deallocate_return_yQ 710
#define op_count_move_deallocate_return_cQ 711
#define op_count_move_dup_xxx 712
#define op_count_move_dup_xxy 713
#define op_count_move_dup_yxx 714
#define op_count_move_dup_yxy 715
#define op_count_move_jump_fn 716
#define op_count_move_jump_fx 717
#define op_count_move_jump_fy 718
#define op_count_move_jump_fc 719
#define op_count_move_return_n 720
#define op_count_move_return_x 721
#define op_count_move_return_c 722
#define op_count_move_shift_xxx 723
#define op_count_move_shift_xxy 724
#define op_count_move_shift_xyx 725
#define op_count_move_shift_yxx 726
#define op_count_move_window3_xxxy 727
#define op_count_move_window4_xxxxy 728
#define op_count_move_window5_xxxxxy 729
#define op_count_move_x1_c 730
#define op_count_move_x2_c 731
#define op_count_new_map_dtI 732
#define op_count_node_x 733
#define op_count_node_y 734
#define op_count_normal_exit 735
#define op_count_on_load 736
#define op_count_put_list_rnr 737
#define op_count_put_list_rnx 738
#define op_count_put_list_rxr 739
#define op_count_put_list_rxx 740
#define op_count_put_list_xnx 741
#define op_count_put_list_xxr 742
#define op_count_put_list_xxx 743
#define op_count_put_list_xyx 744
#define op_count_put_list_ynx 745
#define op_count_put_list_yxx 746
#define op_count_put_list_yyx 747
#define op_count_put_list_xcx 748
#define op_count_put_list_xcy 749
#define op_count_put_list_ycx 750
#define op_count_put_list_cxx 751
#define op_count_put_list_cyx 752
#define op_count_put_list_ssd 753
#define op_count_raw_raise 754
#define op_count_remove_message 755
#define op_count_return 756
#define op_count_return_trace 757
#define op_count_self_x 758
#define op_count_self_y 759
#define op_count_send 760
#define op_count_set_tuple_element_sSP 761
#define op_count_swap_xx 762
#define op_count_swap_xy 763
#define op_count_swap_temp_xxx 764
#define op_count_swap_temp_xyx 765
#define op_count_system_limit_j 766
#define op_count_test_arity_fxA 767
#define op_count_test_arity_fyA 768
#define op_count_test_heap_It 769
#define op_count_test_heap_1_put_list_Iy 770
#define op_count_timeout 771
#define op_count_timeout_locked 772
#define op_count_trace_jump_W 773
#define op_count_try_case_y 774
#define op_count_try_case_end_s 775
#define op_count_try_end_y 776
#define op_count_update_list_xx 777
#define op_count_update_list_yx 778
#define op_count_update_list_cx 779
#define op_count_update_map_assoc_sdtI 780
#define op_count_update_map_exact_jsdtI 781
#define op_count_wait_locked_f 782
#define op_count_wait_timeout_locked_sf 783
#define op_count_wait_timeout_locked_int_If 784
#define op_count_wait_timeout_unlocked_sf 785
#define op_count_wait_timeout_unlocked_int_If 786
#define op_count_wait_unlocked_f 787

#define DEFINE_OPCODES \
&&lb_allocate_tt, \
&&lb_allocate_heap_tIt, \
&&lb_allocate_heap_zero_tIt, \
&&lb_allocate_init_tty, \
&&lb_allocate_zero_tt, \
&&lb_apply_t, \
&&lb_apply_bif, \
&&lb_apply_last_tQ, \
&&lb_badarg_j, \
&&lb_badmatch_x, \
&&lb_bif1_fbsd, \
&&lb_bif1_body_bsd, \
&&lb_bs_add_jsstx, \
&&lb_bs_context_to_binary_x, \
&&lb_bs_init_writable, \
&&lb_bs_put_string_WW, \
&&lb_bs_put_utf16_jts, \
&&lb_bs_test_tail_imm2_fxW, \
&&lb_bs_test_unit_fxt, \
&&lb_bs_test_unit8_fx, \
&&lb_bs_test_zero_tail2_fx, \
&&lb_build_stacktrace, \
&&lb_call_bif_e, \
&&lb_call_error_handler, \
&&lb_call_nif, \
&&lb_case_end_x, \
&&lb_catch_yf, \
&&lb_catch_end_y, \
&&lb_continue_exit, \
&&lb_deallocate_Q, \
&&lb_deallocate_return_Q, \
&&lb_ensure_map_x, \
&&lb_error_action_code, \
&&lb_fconv_Sl, \
&&lb_fload_ql, \
&&lb_fload_Sl, \
&&lb_fstore_ld, \
&&lb_get_hd_xx, \
&&lb_get_hd_xy, \
&&lb_get_hd_yx, \
&&lb_get_hd_yy, \
&&lb_get_list_rry, \
&&lb_get_list_rxr, \
&&lb_get_list_rxx, \
&&lb_get_list_rxy, \
&&lb_get_list_ryr, \
&&lb_get_list_xrx, \
&&lb_get_list_xxx, \
&&lb_get_list_xxy, \
&&lb_get_list_xyx, \
&&lb_get_list_xyy, \
&&lb_get_list_yxx, \
&&lb_get_list_yxy, \
&&lb_get_list_yyx, \
&&lb_get_list_yyy, \
&&lb_get_tl_xx, \
&&lb_get_tl_xy, \
&&lb_get_tl_yx, \
&&lb_get_tl_yy, \
&&lb_i_apply, \
&&lb_i_apply_fun, \
&&lb_i_apply_fun_last_Q, \
&&lb_i_apply_fun_only, \
&&lb_i_apply_last_Q, \
&&lb_i_apply_only, \
&&lb_i_band_xcjtd, \
&&lb_i_band_ssjtd, \
&&lb_i_bif2_fbssd, \
&&lb_i_bif2_body_bssd, \
&&lb_i_bor_jIssd, \
&&lb_i_bs_append_jIttsx, \
&&lb_i_bs_get_binary2_fxtstx, \
&&lb_i_bs_get_binary_all2_fxttx, \
&&lb_i_bs_get_binary_all_reuse_xft, \
&&lb_i_bs_get_binary_imm2_fxtWtx, \
&&lb_i_bs_get_float2_fxtstx, \
&&lb_i_bs_get_integer_fttxsx, \
&&lb_i_bs_get_integer_16_xfx, \
&&lb_i_bs_get_integer_32_xfx, \
&&lb_i_bs_get_integer_8_xfx, \
&&lb_i_bs_get_integer_imm_xWtftx, \
&&lb_i_bs_get_integer_small_imm_xWftx, \
&&lb_i_bs_get_utf16_xftx, \
&&lb_i_bs_get_utf8_xfx, \
&&lb_i_bs_init_Wtx, \
&&lb_i_bs_init_bits_Wtx, \
&&lb_i_bs_init_bits_fail_xjtx, \
&&lb_i_bs_init_bits_fail_yjtx, \
&&lb_i_bs_init_bits_fail_heap_sIjtx, \
&&lb_i_bs_init_bits_heap_WItx, \
&&lb_i_bs_init_fail_xjtx, \
&&lb_i_bs_init_fail_yjtx, \
&&lb_i_bs_init_fail_heap_sIjtx, \
&&lb_i_bs_init_heap_WItx, \
&&lb_i_bs_match_string_xfWW, \
&&lb_i_bs_private_append_jtsSx, \
&&lb_i_bs_put_utf8_js, \
&&lb_i_bs_restore2_xt, \
&&lb_i_bs_save2_xt, \
&&lb_i_bs_skip_bits2_fxxt, \
&&lb_i_bs_skip_bits2_fxyt, \
&&lb_i_bs_skip_bits_all2_fxt, \
&&lb_i_bs_skip_bits_imm2_fxW, \
&&lb_i_bs_start_match2_xfttx, \
&&lb_i_bs_start_match2_yfttx, \
&&lb_i_bs_utf16_size_sx, \
&&lb_i_bs_utf8_size_sx, \
&&lb_i_bs_validate_unicode_js, \
&&lb_i_bs_validate_unicode_retract_jsS, \
&&lb_i_bsl_ssjtd, \
&&lb_i_bsr_ssjtd, \
&&lb_i_bxor_jIssd, \
&&lb_i_call_f, \
&&lb_i_call_ext_e, \
&&lb_i_call_ext_last_eQ, \
&&lb_i_call_ext_only_e, \
&&lb_i_call_fun_t, \
&&lb_i_call_fun_last_tQ, \
&&lb_i_call_last_fQ, \
&&lb_i_call_only_f, \
&&lb_i_debug_breakpoint, \
&&lb_i_element_xjsd, \
&&lb_i_element_yjsd, \
&&lb_i_fadd_lll, \
&&lb_i_fast_element_xjId, \
&&lb_i_fast_element_yjId, \
&&lb_i_fdiv_lll, \
&&lb_i_fmul_lll, \
&&lb_i_fnegate_ll, \
&&lb_i_fsub_lll, \
&&lb_i_func_info_IaaI, \
&&lb_i_gc_bif1_jWstd, \
&&lb_i_gc_bif2_jWtssd, \
&&lb_i_gc_bif3_jWtssd, \
&&lb_i_generic_breakpoint, \
&&lb_i_get_sd, \
&&lb_i_get_hash_cId, \
&&lb_i_get_map_element_fxxx, \
&&lb_i_get_map_element_fxxy, \
&&lb_i_get_map_element_fyxx, \
&&lb_i_get_map_element_fyxy, \
&&lb_i_get_map_element_hash_fxcIx, \
&&lb_i_get_map_element_hash_fxcIy, \
&&lb_i_get_map_element_hash_fycIx, \
&&lb_i_get_map_element_hash_fycIy, \
&&lb_i_get_map_elements_fsI, \
&&lb_i_get_tuple_element_xPx, \
&&lb_i_get_tuple_element_xPy, \
&&lb_i_get_tuple_element_yPx, \
&&lb_i_get_tuple_element_yPy, \
&&lb_i_get_tuple_element2_xPx, \
&&lb_i_get_tuple_element2y_xPyy, \
&&lb_i_get_tuple_element3_xPx, \
&&lb_i_hibernate, \
&&lb_i_increment_rWtd, \
&&lb_i_increment_xWtd, \
&&lb_i_increment_yWtd, \
&&lb_i_int_bnot_jStd, \
&&lb_i_int_div_jtssd, \
&&lb_i_is_eq_exact_immed_frc, \
&&lb_i_is_eq_exact_immed_fxc, \
&&lb_i_is_eq_exact_immed_fyc, \
&&lb_i_is_eq_exact_literal_fxc, \
&&lb_i_is_eq_exact_literal_fyc, \
&&lb_i_is_ne_exact_immed_fxc, \
&&lb_i_is_ne_exact_immed_fyc, \
&&lb_i_is_ne_exact_literal_fxc, \
&&lb_i_is_ne_exact_literal_fyc, \
&&lb_i_jump_on_val_xfIW, \
&&lb_i_jump_on_val_yfIW, \
&&lb_i_jump_on_val_zero_xfI, \
&&lb_i_jump_on_val_zero_yfI, \
&&lb_i_loop_rec_f, \
&&lb_i_m_div_jtssd, \
&&lb_i_make_fun_Wt, \
&&lb_i_minus_xxjtd, \
&&lb_i_minus_ssjtd, \
&&lb_i_move_call_ext_ce, \
&&lb_i_move_call_ext_last_eQc, \
&&lb_i_move_call_ext_only_ec, \
&&lb_i_new_bs_put_binary_jsts, \
&&lb_i_new_bs_put_binary_all_jst, \
&&lb_i_new_bs_put_binary_imm_jWs, \
&&lb_i_new_bs_put_float_jsts, \
&&lb_i_new_bs_put_float_imm_jWts, \
&&lb_i_new_bs_put_integer_jsts, \
&&lb_i_new_bs_put_integer_imm_jWts, \
&&lb_i_new_small_map_lit_dtq, \
&&lb_i_perf_counter, \
&&lb_i_plus_xxjtd, \
&&lb_i_plus_xyjtd, \
&&lb_i_plus_ssjtd, \
&&lb_i_put_tuple_xI, \
&&lb_i_put_tuple_yI, \
&&lb_i_raise, \
&&lb_i_recv_mark, \
&&lb_i_recv_set, \
&&lb_i_rem_xxjtd, \
&&lb_i_rem_ssjtd, \
&&lb_i_return_time_trace, \
&&lb_i_return_to_trace, \
&&lb_i_select_tuple_arity_xfI, \
&&lb_i_select_tuple_arity_yfI, \
&&lb_i_select_tuple_arity2_xfAA, \
&&lb_i_select_tuple_arity2_yfAA, \
&&lb_i_select_val2_xfcc, \
&&lb_i_select_val2_yfcc, \
&&lb_i_select_val_bins_xfI, \
&&lb_i_select_val_bins_yfI, \
&&lb_i_select_val_lins_xfI, \
&&lb_i_select_val_lins_yfI, \
&&lb_i_times_jtssd, \
&&lb_i_trim_t, \
&&lb_i_wait_error, \
&&lb_i_wait_error_locked, \
&&lb_i_yield, \
&&lb_if_end, \
&&lb_init_y, \
&&lb_init2_yy, \
&&lb_init3_yyy, \
&&lb_int_code_end, \
&&lb_is_atom_fx, \
&&lb_is_atom_fy, \
&&lb_is_binary_fx, \
&&lb_is_binary_fy, \
&&lb_is_bitstring_fx, \
&&lb_is_bitstring_fy, \
&&lb_is_boolean_fx, \
&&lb_is_boolean_fy, \
&&lb_is_eq_fss, \
&&lb_is_eq_exact_fxx, \
&&lb_is_eq_exact_fxy, \
&&lb_is_eq_exact_fyy, \
&&lb_is_float_fx, \
&&lb_is_float_fy, \
&&lb_is_function_fx, \
&&lb_is_function_fy, \
&&lb_is_function2_fSs, \
&&lb_is_ge_fxx, \
&&lb_is_ge_fxc, \
&&lb_is_ge_fcx, \
&&lb_is_ge_fss, \
&&lb_is_integer_fx, \
&&lb_is_integer_fy, \
&&lb_is_integer_allocate_fxtt, \
&&lb_is_list_fx, \
&&lb_is_list_fy, \
&&lb_is_lt_fxx, \
&&lb_is_lt_fxc, \
&&lb_is_lt_fcx, \
&&lb_is_lt_fss, \
&&lb_is_map_fx, \
&&lb_is_map_fy, \
&&lb_is_ne_fss, \
&&lb_is_ne_exact_fSS, \
&&lb_is_nil_fx, \
&&lb_is_nil_fy, \
&&lb_is_nonempty_list_fx, \
&&lb_is_nonempty_list_fy, \
&&lb_is_nonempty_list_allocate_frtt, \
&&lb_is_nonempty_list_allocate_fxtt, \
&&lb_is_nonempty_list_get_list_frxx, \
&&lb_is_nonempty_list_get_list_fxxx, \
&&lb_is_nonempty_list_test_heap_fIt, \
&&lb_is_number_fx, \
&&lb_is_number_fy, \
&&lb_is_pid_fx, \
&&lb_is_pid_fy, \
&&lb_is_port_fx, \
&&lb_is_port_fy, \
&&lb_is_reference_fx, \
&&lb_is_reference_fy, \
&&lb_is_tagged_tuple_frAa, \
&&lb_is_tagged_tuple_fxAa, \
&&lb_is_tagged_tuple_fyAa, \
&&lb_is_tuple_fr, \
&&lb_is_tuple_fx, \
&&lb_is_tuple_fy, \
&&lb_is_tuple_of_arity_frA, \
&&lb_is_tuple_of_arity_fxA, \
&&lb_is_tuple_of_arity_fyA, \
&&lb_jump_f, \
&&lb_label_L, \
&&lb_line_I, \
&&lb_loop_rec_end_f, \
&&lb_move_nx, \
&&lb_move_rx, \
&&lb_move_ry, \
&&lb_move_xr, \
&&lb_move_xx, \
&&lb_move_xy, \
&&lb_move_yr, \
&&lb_move_yx, \
&&lb_move_yy, \
&&lb_move_cr, \
&&lb_move_cx, \
&&lb_move2_par_xxxx, \
&&lb_move2_par_xxxy, \
&&lb_move2_par_xxyx, \
&&lb_move2_par_xyxy, \
&&lb_move2_par_yxxx, \
&&lb_move2_par_yxxy, \
&&lb_move2_par_yxyx, \
&&lb_move3_xxxxxx, \
&&lb_move3_xyxyxy, \
&&lb_move3_yxyxyx, \
&&lb_move_call_xf, \
&&lb_move_call_yf, \
&&lb_move_call_cf, \
&&lb_move_call_last_xfQ, \
&&lb_move_call_last_yfQ, \
&&lb_move_call_last_cfQ, \
&&lb_move_call_only_xf, \
&&lb_move_call_only_cf, \
&&lb_move_deallocate_return_nQ, \
&&lb_move_deallocate_return_xQ, \
&&lb_move_deallocate_return_yQ, \
&&lb_move_deallocate_return_cQ, \
&&lb_move_dup_xxx, \
&&lb_move_dup_xxy, \
&&lb_move_dup_yxx, \
&&lb_move_dup_yxy, \
&&lb_move_jump_fn, \
&&lb_move_jump_fx, \
&&lb_move_jump_fy, \
&&lb_move_jump_fc, \
&&lb_move_return_n, \
&&lb_move_return_x, \
&&lb_move_return_c, \
&&lb_move_shift_xxx, \
&&lb_move_shift_xxy, \
&&lb_move_shift_xyx, \
&&lb_move_shift_yxx, \
&&lb_move_window3_xxxy, \
&&lb_move_window4_xxxxy, \
&&lb_move_window5_xxxxxy, \
&&lb_move_x1_c, \
&&lb_move_x2_c, \
&&lb_new_map_dtI, \
&&lb_node_x, \
&&lb_node_y, \
&&lb_normal_exit, \
&&lb_on_load, \
&&lb_put_list_rnr, \
&&lb_put_list_rnx, \
&&lb_put_list_rxr, \
&&lb_put_list_rxx, \
&&lb_put_list_xnx, \
&&lb_put_list_xxr, \
&&lb_put_list_xxx, \
&&lb_put_list_xyx, \
&&lb_put_list_ynx, \
&&lb_put_list_yxx, \
&&lb_put_list_yyx, \
&&lb_put_list_xcx, \
&&lb_put_list_xcy, \
&&lb_put_list_ycx, \
&&lb_put_list_cxx, \
&&lb_put_list_cyx, \
&&lb_put_list_ssd, \
&&lb_raw_raise, \
&&lb_remove_message, \
&&lb_return, \
&&lb_return_trace, \
&&lb_self_x, \
&&lb_self_y, \
&&lb_send, \
&&lb_set_tuple_element_sSP, \
&&lb_swap_xx, \
&&lb_swap_xy, \
&&lb_swap_temp_xxx, \
&&lb_swap_temp_xyx, \
&&lb_system_limit_j, \
&&lb_test_arity_fxA, \
&&lb_test_arity_fyA, \
&&lb_test_heap_It, \
&&lb_test_heap_1_put_list_Iy, \
&&lb_timeout, \
&&lb_timeout_locked, \
&&lb_trace_jump_W, \
&&lb_try_case_y, \
&&lb_try_case_end_s, \
&&lb_try_end_y, \
&&lb_update_list_xx, \
&&lb_update_list_yx, \
&&lb_update_list_cx, \
&&lb_update_map_assoc_sdtI, \
&&lb_update_map_exact_jsdtI, \
&&lb_wait_locked_f, \
&&lb_wait_timeout_locked_sf, \
&&lb_wait_timeout_locked_int_If, \
&&lb_wait_timeout_unlocked_sf, \
&&lb_wait_timeout_unlocked_int_If, \
&&lb_wait_unlocked_f,

#define DEFINE_COUNTING_OPCODES \
&&lb_count_allocate_tt, \
&&lb_count_allocate_heap_tIt, \
&&lb_count_allocate_heap_zero_tIt, \
&&lb_count_allocate_init_tty, \
&&lb_count_allocate_zero_tt, \
&&lb_count_apply_t, \
&&lb_count_apply_bif, \
&&lb_count_apply_last_tQ, \
&&lb_count_badarg_j, \
&&lb_count_badmatch_x, \
&&lb_count_bif1_fbsd, \
&&lb_count_bif1_body_bsd, \
&&lb_count_bs_add_jsstx, \
&&lb_count_bs_context_to_binary_x, \
&&lb_count_bs_init_writable, \
&&lb_count_bs_put_string_WW, \
&&lb_count_bs_put_utf16_jts, \
&&lb_count_bs_test_tail_imm2_fxW, \
&&lb_count_bs_test_unit_fxt, \
&&lb_count_bs_test_unit8_fx, \
&&lb_count_bs_test_zero_tail2_fx, \
&&lb_count_build_stacktrace, \
&&lb_count_call_bif_e, \
&&lb_count_call_error_handler, \
&&lb_count_call_nif, \
&&lb_count_case_end_x, \
&&lb_count_catch_yf, \
&&lb_count_catch_end_y, \
&&lb_count_continue_exit, \
&&lb_count_deallocate_Q, \
&&lb_count_deallocate_return_Q, \
&&lb_count_ensure_map_x, \
&&lb_count_error_action_code, \
&&lb_count_fconv_Sl, \
&&lb_count_fload_ql, \
&&lb_count_fload_Sl, \
&&lb_count_fstore_ld, \
&&lb_count_get_hd_xx, \
&&lb_count_get_hd_xy, \
&&lb_count_get_hd_yx, \
&&lb_count_get_hd_yy, \
&&lb_count_get_list_rry, \
&&lb_count_get_list_rxr, \
&&lb_count_get_list_rxx, \
&&lb_count_get_list_rxy, \
&&lb_count_get_list_ryr, \
&&lb_count_get_list_xrx, \
&&lb_count_get_list_xxx, \
&&lb_count_get_list_xxy, \
&&lb_count_get_list_xyx, \
&&lb_count_get_list_xyy, \
&&lb_count_get_list_yxx, \
&&lb_count_get_list_yxy, \
&&lb_count_get_list_yyx, \
&&lb_count_get_list_yyy, \
&&lb_count_get_tl_xx, \
&&lb_count_get_tl_xy, \
&&lb_count_get_tl_yx, \
&&lb_count_get_tl_yy, \
&&lb_count_i_apply, \
&&lb_count_i_apply_fun, \
&&lb_count_i_apply_fun_last_Q, \
&&lb_count_i_apply_fun_only, \
&&lb_count_i_apply_last_Q, \
&&lb_count_i_apply_only, \
&&lb_count_i_band_xcjtd, \
&&lb_count_i_band_ssjtd, \
&&lb_count_i_bif2_fbssd, \
&&lb_count_i_bif2_body_bssd, \
&&lb_count_i_bor_jIssd, \
&&lb_count_i_bs_append_jIttsx, \
&&lb_count_i_bs_get_binary2_fxtstx, \
&&lb_count_i_bs_get_binary_all2_fxttx, \
&&lb_count_i_bs_get_binary_all_reuse_xft, \
&&lb_count_i_bs_get_binary_imm2_fxtWtx, \
&&lb_count_i_bs_get_float2_fxtstx, \
&&lb_count_i_bs_get_integer_fttxsx, \
&&lb_count_i_bs_get_integer_16_xfx, \
&&lb_count_i_bs_get_integer_32_xfx, \
&&lb_count_i_bs_get_integer_8_xfx, \
&&lb_count_i_bs_get_integer_imm_xWtftx, \
&&lb_count_i_bs_get_integer_small_imm_xWftx, \
&&lb_count_i_bs_get_utf16_xftx, \
&&lb_count_i_bs_get_utf8_xfx, \
&&lb_count_i_bs_init_Wtx, \
&&lb_count_i_bs_init_bits_Wtx, \
&&lb_count_i_bs_init_bits_fail_xjtx, \
&&lb_count_i_bs_init_bits_fail_yjtx, \
&&lb_count_i_bs_init_bits_fail_heap_sIjtx, \
&&lb_count_i_bs_init_bits_heap_WItx, \
&&lb_count_i_bs_init_fail_xjtx, \
&&lb_count_i_bs_init_fail_yjtx, \
&&lb_count_i_bs_init_fail_heap_sIjtx, \
&&lb_count_i_bs_init_heap_WItx, \
&&lb_count_i_bs_match_string_xfWW, \
&&lb_count_i_bs_private_append_jtsSx, \
&&lb_count_i_bs_put_utf8_js, \
&&lb_count_i_bs_restore2_xt, \
&&lb_count_i_bs_save2_xt, \
&&lb_count_i_bs_skip_bits2_fxxt, \
&&lb_count_i_bs_skip_bits2_fxyt, \
&&lb_count_i_bs_skip_bits_all2_fxt, \
&&lb_count_i_bs_skip_bits_imm2_fxW, \
&&lb_count_i_bs_start_match2_xfttx, \
&&lb_count_i_bs_start_match2_yfttx, \
&&lb_count_i_bs_utf16_size_sx, \
&&lb_count_i_bs_utf8_size_sx, \
&&lb_count_i_bs_validate_unicode_js, \
&&lb_count_i_bs_validate_unicode_retract_jsS, \
&&lb_count_i_bsl_ssjtd, \
&&lb_count_i_bsr_ssjtd, \
&&lb_count_i_bxor_jIssd, \
&&lb_count_i_call_f, \
&&lb_count_i_call_ext_e, \
&&lb_count_i_call_ext_last_eQ, \
&&lb_count_i_call_ext_only_e, \
&&lb_count_i_call_fun_t, \
&&lb_count_i_call_fun_last_tQ, \
&&lb_count_i_call_last_fQ, \
&&lb_count_i_call_only_f, \
&&lb_count_i_debug_breakpoint, \
&&lb_count_i_element_xjsd, \
&&lb_count_i_element_yjsd, \
&&lb_count_i_fadd_lll, \
&&lb_count_i_fast_element_xjId, \
&&lb_count_i_fast_element_yjId, \
&&lb_count_i_fdiv_lll, \
&&lb_count_i_fmul_lll, \
&&lb_count_i_fnegate_ll, \
&&lb_count_i_fsub_lll, \
&&lb_count_i_func_info_IaaI, \
&&lb_count_i_gc_bif1_jWstd, \
&&lb_count_i_gc_bif2_jWtssd, \
&&lb_count_i_gc_bif3_jWtssd, \
&&lb_count_i_generic_breakpoint, \
&&lb_count_i_get_sd, \
&&lb_count_i_get_hash_cId, \
&&lb_count_i_get_map_element_fxxx, \
&&lb_count_i_get_map_element_fxxy, \
&&lb_count_i_get_map_element_fyxx, \
&&lb_count_i_get_map_element_fyxy, \
&&lb_count_i_get_map_element_hash_fxcIx, \
&&lb_count_i_get_map_element_hash_fxcIy, \
&&lb_count_i_get_map_element_hash_fycIx, \
&&lb_count_i_get_map_element_hash_fycIy, \
&&lb_count_i_get_map_elements_fsI, \
&&lb_count_i_get_tuple_element_xPx, \
&&lb_count_i_get_tuple_element_xPy, \
&&lb_count_i_get_tuple_element_yPx, \
&&lb_count_i_get_tuple_element_yPy, \
&&lb_count_i_get_tuple_element2_xPx, \
&&lb_count_i_get_tuple_element2y_xPyy, \
&&lb_count_i_get_tuple_element3_xPx, \
&&lb_count_i_hibernate, \
&&lb_count_i_increment_rWtd, \
&&lb_count_i_increment_xWtd, \
&&lb_count_i_increment_yWtd, \
&&lb_count_i_int_bnot_jStd, \
&&lb_count_i_int_div_jtssd, \
&&lb_count_i_is_eq_exact_immed_frc, \
&&lb_count_i_is_eq_exact_immed_fxc, \
&&lb_count_i_is_eq_exact_immed_fyc, \
&&lb_count_i_is_eq_exact_literal_fxc, \
&&lb_count_i_is_eq_exact_literal_fyc, \
&&lb_count_i_is_ne_exact_immed_fxc, \
&&lb_count_i_is_ne_exact_immed_fyc, \
&&lb_count_i_is_ne_exact_literal_fxc, \
&&lb_count_i_is_ne_exact_literal_fyc, \
&&lb_count_i_jump_on_val_xfIW, \
&&lb_count_i_jump_on_val_yfIW, \
&&lb_count_i_jump_on_val_zero_xfI, \
&&lb_count_i_jump_on_val_zero_yfI, \
&&lb_count_i_loop_rec_f, \
&&lb_count_i_m_div_jtssd, \
&&lb_count_i_make_fun_Wt, \
&&lb_count_i_minus_xxjtd, \
&&lb_count_i_minus_ssjtd, \
&&lb_count_i_move_call_ext_ce, \
&&lb_count_i_move_call_ext_last_eQc, \
&&lb_count_i_move_call_ext_only_ec, \
&&lb_count_i_new_bs_put_binary_jsts, \
&&lb_count_i_new_bs_put_binary_all_jst, \
&&lb_count_i_new_bs_put_binary_imm_jWs, \
&&lb_count_i_new_bs_put_float_jsts, \
&&lb_count_i_new_bs_put_float_imm_jWts, \
&&lb_count_i_new_bs_put_integer_jsts, \
&&lb_count_i_new_bs_put_integer_imm_jWts, \
&&lb_count_i_new_small_map_lit_dtq, \
&&lb_count_i_perf_counter, \
&&lb_count_i_plus_xxjtd, \
&&lb_count_i_plus_xyjtd, \
&&lb_count_i_plus_ssjtd, \
&&lb_count_i_put_tuple_xI, \
&&lb_count_i_put_tuple_yI, \
&&lb_count_i_raise, \
&&lb_count_i_recv_mark, \
&&lb_count_i_recv_set, \
&&lb_count_i_rem_xxjtd, \
&&lb_count_i_rem_ssjtd, \
&&lb_count_i_return_time_trace, \
&&lb_count_i_return_to_trace, \
&&lb_count_i_select_tuple_arity_xfI, \
&&lb_count_i_select_tuple_arity_yfI, \
&&lb_count_i_select_tuple_arity2_xfAA, \
&&lb_count_i_select_tuple_arity2_yfAA, \
&&lb_count_i_select_val2_xfcc, \
&&lb_count_i_select_val2_yfcc, \
&&lb_count_i_select_val_bins_xfI, \
&&lb_count_i_select_val_bins_yfI, \
&&lb_count_i_select_val_lins_xfI, \
&&lb_count_i_select_val_lins_yfI, \
&&lb_count_i_times_jtssd, \
&&lb_count_i_trim_t, \
&&lb_count_i_wait_error, \
&&lb_count_i_wait_error_locked, \
&&lb_count_i_yield, \
&&lb_count_if_end, \
&&lb_count_init_y, \
&&lb_count_init2_yy, \
&&lb_count_init3_yyy, \
&&lb_count_int_code_end, \
&&lb_count_is_atom_fx, \
&&lb_count_is_atom_fy, \
&&lb_count_is_binary_fx, \
&&lb_count_is_binary_fy, \
&&lb_count_is_bitstring_fx, \
&&lb_count_is_bitstring_fy, \
&&lb_count_is_boolean_fx, \
&&lb_count_is_boolean_fy, \
&&lb_count_is_eq_fss, \
&&lb_count_is_eq_exact_fxx, \
&&lb_count_is_eq_exact_fxy, \
&&lb_count_is_eq_exact_fyy, \
&&lb_count_is_float_fx, \
&&lb_count_is_float_fy, \
&&lb_count_is_function_fx, \
&&lb_count_is_function_fy, \
&&lb_count_is_function2_fSs, \
&&lb_count_is_ge_fxx, \
&&lb_count_is_ge_fxc, \
&&lb_count_is_ge_fcx, \
&&lb_count_is_ge_fss, \
&&lb_count_is_integer_fx, \
&&lb_count_is_integer_fy, \
&&lb_count_is_integer_allocate_fxtt, \
&&lb_count_is_list_fx, \
&&lb_count_is_list_fy, \
&&lb_count_is_lt_fxx, \
&&lb_count_is_lt_fxc, \
&&lb_count_is_lt_fcx, \
&&lb_count_is_lt_fss, \
&&lb_count_is_map_fx, \
&&lb_count_is_map_fy, \
&&lb_count_is_ne_fss, \
&&lb_count_is_ne_exact_fSS, \
&&lb_count_is_nil_fx, \
&&lb_count_is_nil_fy, \
&&lb_count_is_nonempty_list_fx, \
&&lb_count_is_nonempty_list_fy, \
&&lb_count_is_nonempty_list_allocate_frtt, \
&&lb_count_is_nonempty_list_allocate_fxtt, \
&&lb_count_is_nonempty_list_get_list_frxx, \
&&lb_count_is_nonempty_list_get_list_fxxx, \
&&lb_count_is_nonempty_list_test_heap_fIt, \
&&lb_count_is_number_fx, \
&&lb_count_is_number_fy, \
&&lb_count_is_pid_fx, \
&&lb_count_is_pid_fy, \
&&lb_count_is_port_fx, \
&&lb_count_is_port_fy, \
&&lb_count_is_reference_fx, \
&&lb_count_is_reference_fy, \
&&lb_count_is_tagged_tuple_frAa, \
&&lb_count_is_tagged_tuple_fxAa, \
&&lb_count_is_tagged_tuple_fyAa, \
&&lb_count_is_tuple_fr, \
&&lb_count_is_tuple_fx, \
&&lb_count_is_tuple_fy, \
&&lb_count_is_tuple_of_arity_frA, \
&&lb_count_is_tuple_of_arity_fxA, \
&&lb_count_is_tuple_of_arity_fyA, \
&&lb_count_jump_f, \
&&lb_count_label_L, \
&&lb_count_line_I, \
&&lb_count_loop_rec_end_f, \
&&lb_count_move_nx, \
&&lb_count_move_rx, \
&&lb_count_move_ry, \
&&lb_count_move_xr, \
&&lb_count_move_xx, \
&&lb_count_move_xy, \
&&lb_count_move_yr, \
&&lb_count_move_yx, \
&&lb_count_move_yy, \
&&lb_count_move_cr, \
&&lb_count_move_cx, \
&&lb_count_move2_par_xxxx, \
&&lb_count_move2_par_xxxy, \
&&lb_count_move2_par_xxyx, \
&&lb_count_move2_par_xyxy, \
&&lb_count_move2_par_yxxx, \
&&lb_count_move2_par_yxxy, \
&&lb_count_move2_par_yxyx, \
&&lb_count_move3_xxxxxx, \
&&lb_count_move3_xyxyxy, \
&&lb_count_move3_yxyxyx, \
&&lb_count_move_call_xf, \
&&lb_count_move_call_yf, \
&&lb_count_move_call_cf, \
&&lb_count_move_call_last_xfQ, \
&&lb_count_move_call_last_yfQ, \
&&lb_count_move_call_last_cfQ, \
&&lb_count_move_call_only_xf, \
&&lb_count_move_call_only_cf, \
&&lb_count_move_deallocate_return_nQ, \
&&lb_count_move_deallocate_return_xQ, \
&&lb_count_move_deallocate_return_yQ, \
&&lb_count_move_deallocate_return_cQ, \
&&lb_count_move_dup_xxx, \
&&lb_count_move_dup_xxy, \
&&lb_count_move_dup_yxx, \
&&lb_count_move_dup_yxy, \
&&lb_count_move_jump_fn, \
&&lb_count_move_jump_fx, \
&&lb_count_move_jump_fy, \
&&lb_count_move_jump_fc, \
&&lb_count_move_return_n, \
&&lb_count_move_return_x, \
&&lb_count_move_return_c, \
&&lb_count_move_shift_xxx, \
&&lb_count_move_shift_xxy, \
&&lb_count_move_shift_xyx, \
&&lb_count_move_shift_yxx, \
&&lb_count_move_window3_xxxy, \
&&lb_count_move_window4_xxxxy, \
&&lb_count_move_window5_xxxxxy, \
&&lb_count_move_x1_c, \
&&lb_count_move_x2_c, \
&&lb_count_new_map_dtI, \
&&lb_count_node_x, \
&&lb_count_node_y, \
&&lb_count_normal_exit, \
&&lb_count_on_load, \
&&lb_count_put_list_rnr, \
&&lb_count_put_list_rnx, \
&&lb_count_put_list_rxr, \
&&lb_count_put_list_rxx, \
&&lb_count_put_list_xnx, \
&&lb_count_put_list_xxr, \
&&lb_count_put_list_xxx, \
&&lb_count_put_list_xyx, \
&&lb_count_put_list_ynx, \
&&lb_count_put_list_yxx, \
&&lb_count_put_list_yyx, \
&&lb_count_put_list_xcx, \
&&lb_count_put_list_xcy, \
&&lb_count_put_list_ycx, \
&&lb_count_put_list_cxx, \
&&lb_count_put_list_cyx, \
&&lb_count_put_list_ssd, \
&&lb_count_raw_raise, \
&&lb_count_remove_message, \
&&lb_count_return, \
&&lb_count_return_trace, \
&&lb_count_self_x, \
&&lb_count_self_y, \
&&lb_count_send, \
&&lb_count_set_tuple_element_sSP, \
&&lb_count_swap_xx, \
&&lb_count_swap_xy, \
&&lb_count_swap_temp_xxx, \
&&lb_count_swap_temp_xyx, \
&&lb_count_system_limit_j, \
&&lb_count_test_arity_fxA, \
&&lb_count_test_arity_fyA, \
&&lb_count_test_heap_It, \
&&lb_count_test_heap_1_put_list_Iy, \
&&lb_count_timeout, \
&&lb_count_timeout_locked, \
&&lb_count_trace_jump_W, \
&&lb_count_try_case_y, \
&&lb_count_try_case_end_s, \
&&lb_count_try_end_y, \
&&lb_count_update_list_xx, \
&&lb_count_update_list_yx, \
&&lb_count_update_list_cx, \
&&lb_count_update_map_assoc_sdtI, \
&&lb_count_update_map_exact_jsdtI, \
&&lb_count_wait_locked_f, \
&&lb_count_wait_timeout_locked_sf, \
&&lb_count_wait_timeout_locked_int_If, \
&&lb_count_wait_timeout_unlocked_sf, \
&&lb_count_wait_timeout_unlocked_int_If, \
&&lb_count_wait_unlocked_f,

#define DEFINE_COUNTING_LABELS \
CountCase(allocate_tt): erts_instr_count[0]++; goto lb_allocate_tt; \
CountCase(allocate_heap_tIt): erts_instr_count[1]++; goto lb_allocate_heap_tIt; \
CountCase(allocate_heap_zero_tIt): erts_instr_count[2]++; goto lb_allocate_heap_zero_tIt; \
CountCase(allocate_init_tty): erts_instr_count[3]++; goto lb_allocate_init_tty; \
CountCase(allocate_zero_tt): erts_instr_count[4]++; goto lb_allocate_zero_tt; \
CountCase(apply_t): erts_instr_count[5]++; goto lb_apply_t; \
CountCase(apply_bif): erts_instr_count[6]++; goto lb_apply_bif; \
CountCase(apply_last_tQ): erts_instr_count[7]++; goto lb_apply_last_tQ; \
CountCase(badarg_j): erts_instr_count[8]++; goto lb_badarg_j; \
CountCase(badmatch_x): erts_instr_count[9]++; goto lb_badmatch_x; \
CountCase(bif1_fbsd): erts_instr_count[10]++; goto lb_bif1_fbsd; \
CountCase(bif1_body_bsd): erts_instr_count[11]++; goto lb_bif1_body_bsd; \
CountCase(bs_add_jsstx): erts_instr_count[12]++; goto lb_bs_add_jsstx; \
CountCase(bs_context_to_binary_x): erts_instr_count[13]++; goto lb_bs_context_to_binary_x; \
CountCase(bs_init_writable): erts_instr_count[14]++; goto lb_bs_init_writable; \
CountCase(bs_put_string_WW): erts_instr_count[15]++; goto lb_bs_put_string_WW; \
CountCase(bs_put_utf16_jts): erts_instr_count[16]++; goto lb_bs_put_utf16_jts; \
CountCase(bs_test_tail_imm2_fxW): erts_instr_count[17]++; goto lb_bs_test_tail_imm2_fxW; \
CountCase(bs_test_unit_fxt): erts_instr_count[18]++; goto lb_bs_test_unit_fxt; \
CountCase(bs_test_unit8_fx): erts_instr_count[19]++; goto lb_bs_test_unit8_fx; \
CountCase(bs_test_zero_tail2_fx): erts_instr_count[20]++; goto lb_bs_test_zero_tail2_fx; \
CountCase(build_stacktrace): erts_instr_count[21]++; goto lb_build_stacktrace; \
CountCase(call_bif_e): erts_instr_count[22]++; goto lb_call_bif_e; \
CountCase(call_error_handler): erts_instr_count[23]++; goto lb_call_error_handler; \
CountCase(call_nif): erts_instr_count[24]++; goto lb_call_nif; \
CountCase(case_end_x): erts_instr_count[25]++; goto lb_case_end_x; \
CountCase(catch_yf): erts_instr_count[26]++; goto lb_catch_yf; \
CountCase(catch_end_y): erts_instr_count[27]++; goto lb_catch_end_y; \
CountCase(continue_exit): erts_instr_count[28]++; goto lb_continue_exit; \
CountCase(deallocate_Q): erts_instr_count[29]++; goto lb_deallocate_Q; \
CountCase(deallocate_return_Q): erts_instr_count[30]++; goto lb_deallocate_return_Q; \
CountCase(ensure_map_x): erts_instr_count[31]++; goto lb_ensure_map_x; \
CountCase(error_action_code): erts_instr_count[32]++; goto lb_error_action_code; \
CountCase(fconv_Sl): erts_instr_count[33]++; goto lb_fconv_Sl; \
CountCase(fload_ql): erts_instr_count[34]++; goto lb_fload_ql; \
CountCase(fload_Sl): erts_instr_count[35]++; goto lb_fload_Sl; \
CountCase(fstore_ld): erts_instr_count[36]++; goto lb_fstore_ld; \
CountCase(get_hd_xx): erts_instr_count[37]++; goto lb_get_hd_xx; \
CountCase(get_hd_xy): erts_instr_count[38]++; goto lb_get_hd_xy; \
CountCase(get_hd_yx): erts_instr_count[39]++; goto lb_get_hd_yx; \
CountCase(get_hd_yy): erts_instr_count[40]++; goto lb_get_hd_yy; \
CountCase(get_list_rry): erts_instr_count[41]++; goto lb_get_list_rry; \
CountCase(get_list_rxr): erts_instr_count[42]++; goto lb_get_list_rxr; \
CountCase(get_list_rxx): erts_instr_count[43]++; goto lb_get_list_rxx; \
CountCase(get_list_rxy): erts_instr_count[44]++; goto lb_get_list_rxy; \
CountCase(get_list_ryr): erts_instr_count[45]++; goto lb_get_list_ryr; \
CountCase(get_list_xrx): erts_instr_count[46]++; goto lb_get_list_xrx; \
CountCase(get_list_xxx): erts_instr_count[47]++; goto lb_get_list_xxx; \
CountCase(get_list_xxy): erts_instr_count[48]++; goto lb_get_list_xxy; \
CountCase(get_list_xyx): erts_instr_count[49]++; goto lb_get_list_xyx; \
CountCase(get_list_xyy): erts_instr_count[50]++; goto lb_get_list_xyy; \
CountCase(get_list_yxx): erts_instr_count[51]++; goto lb_get_list_yxx; \
CountCase(get_list_yxy): erts_instr_count[52]++; goto lb_get_list_yxy; \
CountCase(get_list_yyx): erts_instr_count[53]++; goto lb_get_list_yyx; \
CountCase(get_list_yyy): erts_instr_count[54]++; goto lb_get_list_yyy; \
CountCase(get_tl_xx): erts_instr_count[55]++; goto lb_get_tl_xx; \
CountCase(get_tl_xy): erts_instr_count[56]++; goto lb_get_tl_xy; \
CountCase(get_tl_yx): erts_instr_count[57]++; goto lb_get_tl_yx; \
CountCase(get_tl_yy): erts_instr_count[58]++; goto lb_get_tl_yy; \
CountCase(i_apply): erts_instr_count[59]++; goto lb_i_apply; \
CountCase(i_apply_fun): erts_instr_count[60]++; goto lb_i_apply_fun; \
CountCase(i_apply_fun_last_Q): erts_instr_count[61]++; goto lb_i_apply_fun_last_Q; \
CountCase(i_apply_fun_only): erts_instr_count[62]++; goto lb_i_apply_fun_only; \
CountCase(i_apply_last_Q): erts_instr_count[63]++; goto lb_i_apply_last_Q; \
CountCase(i_apply_only): erts_instr_count[64]++; goto lb_i_apply_only; \
CountCase(i_band_xcjtd): erts_instr_count[65]++; goto lb_i_band_xcjtd; \
CountCase(i_band_ssjtd): erts_instr_count[66]++; goto lb_i_band_ssjtd; \
CountCase(i_bif2_fbssd): erts_instr_count[67]++; goto lb_i_bif2_fbssd; \
CountCase(i_bif2_body_bssd): erts_instr_count[68]++; goto lb_i_bif2_body_bssd; \
CountCase(i_bor_jIssd): erts_instr_count[69]++; goto lb_i_bor_jIssd; \
CountCase(i_bs_append_jIttsx): erts_instr_count[70]++; goto lb_i_bs_append_jIttsx; \
CountCase(i_bs_get_binary2_fxtstx): erts_instr_count[71]++; goto lb_i_bs_get_binary2_fxtstx; \
CountCase(i_bs_get_binary_all2_fxttx): erts_instr_count[72]++; goto lb_i_bs_get_binary_all2_fxttx; \
CountCase(i_bs_get_binary_all_reuse_xft): erts_instr_count[73]++; goto lb_i_bs_get_binary_all_reuse_xft; \
CountCase(i_bs_get_binary_imm2_fxtWtx): erts_instr_count[74]++; goto lb_i_bs_get_binary_imm2_fxtWtx; \
CountCase(i_bs_get_float2_fxtstx): erts_instr_count[75]++; goto lb_i_bs_get_float2_fxtstx; \
CountCase(i_bs_get_integer_fttxsx): erts_instr_count[76]++; goto lb_i_bs_get_integer_fttxsx; \
CountCase(i_bs_get_integer_16_xfx): erts_instr_count[77]++; goto lb_i_bs_get_integer_16_xfx; \
CountCase(i_bs_get_integer_32_xfx): erts_instr_count[78]++; goto lb_i_bs_get_integer_32_xfx; \
CountCase(i_bs_get_integer_8_xfx): erts_instr_count[79]++; goto lb_i_bs_get_integer_8_xfx; \
CountCase(i_bs_get_integer_imm_xWtftx): erts_instr_count[80]++; goto lb_i_bs_get_integer_imm_xWtftx; \
CountCase(i_bs_get_integer_small_imm_xWftx): erts_instr_count[81]++; goto lb_i_bs_get_integer_small_imm_xWftx; \
CountCase(i_bs_get_utf16_xftx): erts_instr_count[82]++; goto lb_i_bs_get_utf16_xftx; \
CountCase(i_bs_get_utf8_xfx): erts_instr_count[83]++; goto lb_i_bs_get_utf8_xfx; \
CountCase(i_bs_init_Wtx): erts_instr_count[84]++; goto lb_i_bs_init_Wtx; \
CountCase(i_bs_init_bits_Wtx): erts_instr_count[85]++; goto lb_i_bs_init_bits_Wtx; \
CountCase(i_bs_init_bits_fail_xjtx): erts_instr_count[86]++; goto lb_i_bs_init_bits_fail_xjtx; \
CountCase(i_bs_init_bits_fail_yjtx): erts_instr_count[87]++; goto lb_i_bs_init_bits_fail_yjtx; \
CountCase(i_bs_init_bits_fail_heap_sIjtx): erts_instr_count[88]++; goto lb_i_bs_init_bits_fail_heap_sIjtx; \
CountCase(i_bs_init_bits_heap_WItx): erts_instr_count[89]++; goto lb_i_bs_init_bits_heap_WItx; \
CountCase(i_bs_init_fail_xjtx): erts_instr_count[90]++; goto lb_i_bs_init_fail_xjtx; \
CountCase(i_bs_init_fail_yjtx): erts_instr_count[91]++; goto lb_i_bs_init_fail_yjtx; \
CountCase(i_bs_init_fail_heap_sIjtx): erts_instr_count[92]++; goto lb_i_bs_init_fail_heap_sIjtx; \
CountCase(i_bs_init_heap_WItx): erts_instr_count[93]++; goto lb_i_bs_init_heap_WItx; \
CountCase(i_bs_match_string_xfWW): erts_instr_count[94]++; goto lb_i_bs_match_string_xfWW; \
CountCase(i_bs_private_append_jtsSx): erts_instr_count[95]++; goto lb_i_bs_private_append_jtsSx; \
CountCase(i_bs_put_utf8_js): erts_instr_count[96]++; goto lb_i_bs_put_utf8_js; \
CountCase(i_bs_restore2_xt): erts_instr_count[97]++; goto lb_i_bs_restore2_xt; \
CountCase(i_bs_save2_xt): erts_instr_count[98]++; goto lb_i_bs_save2_xt; \
CountCase(i_bs_skip_bits2_fxxt): erts_instr_count[99]++; goto lb_i_bs_skip_bits2_fxxt; \
CountCase(i_bs_skip_bits2_fxyt): erts_instr_count[100]++; goto lb_i_bs_skip_bits2_fxyt; \
CountCase(i_bs_skip_bits_all2_fxt): erts_instr_count[101]++; goto lb_i_bs_skip_bits_all2_fxt; \
CountCase(i_bs_skip_bits_imm2_fxW): erts_instr_count[102]++; goto lb_i_bs_skip_bits_imm2_fxW; \
CountCase(i_bs_start_match2_xfttx): erts_instr_count[103]++; goto lb_i_bs_start_match2_xfttx; \
CountCase(i_bs_start_match2_yfttx): erts_instr_count[104]++; goto lb_i_bs_start_match2_yfttx; \
CountCase(i_bs_utf16_size_sx): erts_instr_count[105]++; goto lb_i_bs_utf16_size_sx; \
CountCase(i_bs_utf8_size_sx): erts_instr_count[106]++; goto lb_i_bs_utf8_size_sx; \
CountCase(i_bs_validate_unicode_js): erts_instr_count[107]++; goto lb_i_bs_validate_unicode_js; \
CountCase(i_bs_validate_unicode_retract_jsS): erts_instr_count[108]++; goto lb_i_bs_validate_unicode_retract_jsS; \
CountCase(i_bsl_ssjtd): erts_instr_count[109]++; goto lb_i_bsl_ssjtd; \
CountCase(i_bsr_ssjtd): erts_instr_count[110]++; goto lb_i_bsr_ssjtd; \
CountCase(i_bxor_jIssd): erts_instr_count[111]++; goto lb_i_bxor_jIssd; \
CountCase(i_call_f): erts_instr_count[112]++; goto lb_i_call_f; \
CountCase(i_call_ext_e): erts_instr_count[113]++; goto lb_i_call_ext_e; \
CountCase(i_call_ext_last_eQ): erts_instr_count[114]++; goto lb_i_call_ext_last_eQ; \
CountCase(i_call_ext_only_e): erts_instr_count[115]++; goto lb_i_call_ext_only_e; \
CountCase(i_call_fun_t): erts_instr_count[116]++; goto lb_i_call_fun_t; \
CountCase(i_call_fun_last_tQ): erts_instr_count[117]++; goto lb_i_call_fun_last_tQ; \
CountCase(i_call_last_fQ): erts_instr_count[118]++; goto lb_i_call_last_fQ; \
CountCase(i_call_only_f): erts_instr_count[119]++; goto lb_i_call_only_f; \
CountCase(i_debug_breakpoint): erts_instr_count[120]++; goto lb_i_debug_breakpoint; \
CountCase(i_element_xjsd): erts_instr_count[121]++; goto lb_i_element_xjsd; \
CountCase(i_element_yjsd): erts_instr_count[122]++; goto lb_i_element_yjsd; \
CountCase(i_fadd_lll): erts_instr_count[123]++; goto lb_i_fadd_lll; \
CountCase(i_fast_element_xjId): erts_instr_count[124]++; goto lb_i_fast_element_xjId; \
CountCase(i_fast_element_yjId): erts_instr_count[125]++; goto lb_i_fast_element_yjId; \
CountCase(i_fdiv_lll): erts_instr_count[126]++; goto lb_i_fdiv_lll; \
CountCase(i_fmul_lll): erts_instr_count[127]++; goto lb_i_fmul_lll; \
CountCase(i_fnegate_ll): erts_instr_count[128]++; goto lb_i_fnegate_ll; \
CountCase(i_fsub_lll): erts_instr_count[129]++; goto lb_i_fsub_lll; \
CountCase(i_func_info_IaaI): erts_instr_count[130]++; goto lb_i_func_info_IaaI; \
CountCase(i_gc_bif1_jWstd): erts_instr_count[131]++; goto lb_i_gc_bif1_jWstd; \
CountCase(i_gc_bif2_jWtssd): erts_instr_count[132]++; goto lb_i_gc_bif2_jWtssd; \
CountCase(i_gc_bif3_jWtssd): erts_instr_count[133]++; goto lb_i_gc_bif3_jWtssd; \
CountCase(i_generic_breakpoint): erts_instr_count[134]++; goto lb_i_generic_breakpoint; \
CountCase(i_get_sd): erts_instr_count[135]++; goto lb_i_get_sd; \
CountCase(i_get_hash_cId): erts_instr_count[136]++; goto lb_i_get_hash_cId; \
CountCase(i_get_map_element_fxxx): erts_instr_count[137]++; goto lb_i_get_map_element_fxxx; \
CountCase(i_get_map_element_fxxy): erts_instr_count[138]++; goto lb_i_get_map_element_fxxy; \
CountCase(i_get_map_element_fyxx): erts_instr_count[139]++; goto lb_i_get_map_element_fyxx; \
CountCase(i_get_map_element_fyxy): erts_instr_count[140]++; goto lb_i_get_map_element_fyxy; \
CountCase(i_get_map_element_hash_fxcIx): erts_instr_count[141]++; goto lb_i_get_map_element_hash_fxcIx; \
CountCase(i_get_map_element_hash_fxcIy): erts_instr_count[142]++; goto lb_i_get_map_element_hash_fxcIy; \
CountCase(i_get_map_element_hash_fycIx): erts_instr_count[143]++; goto lb_i_get_map_element_hash_fycIx; \
CountCase(i_get_map_element_hash_fycIy): erts_instr_count[144]++; goto lb_i_get_map_element_hash_fycIy; \
CountCase(i_get_map_elements_fsI): erts_instr_count[145]++; goto lb_i_get_map_elements_fsI; \
CountCase(i_get_tuple_element_xPx): erts_instr_count[146]++; goto lb_i_get_tuple_element_xPx; \
CountCase(i_get_tuple_element_xPy): erts_instr_count[147]++; goto lb_i_get_tuple_element_xPy; \
CountCase(i_get_tuple_element_yPx): erts_instr_count[148]++; goto lb_i_get_tuple_element_yPx; \
CountCase(i_get_tuple_element_yPy): erts_instr_count[149]++; goto lb_i_get_tuple_element_yPy; \
CountCase(i_get_tuple_element2_xPx): erts_instr_count[150]++; goto lb_i_get_tuple_element2_xPx; \
CountCase(i_get_tuple_element2y_xPyy): erts_instr_count[151]++; goto lb_i_get_tuple_element2y_xPyy; \
CountCase(i_get_tuple_element3_xPx): erts_instr_count[152]++; goto lb_i_get_tuple_element3_xPx; \
CountCase(i_hibernate): erts_instr_count[153]++; goto lb_i_hibernate; \
CountCase(i_increment_rWtd): erts_instr_count[154]++; goto lb_i_increment_rWtd; \
CountCase(i_increment_xWtd): erts_instr_count[155]++; goto lb_i_increment_xWtd; \
CountCase(i_increment_yWtd): erts_instr_count[156]++; goto lb_i_increment_yWtd; \
CountCase(i_int_bnot_jStd): erts_instr_count[157]++; goto lb_i_int_bnot_jStd; \
CountCase(i_int_div_jtssd): erts_instr_count[158]++; goto lb_i_int_div_jtssd; \
CountCase(i_is_eq_exact_immed_frc): erts_instr_count[159]++; goto lb_i_is_eq_exact_immed_frc; \
CountCase(i_is_eq_exact_immed_fxc): erts_instr_count[160]++; goto lb_i_is_eq_exact_immed_fxc; \
CountCase(i_is_eq_exact_immed_fyc): erts_instr_count[161]++; goto lb_i_is_eq_exact_immed_fyc; \
CountCase(i_is_eq_exact_literal_fxc): erts_instr_count[162]++; goto lb_i_is_eq_exact_literal_fxc; \
CountCase(i_is_eq_exact_literal_fyc): erts_instr_count[163]++; goto lb_i_is_eq_exact_literal_fyc; \
CountCase(i_is_ne_exact_immed_fxc): erts_instr_count[164]++; goto lb_i_is_ne_exact_immed_fxc; \
CountCase(i_is_ne_exact_immed_fyc): erts_instr_count[165]++; goto lb_i_is_ne_exact_immed_fyc; \
CountCase(i_is_ne_exact_literal_fxc): erts_instr_count[166]++; goto lb_i_is_ne_exact_literal_fxc; \
CountCase(i_is_ne_exact_literal_fyc): erts_instr_count[167]++; goto lb_i_is_ne_exact_literal_fyc; \
CountCase(i_jump_on_val_xfIW): erts_instr_count[168]++; goto lb_i_jump_on_val_xfIW; \
CountCase(i_jump_on_val_yfIW): erts_instr_count[169]++; goto lb_i_jump_on_val_yfIW; \
CountCase(i_jump_on_val_zero_xfI): erts_instr_count[170]++; goto lb_i_jump_on_val_zero_xfI; \
CountCase(i_jump_on_val_zero_yfI): erts_instr_count[171]++; goto lb_i_jump_on_val_zero_yfI; \
CountCase(i_loop_rec_f): erts_instr_count[172]++; goto lb_i_loop_rec_f; \
CountCase(i_m_div_jtssd): erts_instr_count[173]++; goto lb_i_m_div_jtssd; \
CountCase(i_make_fun_Wt): erts_instr_count[174]++; goto lb_i_make_fun_Wt; \
CountCase(i_minus_xxjtd): erts_instr_count[175]++; goto lb_i_minus_xxjtd; \
CountCase(i_minus_ssjtd): erts_instr_count[176]++; goto lb_i_minus_ssjtd; \
CountCase(i_move_call_ext_ce): erts_instr_count[177]++; goto lb_i_move_call_ext_ce; \
CountCase(i_move_call_ext_last_eQc): erts_instr_count[178]++; goto lb_i_move_call_ext_last_eQc; \
CountCase(i_move_call_ext_only_ec): erts_instr_count[179]++; goto lb_i_move_call_ext_only_ec; \
CountCase(i_new_bs_put_binary_jsts): erts_instr_count[180]++; goto lb_i_new_bs_put_binary_jsts; \
CountCase(i_new_bs_put_binary_all_jst): erts_instr_count[181]++; goto lb_i_new_bs_put_binary_all_jst; \
CountCase(i_new_bs_put_binary_imm_jWs): erts_instr_count[182]++; goto lb_i_new_bs_put_binary_imm_jWs; \
CountCase(i_new_bs_put_float_jsts): erts_instr_count[183]++; goto lb_i_new_bs_put_float_jsts; \
CountCase(i_new_bs_put_float_imm_jWts): erts_instr_count[184]++; goto lb_i_new_bs_put_float_imm_jWts; \
CountCase(i_new_bs_put_integer_jsts): erts_instr_count[185]++; goto lb_i_new_bs_put_integer_jsts; \
CountCase(i_new_bs_put_integer_imm_jWts): erts_instr_count[186]++; goto lb_i_new_bs_put_integer_imm_jWts; \
CountCase(i_new_small_map_lit_dtq): erts_instr_count[187]++; goto lb_i_new_small_map_lit_dtq; \
CountCase(i_perf_counter): erts_instr_count[188]++; goto lb_i_perf_counter; \
CountCase(i_plus_xxjtd): erts_instr_count[189]++; goto lb_i_plus_xxjtd; \
CountCase(i_plus_xyjtd): erts_instr_count[190]++; goto lb_i_plus_xyjtd; \
CountCase(i_plus_ssjtd): erts_instr_count[191]++; goto lb_i_plus_ssjtd; \
CountCase(i_put_tuple_xI): erts_instr_count[192]++; goto lb_i_put_tuple_xI; \
CountCase(i_put_tuple_yI): erts_instr_count[193]++; goto lb_i_put_tuple_yI; \
CountCase(i_raise): erts_instr_count[194]++; goto lb_i_raise; \
CountCase(i_recv_mark): erts_instr_count[195]++; goto lb_i_recv_mark; \
CountCase(i_recv_set): erts_instr_count[196]++; goto lb_i_recv_set; \
CountCase(i_rem_xxjtd): erts_instr_count[197]++; goto lb_i_rem_xxjtd; \
CountCase(i_rem_ssjtd): erts_instr_count[198]++; goto lb_i_rem_ssjtd; \
CountCase(i_return_time_trace): erts_instr_count[199]++; goto lb_i_return_time_trace; \
CountCase(i_return_to_trace): erts_instr_count[200]++; goto lb_i_return_to_trace; \
CountCase(i_select_tuple_arity_xfI): erts_instr_count[201]++; goto lb_i_select_tuple_arity_xfI; \
CountCase(i_select_tuple_arity_yfI): erts_instr_count[202]++; goto lb_i_select_tuple_arity_yfI; \
CountCase(i_select_tuple_arity2_xfAA): erts_instr_count[203]++; goto lb_i_select_tuple_arity2_xfAA; \
CountCase(i_select_tuple_arity2_yfAA): erts_instr_count[204]++; goto lb_i_select_tuple_arity2_yfAA; \
CountCase(i_select_val2_xfcc): erts_instr_count[205]++; goto lb_i_select_val2_xfcc; \
CountCase(i_select_val2_yfcc): erts_instr_count[206]++; goto lb_i_select_val2_yfcc; \
CountCase(i_select_val_bins_xfI): erts_instr_count[207]++; goto lb_i_select_val_bins_xfI; \
CountCase(i_select_val_bins_yfI): erts_instr_count[208]++; goto lb_i_select_val_bins_yfI; \
CountCase(i_select_val_lins_xfI): erts_instr_count[209]++; goto lb_i_select_val_lins_xfI; \
CountCase(i_select_val_lins_yfI): erts_instr_count[210]++; goto lb_i_select_val_lins_yfI; \
CountCase(i_times_jtssd): erts_instr_count[211]++; goto lb_i_times_jtssd; \
CountCase(i_trim_t): erts_instr_count[212]++; goto lb_i_trim_t; \
CountCase(i_wait_error): erts_instr_count[213]++; goto lb_i_wait_error; \
CountCase(i_wait_error_locked): erts_instr_count[214]++; goto lb_i_wait_error_locked; \
CountCase(i_yield): erts_instr_count[215]++; goto lb_i_yield; \
CountCase(if_end): erts_instr_count[216]++; goto lb_if_end; \
CountCase(init_y): erts_instr_count[217]++; goto lb_init_y; \
CountCase(init2_yy): erts_instr_count[218]++; goto lb_init2_yy; \
CountCase(init3_yyy): erts_instr_count[219]++; goto lb_init3_yyy; \
CountCase(int_code_end): erts_instr_count[220]++; goto lb_int_code_end; \
CountCase(is_atom_fx): erts_instr_count[221]++; goto lb_is_atom_fx; \
CountCase(is_atom_fy): erts_instr_count[222]++; goto lb_is_atom_fy; \
CountCase(is_binary_fx): erts_instr_count[223]++; goto lb_is_binary_fx; \
CountCase(is_binary_fy): erts_instr_count[224]++; goto lb_is_binary_fy; \
CountCase(is_bitstring_fx): erts_instr_count[225]++; goto lb_is_bitstring_fx; \
CountCase(is_bitstring_fy): erts_instr_count[226]++; goto lb_is_bitstring_fy; \
CountCase(is_boolean_fx): erts_instr_count[227]++; goto lb_is_boolean_fx; \
CountCase(is_boolean_fy): erts_instr_count[228]++; goto lb_is_boolean_fy; \
CountCase(is_eq_fss): erts_instr_count[229]++; goto lb_is_eq_fss; \
CountCase(is_eq_exact_fxx): erts_instr_count[230]++; goto lb_is_eq_exact_fxx; \
CountCase(is_eq_exact_fxy): erts_instr_count[231]++; goto lb_is_eq_exact_fxy; \
CountCase(is_eq_exact_fyy): erts_instr_count[232]++; goto lb_is_eq_exact_fyy; \
CountCase(is_float_fx): erts_instr_count[233]++; goto lb_is_float_fx; \
CountCase(is_float_fy): erts_instr_count[234]++; goto lb_is_float_fy; \
CountCase(is_function_fx): erts_instr_count[235]++; goto lb_is_function_fx; \
CountCase(is_function_fy): erts_instr_count[236]++; goto lb_is_function_fy; \
CountCase(is_function2_fSs): erts_instr_count[237]++; goto lb_is_function2_fSs; \
CountCase(is_ge_fxx): erts_instr_count[238]++; goto lb_is_ge_fxx; \
CountCase(is_ge_fxc): erts_instr_count[239]++; goto lb_is_ge_fxc; \
CountCase(is_ge_fcx): erts_instr_count[240]++; goto lb_is_ge_fcx; \
CountCase(is_ge_fss): erts_instr_count[241]++; goto lb_is_ge_fss; \
CountCase(is_integer_fx): erts_instr_count[242]++; goto lb_is_integer_fx; \
CountCase(is_integer_fy): erts_instr_count[243]++; goto lb_is_integer_fy; \
CountCase(is_integer_allocate_fxtt): erts_instr_count[244]++; goto lb_is_integer_allocate_fxtt; \
CountCase(is_list_fx): erts_instr_count[245]++; goto lb_is_list_fx; \
CountCase(is_list_fy): erts_instr_count[246]++; goto lb_is_list_fy; \
CountCase(is_lt_fxx): erts_instr_count[247]++; goto lb_is_lt_fxx; \
CountCase(is_lt_fxc): erts_instr_count[248]++; goto lb_is_lt_fxc; \
CountCase(is_lt_fcx): erts_instr_count[249]++; goto lb_is_lt_fcx; \
CountCase(is_lt_fss): erts_instr_count[250]++; goto lb_is_lt_fss; \
CountCase(is_map_fx): erts_instr_count[251]++; goto lb_is_map_fx; \
CountCase(is_map_fy): erts_instr_count[252]++; goto lb_is_map_fy; \
CountCase(is_ne_fss): erts_instr_count[253]++; goto lb_is_ne_fss; \
CountCase(is_ne_exact_fSS): erts_instr_count[254]++; goto lb_is_ne_exact_fSS; \
CountCase(is_nil_fx): erts_instr_count[255]++; goto lb_is_nil_fx; \
CountCase(is_nil_fy): erts_instr_count[256]++; goto lb_is_nil_fy; \
CountCase(is_nonempty_list_fx): erts_instr_count[257]++; goto lb_is_nonempty_list_fx; \
CountCase(is_nonempty_list_fy): erts_instr_count[258]++; goto lb_is_nonempty_list_fy; \
CountCase(is_nonempty_list_allocate_frtt): erts_instr_count[259]++; goto lb_is_nonempty_list_allocate_frtt; \
CountCase(is_nonempty_list_allocate_fxtt): erts_instr_count[260]++; goto lb_is_nonempty_list_allocate_fxtt; \
CountCase(is_nonempty_list_get_list_frxx): erts_instr_count[261]++; goto lb_is_nonempty_list_get_list_frxx; \
CountCase(is_nonempty_list_get_list_fxxx): erts_instr_count[262]++; goto lb_is_nonempty_list_get_list_fxxx; \
CountCase(is_nonempty_list_test_heap_fIt): erts_instr_count[263]++; goto lb_is_nonempty_list_test_heap_fIt; \
CountCase(is_number_fx): erts_instr_count[264]++; goto lb_is_number_fx; \
CountCase(is_number_fy): erts_instr_count[265]++; goto lb_is_number_fy; \
CountCase(is_pid_fx): erts_instr_count[266]++; goto lb_is_pid_fx; \
CountCase(is_pid_fy): erts_instr_count[267]++; goto lb_is_pid_fy; \
CountCase(is_port_fx): erts_instr_count[268]++; goto lb_is_port_fx; \
CountCase(is_port_fy): erts_instr_count[269]++; goto lb_is_port_fy; \
CountCase(is_reference_fx): erts_instr_count[270]++; goto lb_is_reference_fx; \
CountCase(is_reference_fy): erts_instr_count[271]++; goto lb_is_reference_fy; \
CountCase(is_tagged_tuple_frAa): erts_instr_count[272]++; goto lb_is_tagged_tuple_frAa; \
CountCase(is_tagged_tuple_fxAa): erts_instr_count[273]++; goto lb_is_tagged_tuple_fxAa; \
CountCase(is_tagged_tuple_fyAa): erts_instr_count[274]++; goto lb_is_tagged_tuple_fyAa; \
CountCase(is_tuple_fr): erts_instr_count[275]++; goto lb_is_tuple_fr; \
CountCase(is_tuple_fx): erts_instr_count[276]++; goto lb_is_tuple_fx; \
CountCase(is_tuple_fy): erts_instr_count[277]++; goto lb_is_tuple_fy; \
CountCase(is_tuple_of_arity_frA): erts_instr_count[278]++; goto lb_is_tuple_of_arity_frA; \
CountCase(is_tuple_of_arity_fxA): erts_instr_count[279]++; goto lb_is_tuple_of_arity_fxA; \
CountCase(is_tuple_of_arity_fyA): erts_instr_count[280]++; goto lb_is_tuple_of_arity_fyA; \
CountCase(jump_f): erts_instr_count[281]++; goto lb_jump_f; \
CountCase(label_L): erts_instr_count[282]++; goto lb_label_L; \
CountCase(line_I): erts_instr_count[283]++; goto lb_line_I; \
CountCase(loop_rec_end_f): erts_instr_count[284]++; goto lb_loop_rec_end_f; \
CountCase(move_nx): erts_instr_count[285]++; goto lb_move_nx; \
CountCase(move_rx): erts_instr_count[286]++; goto lb_move_rx; \
CountCase(move_ry): erts_instr_count[287]++; goto lb_move_ry; \
CountCase(move_xr): erts_instr_count[288]++; goto lb_move_xr; \
CountCase(move_xx): erts_instr_count[289]++; goto lb_move_xx; \
CountCase(move_xy): erts_instr_count[290]++; goto lb_move_xy; \
CountCase(move_yr): erts_instr_count[291]++; goto lb_move_yr; \
CountCase(move_yx): erts_instr_count[292]++; goto lb_move_yx; \
CountCase(move_yy): erts_instr_count[293]++; goto lb_move_yy; \
CountCase(move_cr): erts_instr_count[294]++; goto lb_move_cr; \
CountCase(move_cx): erts_instr_count[295]++; goto lb_move_cx; \
CountCase(move2_par_xxxx): erts_instr_count[296]++; goto lb_move2_par_xxxx; \
CountCase(move2_par_xxxy): erts_instr_count[297]++; goto lb_move2_par_xxxy; \
CountCase(move2_par_xxyx): erts_instr_count[298]++; goto lb_move2_par_xxyx; \
CountCase(move2_par_xyxy): erts_instr_count[299]++; goto lb_move2_par_xyxy; \
CountCase(move2_par_yxxx): erts_instr_count[300]++; goto lb_move2_par_yxxx; \
CountCase(move2_par_yxxy): erts_instr_count[301]++; goto lb_move2_par_yxxy; \
CountCase(move2_par_yxyx): erts_instr_count[302]++; goto lb_move2_par_yxyx; \
CountCase(move3_xxxxxx): erts_instr_count[303]++; goto lb_move3_xxxxxx; \
CountCase(move3_xyxyxy): erts_instr_count[304]++; goto lb_move3_xyxyxy; \
CountCase(move3_yxyxyx): erts_instr_count[305]++; goto lb_move3_yxyxyx; \
CountCase(move_call_xf): erts_instr_count[306]++; goto lb_move_call_xf; \
CountCase(move_call_yf): erts_instr_count[307]++; goto lb_move_call_yf; \
CountCase(move_call_cf): erts_instr_count[308]++; goto lb_move_call_cf; \
CountCase(move_call_last_xfQ): erts_instr_count[309]++; goto lb_move_call_last_xfQ; \
CountCase(move_call_last_yfQ): erts_instr_count[310]++; goto lb_move_call_last_yfQ; \
CountCase(move_call_last_cfQ): erts_instr_count[311]++; goto lb_move_call_last_cfQ; \
CountCase(move_call_only_xf): erts_instr_count[312]++; goto lb_move_call_only_xf; \
CountCase(move_call_only_cf): erts_instr_count[313]++; goto lb_move_call_only_cf; \
CountCase(move_deallocate_return_nQ): erts_instr_count[314]++; goto lb_move_deallocate_return_nQ; \
CountCase(move_deallocate_return_xQ): erts_instr_count[315]++; goto lb_move_deallocate_return_xQ; \
CountCase(move_deallocate_return_yQ): erts_instr_count[316]++; goto lb_move_deallocate_return_yQ; \
CountCase(move_deallocate_return_cQ): erts_instr_count[317]++; goto lb_move_deallocate_return_cQ; \
CountCase(move_dup_xxx): erts_instr_count[318]++; goto lb_move_dup_xxx; \
CountCase(move_dup_xxy): erts_instr_count[319]++; goto lb_move_dup_xxy; \
CountCase(move_dup_yxx): erts_instr_count[320]++; goto lb_move_dup_yxx; \
CountCase(move_dup_yxy): erts_instr_count[321]++; goto lb_move_dup_yxy; \
CountCase(move_jump_fn): erts_instr_count[322]++; goto lb_move_jump_fn; \
CountCase(move_jump_fx): erts_instr_count[323]++; goto lb_move_jump_fx; \
CountCase(move_jump_fy): erts_instr_count[324]++; goto lb_move_jump_fy; \
CountCase(move_jump_fc): erts_instr_count[325]++; goto lb_move_jump_fc; \
CountCase(move_return_n): erts_instr_count[326]++; goto lb_move_return_n; \
CountCase(move_return_x): erts_instr_count[327]++; goto lb_move_return_x; \
CountCase(move_return_c): erts_instr_count[328]++; goto lb_move_return_c; \
CountCase(move_shift_xxx): erts_instr_count[329]++; goto lb_move_shift_xxx; \
CountCase(move_shift_xxy): erts_instr_count[330]++; goto lb_move_shift_xxy; \
CountCase(move_shift_xyx): erts_instr_count[331]++; goto lb_move_shift_xyx; \
CountCase(move_shift_yxx): erts_instr_count[332]++; goto lb_move_shift_yxx; \
CountCase(move_window3_xxxy): erts_instr_count[333]++; goto lb_move_window3_xxxy; \
CountCase(move_window4_xxxxy): erts_instr_count[334]++; goto lb_move_window4_xxxxy; \
CountCase(move_window5_xxxxxy): erts_instr_count[335]++; goto lb_move_window5_xxxxxy; \
CountCase(move_x1_c): erts_instr_count[336]++; goto lb_move_x1_c; \
CountCase(move_x2_c): erts_instr_count[337]++; goto lb_move_x2_c; \
CountCase(new_map_dtI): erts_instr_count[338]++; goto lb_new_map_dtI; \
CountCase(node_x): erts_instr_count[339]++; goto lb_node_x; \
CountCase(node_y): erts_instr_count[340]++; goto lb_node_y; \
CountCase(normal_exit): erts_instr_count[341]++; goto lb_normal_exit; \
CountCase(on_load): erts_instr_count[342]++; goto lb_on_load; \
CountCase(put_list_rnr): erts_instr_count[343]++; goto lb_put_list_rnr; \
CountCase(put_list_rnx): erts_instr_count[344]++; goto lb_put_list_rnx; \
CountCase(put_list_rxr): erts_instr_count[345]++; goto lb_put_list_rxr; \
CountCase(put_list_rxx): erts_instr_count[346]++; goto lb_put_list_rxx; \
CountCase(put_list_xnx): erts_instr_count[347]++; goto lb_put_list_xnx; \
CountCase(put_list_xxr): erts_instr_count[348]++; goto lb_put_list_xxr; \
CountCase(put_list_xxx): erts_instr_count[349]++; goto lb_put_list_xxx; \
CountCase(put_list_xyx): erts_instr_count[350]++; goto lb_put_list_xyx; \
CountCase(put_list_ynx): erts_instr_count[351]++; goto lb_put_list_ynx; \
CountCase(put_list_yxx): erts_instr_count[352]++; goto lb_put_list_yxx; \
CountCase(put_list_yyx): erts_instr_count[353]++; goto lb_put_list_yyx; \
CountCase(put_list_xcx): erts_instr_count[354]++; goto lb_put_list_xcx; \
CountCase(put_list_xcy): erts_instr_count[355]++; goto lb_put_list_xcy; \
CountCase(put_list_ycx): erts_instr_count[356]++; goto lb_put_list_ycx; \
CountCase(put_list_cxx): erts_instr_count[357]++; goto lb_put_list_cxx; \
CountCase(put_list_cyx): erts_instr_count[358]++; goto lb_put_list_cyx; \
CountCase(put_list_ssd): erts_instr_count[359]++; goto lb_put_list_ssd; \
CountCase(raw_raise): erts_instr_count[360]++; goto lb_raw_raise; \
CountCase(remove_message): erts_instr_count[361]++; goto lb_remove_message; \
CountCase(return): erts_instr_count[362]++; goto lb_return; \
CountCase(return_trace): erts_instr_count[363]++; goto lb_return_trace; \
CountCase(self_x): erts_instr_count[364]++; goto lb_self_x; \
CountCase(self_y): erts_instr_count[365]++; goto lb_self_y; \
CountCase(send): erts_instr_count[366]++; goto lb_send; \
CountCase(set_tuple_element_sSP): erts_instr_count[367]++; goto lb_set_tuple_element_sSP; \
CountCase(swap_xx): erts_instr_count[368]++; goto lb_swap_xx; \
CountCase(swap_xy): erts_instr_count[369]++; goto lb_swap_xy; \
CountCase(swap_temp_xxx): erts_instr_count[370]++; goto lb_swap_temp_xxx; \
CountCase(swap_temp_xyx): erts_instr_count[371]++; goto lb_swap_temp_xyx; \
CountCase(system_limit_j): erts_instr_count[372]++; goto lb_system_limit_j; \
CountCase(test_arity_fxA): erts_instr_count[373]++; goto lb_test_arity_fxA; \
CountCase(test_arity_fyA): erts_instr_count[374]++; goto lb_test_arity_fyA; \
CountCase(test_heap_It): erts_instr_count[375]++; goto lb_test_heap_It; \
CountCase(test_heap_1_put_list_Iy): erts_instr_count[376]++; goto lb_test_heap_1_put_list_Iy; \
CountCase(timeout): erts_instr_count[377]++; goto lb_timeout; \
CountCase(timeout_locked): erts_instr_count[378]++; goto lb_timeout_locked; \
CountCase(trace_jump_W): erts_instr_count[379]++; goto lb_trace_jump_W; \
CountCase(try_case_y): erts_instr_count[380]++; goto lb_try_case_y; \
CountCase(try_case_end_s): erts_instr_count[381]++; goto lb_try_case_end_s; \
CountCase(try_end_y): erts_instr_count[382]++; goto lb_try_end_y; \
CountCase(update_list_xx): erts_instr_count[383]++; goto lb_update_list_xx; \
CountCase(update_list_yx): erts_instr_count[384]++; goto lb_update_list_yx; \
CountCase(update_list_cx): erts_instr_count[385]++; goto lb_update_list_cx; \
CountCase(update_map_assoc_sdtI): erts_instr_count[386]++; goto lb_update_map_assoc_sdtI; \
CountCase(update_map_exact_jsdtI): erts_instr_count[387]++; goto lb_update_map_exact_jsdtI; \
CountCase(wait_locked_f): erts_instr_count[388]++; goto lb_wait_locked_f; \
CountCase(wait_timeout_locked_sf): erts_instr_count[389]++; goto lb_wait_timeout_locked_sf; \
CountCase(wait_timeout_locked_int_If): erts_instr_count[390]++; goto lb_wait_timeout_locked_int_If; \
CountCase(wait_timeout_unlocked_sf): erts_instr_count[391]++; goto lb_wait_timeout_unlocked_sf; \
CountCase(wait_timeout_unlocked_int_If): erts_instr_count[392]++; goto lb_wait_timeout_unlocked_int_If; \
CountCase(wait_unlocked_f): erts_instr_count[393]++; goto lb_wait_unlocked_f;

#define genop_label_1 1
#define genop_func_info_3 2
#define genop_int_code_end_0 3
#define genop_call_2 4
#define genop_call_last_3 5
#define genop_call_only_2 6
#define genop_call_ext_2 7
#define genop_call_ext_last_3 8
#define genop_bif0_2 9
#define genop_bif1_4 10
#define genop_bif2_5 11
#define genop_allocate_2 12
#define genop_allocate_heap_3 13
#define genop_allocate_zero_2 14
#define genop_allocate_heap_zero_3 15
#define genop_test_heap_2 16
#define genop_init_1 17
#define genop_deallocate_1 18
#define genop_return_0 19
#define genop_send_0 20
#define genop_remove_message_0 21
#define genop_timeout_0 22
#define genop_loop_rec_2 23
#define genop_loop_rec_end_1 24
#define genop_wait_1 25
#define genop_wait_timeout_2 26
#define genop_m_plus_4 27
#define genop_m_minus_4 28
#define genop_m_times_4 29
#define genop_m_div_4 30
#define genop_int_div_4 31
#define genop_int_rem_4 32
#define genop_int_band_4 33
#define genop_int_bor_4 34
#define genop_int_bxor_4 35
#define genop_int_bsl_4 36
#define genop_int_bsr_4 37
#define genop_int_bnot_3 38
#define genop_is_lt_3 39
#define genop_is_ge_3 40
#define genop_is_eq_3 41
#define genop_is_ne_3 42
#define genop_is_eq_exact_3 43
#define genop_is_ne_exact_3 44
#define genop_is_integer_2 45
#define genop_is_float_2 46
#define genop_is_number_2 47
#define genop_is_atom_2 48
#define genop_is_pid_2 49
#define genop_is_reference_2 50
#define genop_is_port_2 51
#define genop_is_nil_2 52
#define genop_is_binary_2 53
#define genop_is_constant_2 54
#define genop_is_list_2 55
#define genop_is_nonempty_list_2 56
#define genop_is_tuple_2 57
#define genop_test_arity_3 58
#define genop_select_val_3 59
#define genop_select_tuple_arity_3 60
#define genop_jump_1 61
#define genop_catch_2 62
#define genop_catch_end_1 63
#define genop_move_2 64
#define genop_get_list_3 65
#define genop_get_tuple_element_3 66
#define genop_set_tuple_element_3 67
#define genop_put_string_3 68
#define genop_put_list_3 69
#define genop_put_tuple_2 70
#define genop_put_1 71
#define genop_badmatch_1 72
#define genop_if_end_0 73
#define genop_case_end_1 74
#define genop_call_fun_1 75
#define genop_make_fun_3 76
#define genop_is_function_2 77
#define genop_call_ext_only_2 78
#define genop_bs_start_match_2 79
#define genop_bs_get_integer_5 80
#define genop_bs_get_float_5 81
#define genop_bs_get_binary_5 82
#define genop_bs_skip_bits_4 83
#define genop_bs_test_tail_2 84
#define genop_bs_save_1 85
#define genop_bs_restore_1 86
#define genop_bs_init_2 87
#define genop_bs_final_2 88
#define genop_bs_put_integer_5 89
#define genop_bs_put_binary_5 90
#define genop_bs_put_float_5 91
#define genop_bs_put_string_2 92
#define genop_bs_need_buf_1 93
#define genop_fclearerror_0 94
#define genop_fcheckerror_1 95
#define genop_fmove_2 96
#define genop_fconv_2 97
#define genop_fadd_4 98
#define genop_fsub_4 99
#define genop_fmul_4 100
#define genop_fdiv_4 101
#define genop_fnegate_3 102
#define genop_make_fun2_1 103
#define genop_try_2 104
#define genop_try_end_1 105
#define genop_try_case_1 106
#define genop_try_case_end_1 107
#define genop_raise_2 108
#define genop_bs_init2_6 109
#define genop_bs_bits_to_bytes_3 110
#define genop_bs_add_5 111
#define genop_apply_1 112
#define genop_apply_last_2 113
#define genop_is_boolean_2 114
#define genop_is_function2_3 115
#define genop_bs_start_match2_5 116
#define genop_bs_get_integer2_7 117
#define genop_bs_get_float2_7 118
#define genop_bs_get_binary2_7 119
#define genop_bs_skip_bits2_5 120
#define genop_bs_test_tail2_3 121
#define genop_bs_save2_2 122
#define genop_bs_restore2_2 123
#define genop_gc_bif1_5 124
#define genop_gc_bif2_6 125
#define genop_bs_final2_2 126
#define genop_bs_bits_to_bytes2_2 127
#define genop_put_literal_2 128
#define genop_is_bitstr_2 129
#define genop_bs_context_to_binary_1 130
#define genop_bs_test_unit_3 131
#define genop_bs_match_string_4 132
#define genop_bs_init_writable_0 133
#define genop_bs_append_8 134
#define genop_bs_private_append_6 135
#define genop_trim_2 136
#define genop_bs_init_bits_6 137
#define genop_bs_get_utf8_5 138
#define genop_bs_skip_utf8_4 139
#define genop_bs_get_utf16_5 140
#define genop_bs_skip_utf16_4 141
#define genop_bs_get_utf32_5 142
#define genop_bs_skip_utf32_4 143
#define genop_bs_utf8_size_3 144
#define genop_bs_put_utf8_3 145
#define genop_bs_utf16_size_3 146
#define genop_bs_put_utf16_3 147
#define genop_bs_put_utf32_3 148
#define genop_on_load_0 149
#define genop_recv_mark_1 150
#define genop_recv_set_1 151
#define genop_gc_bif3_7 152
#define genop_line_1 153
#define genop_put_map_assoc_5 154
#define genop_put_map_exact_5 155
#define genop_is_map_2 156
#define genop_has_map_fields_3 157
#define genop_get_map_elements_3 158
#define genop_is_tagged_tuple_4 159
#define genop_build_stacktrace_0 160
#define genop_raw_raise_0 161
#define genop_get_hd_2 162
#define genop_get_tl_2 163
#define genop_too_old_compiler_0 164
#define genop_i_func_info_4 165
#define genop_i_generic_breakpoint_0 166
#define genop_i_debug_breakpoint_0 167
#define genop_i_return_time_trace_0 168
#define genop_i_return_to_trace_0 169
#define genop_i_yield_0 170
#define genop_trace_jump_1 171
#define genop_i_trim_1 172
#define genop_init2_2 173
#define genop_init3_3 174
#define genop_i_select_val_bins_3 175
#define genop_i_select_val_lins_3 176
#define genop_i_select_val2_4 177
#define genop_i_select_tuple_arity_3 178
#define genop_i_select_tuple_arity2_4 179
#define genop_i_jump_on_val_zero_3 180
#define genop_i_jump_on_val_4 181
#define genop_i_get_tuple_element_3 182
#define genop_i_get_tuple_element2_3 183
#define genop_i_get_tuple_element2y_4 184
#define genop_i_get_tuple_element3_3 185
#define genop_i_raise_0 186
#define genop_badarg_1 187
#define genop_system_limit_1 188
#define genop_move_jump_2 189
#define genop_move_window_5 190
#define genop_move_window_6 191
#define genop_move_window3_4 192
#define genop_move_window4_5 193
#define genop_move_window5_6 194
#define genop_swap_temp_3 195
#define genop_swap_2 196
#define genop_move_x1_1 197
#define genop_move_x2_1 198
#define genop_move_shift_3 199
#define genop_move_dup_3 200
#define genop_move2_par_4 201
#define genop_move3_6 202
#define genop_timeout_locked_0 203
#define genop_i_loop_rec_1 204
#define genop_wait_locked_1 205
#define genop_wait_unlocked_1 206
#define genop_wait_timeout_unlocked_int_2 207
#define genop_wait_timeout_unlocked_2 208
#define genop_wait_timeout_locked_int_2 209
#define genop_wait_timeout_locked_2 210
#define genop_i_wait_error_0 211
#define genop_i_wait_error_locked_0 212
#define genop_i_is_eq_exact_immed_3 213
#define genop_i_is_eq_exact_literal_3 214
#define genop_i_is_ne_exact_immed_3 215
#define genop_i_is_ne_exact_literal_3 216
#define genop_i_put_tuple_2 217
#define genop_update_list_2 218
#define genop_normal_exit_0 219
#define genop_continue_exit_0 220
#define genop_apply_bif_0 221
#define genop_call_nif_0 222
#define genop_call_error_handler_0 223
#define genop_error_action_code_0 224
#define genop_return_trace_0 225
#define genop_move_return_1 226
#define genop_move_deallocate_return_2 227
#define genop_deallocate_return_1 228
#define genop_test_heap_1_put_list_2 229
#define genop_is_tuple_of_arity_3 230
#define genop_is_integer_allocate_4 231
#define genop_is_nonempty_list_allocate_4 232
#define genop_is_nonempty_list_test_heap_3 233
#define genop_is_nonempty_list_get_list_4 234
#define genop_is_bitstring_2 235
#define genop_allocate_init_3 236
#define genop_i_apply_0 237
#define genop_i_apply_last_1 238
#define genop_i_apply_only_0 239
#define genop_i_apply_fun_0 240
#define genop_i_apply_fun_last_1 241
#define genop_i_apply_fun_only_0 242
#define genop_i_hibernate_0 243
#define genop_i_perf_counter_0 244
#define genop_call_bif_1 245
#define genop_i_get_hash_3 246
#define genop_i_get_2 247
#define genop_self_1 248
#define genop_node_1 249
#define genop_i_fast_element_4 250
#define genop_i_element_4 251
#define genop_bif1_body_3 252
#define genop_i_bif2_5 253
#define genop_i_bif2_body_4 254
#define genop_move_call_2 255
#define genop_move_call_last_3 256
#define genop_move_call_only_2 257
#define genop_i_call_1 258
#define genop_i_call_last_2 259
#define genop_i_call_only_1 260
#define genop_i_call_ext_1 261
#define genop_i_call_ext_last_2 262
#define genop_i_call_ext_only_1 263
#define genop_i_move_call_ext_2 264
#define genop_i_move_call_ext_last_3 265
#define genop_i_move_call_ext_only_2 266
#define genop_i_call_fun_1 267
#define genop_i_call_fun_last_2 268
#define genop_i_make_fun_2 269
#define genop_i_bs_start_match2_5 270
#define genop_i_bs_save2_2 271
#define genop_i_bs_restore2_2 272
#define genop_i_bs_match_string_4 273
#define genop_i_bs_get_integer_small_imm_5 274
#define genop_i_bs_get_integer_imm_6 275
#define genop_i_bs_get_integer_6 276
#define genop_i_bs_get_integer_8_3 277
#define genop_i_bs_get_integer_16_3 278
#define genop_i_bs_get_integer_32_3 279
#define genop_i_bs_get_binary_imm2_6 280
#define genop_i_bs_get_binary2_6 281
#define genop_i_bs_get_binary_all2_5 282
#define genop_i_bs_get_binary_all_reuse_3 283
#define genop_i_bs_get_float2_6 284
#define genop_i_bs_skip_bits_imm2_3 285
#define genop_i_bs_skip_bits2_4 286
#define genop_i_bs_skip_bits_all2_3 287
#define genop_bs_test_zero_tail2_2 288
#define genop_bs_test_tail_imm2_3 289
#define genop_bs_test_unit8_2 290
#define genop_i_bs_get_utf8_3 291
#define genop_i_bs_get_utf16_4 292
#define genop_i_bs_validate_unicode_retract_3 293
#define genop_i_bs_init_fail_4 294
#define genop_i_bs_init_fail_heap_5 295
#define genop_i_bs_init_3 296
#define genop_i_bs_init_heap_4 297
#define genop_i_bs_init_bits_fail_4 298
#define genop_i_bs_init_bits_fail_heap_5 299
#define genop_i_bs_init_bits_3 300
#define genop_i_bs_init_bits_heap_4 301
#define genop_i_bs_append_6 302
#define genop_i_bs_private_append_5 303
#define genop_i_new_bs_put_integer_4 304
#define genop_i_new_bs_put_integer_imm_4 305
#define genop_i_bs_utf8_size_2 306
#define genop_i_bs_utf16_size_2 307
#define genop_i_bs_put_utf8_2 308
#define genop_i_bs_validate_unicode_2 309
#define genop_i_new_bs_put_float_4 310
#define genop_i_new_bs_put_float_imm_4 311
#define genop_i_new_bs_put_binary_4 312
#define genop_i_new_bs_put_binary_imm_3 313
#define genop_i_new_bs_put_binary_all_3 314
#define genop_fstore_2 315
#define genop_fload_2 316
#define genop_i_fadd_3 317
#define genop_i_fsub_3 318
#define genop_i_fmul_3 319
#define genop_i_fdiv_3 320
#define genop_i_fnegate_2 321
#define genop_i_put_map_assoc_4 322
#define genop_ensure_map_1 323
#define genop_sorted_put_map_assoc_4 324
#define genop_sorted_put_map_exact_5 325
#define genop_new_map_3 326
#define genop_i_new_small_map_lit_3 327
#define genop_update_map_assoc_4 328
#define genop_update_map_exact_5 329
#define genop_i_get_map_elements_3 330
#define genop_i_get_map_element_hash_5 331
#define genop_i_get_map_element_4 332
#define genop_gen_plus_5 333
#define genop_gen_minus_5 334
#define genop_i_increment_4 335
#define genop_i_plus_5 336
#define genop_i_minus_5 337
#define genop_i_times_5 338
#define genop_i_m_div_5 339
#define genop_i_int_div_5 340
#define genop_i_rem_5 341
#define genop_i_bsl_5 342
#define genop_i_bsr_5 343
#define genop_i_band_5 344
#define genop_i_bor_5 345
#define genop_i_bxor_5 346
#define genop_i_int_bnot_4 347
#define genop_i_gc_bif1_5 348
#define genop_i_gc_bif2_6 349
#define genop_ii_gc_bif3_7 350
#define genop_i_gc_bif3_6 351
#define genop_unsupported_guard_bif_3 352
#define genop_i_recv_mark_0 353
#define genop_i_recv_set_0 354
#endif
