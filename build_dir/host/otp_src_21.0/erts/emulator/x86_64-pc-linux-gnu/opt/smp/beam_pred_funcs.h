/*
 *  Warning: Do not edit this file.
 *  Auto-generated by 'beam_makeops'.
 */

case 0: RVAL = never(st); break;
case 1: RVAL = use_jump_tab(st, var[2], rest_args); break;
case 2: RVAL = mixed_types(st, var[3], rest_args); break;
case 3: RVAL = mixed_types(st, var[2], rest_args); break;
case 4: RVAL = fixed_size_values(st, var[2], rest_args); break;
case 5: RVAL = floats_or_bignums(st, var[2], rest_args); break;
case 6: RVAL = succ(st, var[1], var[3]); break;
case 7: RVAL = succ(st, var[3], var[5]); break;
case 8: RVAL = succ(st, var[4], var[6]); break;
case 9: RVAL = succ(st, var[5], var[7]); break;
case 10: RVAL = is_killed_apply(st, var[2], var[4]); break;
case 11: RVAL = is_killed(st, var[2], var[4]); break;
case 12: RVAL = is_killed(st, var[2], var[3]); break;
case 13: RVAL = smp_mark_target_label(st, var[0]); break;
case 14: RVAL = smp_already_locked(st, var[0]); break;
case 15: RVAL = succ(st, var[2], var[4]); break;
case 16: RVAL = literal_is_export(st, var[1]); break;
case 17: RVAL = binary_too_big(st, var[1]); break;
case 18: RVAL = no_fpe_signals(st); break;
case 19: RVAL = compiled_with_otp_20_or_higher(st); break;
case 20: RVAL = literal_is_map(st, var[0]); break;
case 21: RVAL = map_key_sort(st, var[3], rest_args); break;
case 22: RVAL = map_key_sort(st, var[4], rest_args); break;
case 23: RVAL = is_empty_map(st, var[0]); break;
case 24: RVAL = is_small_map_literal_keys(st, var[2], rest_args); break;
case 25: RVAL = literal_is_map(st, var[1]); break;
case 26: RVAL = map_key_sort(st, var[2], rest_args); break;
case 27: RVAL = negation_is_small(st, var[2]); break;
