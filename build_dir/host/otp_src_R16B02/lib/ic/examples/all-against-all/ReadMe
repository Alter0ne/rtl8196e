This is a short description on the use of Erlang,C or Java 
client and servers against each other.
The base is a client that initiates and uses a random number 
generator that lies on an server.

There are two make files, one for Unix and one for Windows,
the Unix make file is just named "Makefile", while the Windows
is named "Makefile.win32".

Instructions.
 
1) On Makefile :
   * Modify the OTPROOT variable on the Makefile to point
     to the root for your erlang instalation.
   * Modify IC and Erl_Interface versions to agree your
     OTP version.
 
2) Type "make" to build the example.


3) Start the empd deamon by using the command :
   
    epmd -daemon
 
 
4) Do this when you want to run :

  * an Erlang server.
 
    Start erlang with the options

    -setcookie <Some Cookie> -sname <SomeNodeName>
 
    In this example you should use :
 
    erl -setcookie flash -sname babbis
 
  * a C server. 

    Just type :

    server

  * a Java server.

    Set and export the CLASSPATH variable to 
    point to the java classes located in java development kit, 
    the Otp's classes and the current directory.
    Your classpath should look like this :
 
    .:<OTPROOT>/lib/ic-3.8.1/priv/ic.jar:<OTPROOT>/lib/jinterface_0.9.2/priv/OtpErlang.jar
 
    where :
 
    <OTPROOT> is the location there OTP is installed
    
    Then type :

    java server 
   
 
5) Do this when you want to run :

   * an Erlang client.

     ** If you have no valid named erlang node,
        start erlang with the options

        -setcookie <Some Cookie> -sname <SomeNodeName>
 
        In this example you should use :
 
        erl -setcookie flash -sname client
   
        On the erlang shell, type
 
        client:start().

     ** If you have a valid named erlang node, started 
        whith the same "cookie", on the erlang shell, type
 
        client:start().

  
   * a C client, just type

     client

   
   * a Java client.

   
     Set and export the CLASSPATH variable to 
     point to the java classes located in java development kit, 
     the Otp's classes and the current directory.
     Your classpath should look like this :
 
     .:<OTPROOT>/lib/ic-4.0/priv/ic.jar:<OTPROOT>/lib/jinterface_1.1/priv/OtpErlang.jar
 
     where :
 
      <OTPROOT> is the location there OTP is installed
    
     Then type :

     java client



6) Please note that :
 
   * you must always have the same cookie in order to eastablish connection
     between clients and servers.
   
   * you cannot start two servers with the same name.
     In this example all servers share the same name in order to test
     several constallations. Kill a server before starting another one. 





