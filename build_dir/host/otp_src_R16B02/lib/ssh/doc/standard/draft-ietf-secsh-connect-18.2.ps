%!PS-Adobe-3.0
%%BoundingBox: 75 0 595 747
%%Title: Enscript Output
%%For: Magnus Thoang
%%Creator: GNU enscript 1.6.1
%%CreationDate: Fri Oct 31 13:33:02 2003
%%Orientation: Portrait
%%Pages: 11 0
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginProcSet: PStoPS 1 15
userdict begin
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{1 array cvx dup 0 3 index cvx put
 bind def}{pop}ifelse}{pop}ifelse}forall
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/setpagedevice {pop}bind 1 index where{dup wcheck{3 1 roll put}
 {pop def}ifelse}{def}ifelse
/PStoPSmatrix matrix currentmatrix def
/PStoPSxform matrix def/PStoPSclip{clippath}def
/defaultmatrix{PStoPSmatrix exch PStoPSxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/initclip[{matrix currentmatrix PStoPSmatrix setmatrix
 [{currentpoint}stopped{$error/newerror false put{newpath}}
 {/newpath cvx 3 1 roll/moveto cvx 4 array astore cvx}ifelse]
 {[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}bind aload pop
 /initclip dup load dup type dup/operatortype eq{pop exch pop}
 {dup/arraytype eq exch/packedarraytype eq or
  {dup xcheck{exch pop aload pop}{pop cvx}ifelse}
  {pop cvx}ifelse}ifelse
 {newpath PStoPSclip clip newpath exec setmatrix} bind aload pop]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
end
%%EndProcSet
%%BeginResource: procset Enscript-Prolog 1.6 1
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 1
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
/d_page_w 520 def
/d_page_h 747 def
/d_header_x 0 def
/d_header_y 747 def
/d_header_w 520 def
/d_header_h 0 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 520 def
/d_footer_h 0 def
/d_output_w 520 def
/d_output_h 747 def
/cols 1 def
userdict/PStoPSxform PStoPSmatrix matrix currentmatrix
 matrix invertmatrix matrix concatmatrix
 matrix invertmatrix put
%%EndSetup
%%Page: (0,1) 1
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 1 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 701 M
(Network Working Group                                          T. Ylonen) s
5 690 M
(Internet-Draft                          SSH Communications Security Corp) s
5 679 M
(Expires: March 31, 2004                           D. Moffat, Editor, Ed.) s
5 668 M
(                                                   Sun Microsystems, Inc) s
5 657 M
(                                                                Oct 2003) s
5 624 M
(                        SSH Connection Protocol) s
5 613 M
(                    draft-ietf-secsh-connect-18.txt) s
5 591 M
(Status of this Memo) s
5 569 M
(   This document is an Internet-Draft and is in full conformance with) s
5 558 M
(   all provisions of Section 10 of RFC2026.) s
5 536 M
(   Internet-Drafts are working documents of the Internet Engineering) s
5 525 M
(   Task Force \(IETF\), its areas, and its working groups. Note that other) s
5 514 M
(   groups may also distribute working documents as Internet-Drafts.) s
5 492 M
(   Internet-Drafts are draft documents valid for a maximum of six months) s
5 481 M
(   and may be updated, replaced, or obsoleted by other documents at any) s
5 470 M
(   time. It is inappropriate to use Internet-Drafts as reference) s
5 459 M
(   material or to cite them other than as "work in progress.") s
5 437 M
(   The list of current Internet-Drafts can be accessed at http://) s
5 426 M
(   www.ietf.org/ietf/1id-abstracts.txt.) s
5 404 M
(   The list of Internet-Draft Shadow Directories can be accessed at) s
5 393 M
(   http://www.ietf.org/shadow.html.) s
5 371 M
(   This Internet-Draft will expire on March 31, 2004.) s
5 349 M
(Copyright Notice) s
5 327 M
(   Copyright \(C\) The Internet Society \(2003\). All Rights Reserved.) s
5 305 M
(Abstract) s
5 283 M
(   SSH is a protocol for secure remote login and other secure network) s
5 272 M
(   services over an insecure network.) s
5 250 M
(   This document describes the SSH Connection Protocol. It provides) s
5 239 M
(   interactive login sessions, remote execution of commands, forwarded) s
5 228 M
(   TCP/IP connections, and forwarded X11 connections. All of these) s
5 217 M
(   channels are multiplexed into a single encrypted tunnel.) s
5 195 M
(   The SSH Connection Protocol has been designed to run on top of the) s
5 184 M
(   SSH transport layer and user authentication protocols.) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004               [Page 1]) s
_R
S
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 2 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(Table of Contents) s
5 668 M
(   1.    Contributors . . . . . . . . . . . . . . . . . . . . . . . .  3) s
5 657 M
(   2.    Introduction . . . . . . . . . . . . . . . . . . . . . . . .  3) s
5 646 M
(   3.    Conventions Used in This Document  . . . . . . . . . . . . .  3) s
5 635 M
(   4.    Global Requests  . . . . . . . . . . . . . . . . . . . . . .  3) s
5 624 M
(   5.    Channel Mechanism  . . . . . . . . . . . . . . . . . . . . .  4) s
5 613 M
(   5.1   Opening a Channel  . . . . . . . . . . . . . . . . . . . . .  4) s
5 602 M
(   5.2   Data Transfer  . . . . . . . . . . . . . . . . . . . . . . .  5) s
5 591 M
(   5.3   Closing a Channel  . . . . . . . . . . . . . . . . . . . . .  6) s
5 580 M
(   5.4   Channel-Specific Requests  . . . . . . . . . . . . . . . . .  7) s
5 569 M
(   6.    Interactive Sessions . . . . . . . . . . . . . . . . . . . .  8) s
5 558 M
(   6.1   Opening a Session  . . . . . . . . . . . . . . . . . . . . .  8) s
5 547 M
(   6.2   Requesting a Pseudo-Terminal . . . . . . . . . . . . . . . .  8) s
5 536 M
(   6.3   X11 Forwarding . . . . . . . . . . . . . . . . . . . . . . .  9) s
5 525 M
(   6.3.1 Requesting X11 Forwarding  . . . . . . . . . . . . . . . . .  9) s
5 514 M
(   6.3.2 X11 Channels . . . . . . . . . . . . . . . . . . . . . . . . 10) s
5 503 M
(   6.4   Environment Variable Passing . . . . . . . . . . . . . . . . 10) s
5 492 M
(   6.5   Starting a Shell or a Command  . . . . . . . . . . . . . . . 10) s
5 481 M
(   6.6   Session Data Transfer  . . . . . . . . . . . . . . . . . . . 11) s
5 470 M
(   6.7   Window Dimension Change Message  . . . . . . . . . . . . . . 12) s
5 459 M
(   6.8   Local Flow Control . . . . . . . . . . . . . . . . . . . . . 12) s
5 448 M
(   6.9   Signals  . . . . . . . . . . . . . . . . . . . . . . . . . . 12) s
5 437 M
(   6.10  Returning Exit Status  . . . . . . . . . . . . . . . . . . . 13) s
5 426 M
(   7.    TCP/IP Port Forwarding . . . . . . . . . . . . . . . . . . . 14) s
5 415 M
(   7.1   Requesting Port Forwarding . . . . . . . . . . . . . . . . . 14) s
5 404 M
(   7.2   TCP/IP Forwarding Channels . . . . . . . . . . . . . . . . . 15) s
5 393 M
(   8.    Encoding of Terminal Modes . . . . . . . . . . . . . . . . . 16) s
5 382 M
(   9.    Summary of Message Numbers . . . . . . . . . . . . . . . . . 18) s
5 371 M
(   10.   Security Considerations  . . . . . . . . . . . . . . . . . . 18) s
5 360 M
(   11.   iana cONSiderations  . . . . . . . . . . . . . . . . . . . . 19) s
5 349 M
(   12.   Intellectual Property  . . . . . . . . . . . . . . . . . . . 19) s
5 338 M
(         Normative References . . . . . . . . . . . . . . . . . . . . 19) s
5 327 M
(         Informative References . . . . . . . . . . . . . . . . . . . 20) s
5 316 M
(         Authors' Addresses . . . . . . . . . . . . . . . . . . . . . 20) s
5 305 M
(         Intellectual Property and Copyright Statements . . . . . . . 21) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004               [Page 2]) s
_R
S
PStoPSsaved restore
%%Page: (2,3) 2
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 3 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(1. Contributors) s
5 668 M
(   The major original contributors of this document were: Tatu Ylonen,) s
5 657 M
(   Tero Kivinen, Timo J. Rinne, Sami Lehtinen \(all of SSH Communications) s
5 646 M
(   Security Corp\), and Markku-Juhani O. Saarinen \(University of) s
5 635 M
(   Jyvaskyla\)) s
5 613 M
(   The document editor is: Darren.Moffat@Sun.COM.  Comments on this) s
5 602 M
(   internet draft should be sent to the IETF SECSH working group,) s
5 591 M
(   details at: http://ietf.org/html.charters/secsh-charter.html) s
5 569 M
(2. Introduction) s
5 547 M
(   The SSH Connection Protocol has been designed to run on top of the) s
5 536 M
(   SSH transport layer and user authentication protocols. It provides) s
5 525 M
(   interactive login sessions, remote execution of commands, forwarded) s
5 514 M
(   TCP/IP connections, and forwarded X11 connections. The service name) s
5 503 M
(   for this protocol is "ssh-connection".) s
5 481 M
(   This document should be read only after reading the SSH architecture) s
5 470 M
(   document [SSH-ARCH]. This document freely uses terminology and) s
5 459 M
(   notation from the architecture document without reference or further) s
5 448 M
(   explanation.) s
5 426 M
(3. Conventions Used in This Document) s
5 404 M
(   The keywords "MUST", "MUST NOT", "REQUIRED", "SHOULD", "SHOULD NOT",) s
5 393 M
(   and "MAY" that appear in this document are to be interpreted as) s
5 382 M
(   described in [RFC2119].) s
5 360 M
(   The used data types and terminology are specified in the architecture) s
5 349 M
(   document [SSH-ARCH].) s
5 327 M
(   The architecture document also discusses the algorithm naming) s
5 316 M
(   conventions that MUST be used with the SSH protocols.) s
5 294 M
(4. Global Requests) s
5 272 M
(   There are several kinds of requests that affect the state of the) s
5 261 M
(   remote end "globally", independent of any channels.  An example is a) s
5 250 M
(   request to start TCP/IP forwarding for a specific port.  All such) s
5 239 M
(   requests use the following format.) s
5 217 M
(     byte      SSH_MSG_GLOBAL_REQUEST) s
5 206 M
(     string    request name \(restricted to US-ASCII\)) s
5 195 M
(     boolean   want reply) s
5 184 M
(     ... request-specific data follows) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004               [Page 3]) s
_R
S
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 4 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(   Request names follow the DNS extensibility naming convention outlined) s
5 679 M
(   in [SSH-ARCH].) s
5 657 M
(   The recipient will respond to this message with) s
5 646 M
(   SSH_MSG_REQUEST_SUCCESS or SSH_MSG_REQUEST_FAILURE if `want reply' is) s
5 635 M
(   TRUE.) s
5 613 M
(     byte      SSH_MSG_REQUEST_SUCCESS) s
5 602 M
(     .....     response specific data) s
5 580 M
(   Usually the response specific data is non-existent.) s
5 558 M
(   If the recipient does not recognize or support the request, it simply) s
5 547 M
(   responds with SSH_MSG_REQUEST_FAILURE.) s
5 525 M
(     byte      SSH_MSG_REQUEST_FAILURE) s
5 492 M
(5. Channel Mechanism) s
5 470 M
(   All terminal sessions, forwarded connections, etc. are channels.) s
5 459 M
(   Either side may open a channel.  Multiple channels are multiplexed) s
5 448 M
(   into a single connection.) s
5 426 M
(   Channels are identified by numbers at each end.  The number referring) s
5 415 M
(   to a channel may be different on each side.  Requests to open a) s
5 404 M
(   channel contain the sender's channel number.  Any other) s
5 393 M
(   channel-related messages contain the recipient's channel number for) s
5 382 M
(   the channel.) s
5 360 M
(   Channels are flow-controlled.  No data may be sent to a channel until) s
5 349 M
(   a message is received to indicate that window space is available.) s
5 327 M
(5.1 Opening a Channel) s
5 305 M
(   When either side wishes to open a new channel, it allocates a local) s
5 294 M
(   number for the channel.  It then sends the following message to the) s
5 283 M
(   other side, and includes the local channel number and initial window) s
5 272 M
(   size in the message.) s
5 250 M
(     byte      SSH_MSG_CHANNEL_OPEN) s
5 239 M
(     string    channel type \(restricted to US-ASCII\)) s
5 228 M
(     uint32    sender channel) s
5 217 M
(     uint32    initial window size) s
5 206 M
(     uint32    maximum packet size) s
5 195 M
(     ... channel type specific data follows) s
5 173 M
(   The channel type is a name as described in the SSH architecture) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004               [Page 4]) s
_R
S
PStoPSsaved restore
%%Page: (4,5) 3
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 5 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(   document, with similar extension mechanisms. `sender channel' is a) s
5 679 M
(   local identifier for the channel used by the sender of this message.) s
5 668 M
(   `initial window size' specifies how many bytes of channel data can be) s
5 657 M
(   sent to the sender of this message without adjusting the window.) s
5 646 M
(   `Maximum packet size' specifies the maximum size of an individual) s
5 635 M
(   data packet that can be sent to the sender \(for example, one might) s
5 624 M
(   want to use smaller packets for interactive connections to get better) s
5 613 M
(   interactive response on slow links\).) s
5 591 M
(   The remote side then decides whether it can open the channel, and) s
5 580 M
(   responds with either) s
5 558 M
(     byte      SSH_MSG_CHANNEL_OPEN_CONFIRMATION) s
5 547 M
(     uint32    recipient channel) s
5 536 M
(     uint32    sender channel) s
5 525 M
(     uint32    initial window size) s
5 514 M
(     uint32    maximum packet size) s
5 503 M
(     ... channel type specific data follows) s
5 481 M
(   where `recipient channel' is the channel number given in the original) s
5 470 M
(   open request, and `sender channel' is the channel number allocated by) s
5 459 M
(   the other side, or) s
5 437 M
(     byte      SSH_MSG_CHANNEL_OPEN_FAILURE) s
5 426 M
(     uint32    recipient channel) s
5 415 M
(     uint32    reason code) s
5 404 M
(     string    additional textual information \(ISO-10646 UTF-8 [RFC2279]\)) s
5 393 M
(     string    language tag \(as defined in [RFC3066]\)) s
5 371 M
(   If the recipient of the SSH_MSG_CHANNEL_OPEN message does not support) s
5 360 M
(   the specified channel type, it simply responds with) s
5 349 M
(   SSH_MSG_CHANNEL_OPEN_FAILURE. The client MAY show the additional) s
5 338 M
(   information to the user. If this is done, the client software should) s
5 327 M
(   take the precautions discussed in [SSH-ARCH].) s
5 305 M
(   The following reason codes are defined:) s
5 283 M
(     #define SSH_OPEN_ADMINISTRATIVELY_PROHIBITED    1) s
5 272 M
(     #define SSH_OPEN_CONNECT_FAILED                 2) s
5 261 M
(     #define SSH_OPEN_UNKNOWN_CHANNEL_TYPE           3) s
5 250 M
(     #define SSH_OPEN_RESOURCE_SHORTAGE              4) s
5 217 M
(5.2 Data Transfer) s
5 195 M
(   The window size specifies how many bytes the other party can send) s
5 184 M
(   before it must wait for the window to be adjusted.  Both parties use) s
5 173 M
(   the following message to adjust the window.) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004               [Page 5]) s
_R
S
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 6 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(     byte      SSH_MSG_CHANNEL_WINDOW_ADJUST) s
5 679 M
(     uint32    recipient channel) s
5 668 M
(     uint32    bytes to add) s
5 646 M
(   After receiving this message, the recipient MAY send the given number) s
5 635 M
(   of bytes more than it was previously allowed to send; the window size) s
5 624 M
(   is incremented.) s
5 602 M
(   Data transfer is done with messages of the following type.) s
5 580 M
(     byte      SSH_MSG_CHANNEL_DATA) s
5 569 M
(     uint32    recipient channel) s
5 558 M
(     string    data) s
5 536 M
(   The maximum amount of data allowed is the current window size.  The) s
5 525 M
(   window size is decremented by the amount of data sent. Both parties) s
5 514 M
(   MAY ignore all extra data sent after the allowed window is empty.) s
5 492 M
(   Additionally, some channels can transfer several types of data.  An) s
5 481 M
(   example of this is stderr data from interactive sessions. Such data) s
5 470 M
(   can be passed with SSH_MSG_CHANNEL_EXTENDED_DATA messages, where a) s
5 459 M
(   separate integer specifies the type of the data.  The available types) s
5 448 M
(   and their interpretation depend on the type of the channel.) s
5 426 M
(     byte      SSH_MSG_CHANNEL_EXTENDED_DATA) s
5 415 M
(     uint32    recipient_channel) s
5 404 M
(     uint32    data_type_code) s
5 393 M
(     string    data) s
5 371 M
(   Data sent with these messages consumes the same window as ordinary) s
5 360 M
(   data.) s
5 338 M
(   Currently, only the following type is defined.) s
5 316 M
(   #define SSH_EXTENDED_DATA_STDERR                1) s
5 283 M
(5.3 Closing a Channel) s
5 261 M
(   When a party will no longer send more data to a channel, it SHOULD) s
5 250 M
(   send SSH_MSG_CHANNEL_EOF.) s
5 228 M
(     byte      SSH_MSG_CHANNEL_EOF) s
5 217 M
(     uint32    recipient_channel) s
5 195 M
(   No explicit response is sent to this message; however, the) s
5 184 M
(   application may send EOF to whatever is at the other end of the) s
5 173 M
(   channel.  Note that the channel remains open after this message, and) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004               [Page 6]) s
_R
S
PStoPSsaved restore
%%Page: (6,7) 4
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 7 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(   more data may still be sent in the other direction.  This message) s
5 679 M
(   does not consume window space and can be sent even if no window space) s
5 668 M
(   is available.) s
5 646 M
(   When either party wishes to terminate the channel, it sends) s
5 635 M
(   SSH_MSG_CHANNEL_CLOSE.  Upon receiving this message, a party MUST) s
5 624 M
(   send back a SSH_MSG_CHANNEL_CLOSE unless it has already sent this) s
5 613 M
(   message for the channel.  The channel is considered closed for a) s
5 602 M
(   party when it has both sent and received SSH_MSG_CHANNEL_CLOSE, and) s
5 591 M
(   the party may then reuse the channel number.  A party MAY send) s
5 580 M
(   SSH_MSG_CHANNEL_CLOSE without having sent or received) s
5 569 M
(   SSH_MSG_CHANNEL_EOF.) s
5 547 M
(     byte      SSH_MSG_CHANNEL_CLOSE) s
5 536 M
(     uint32    recipient_channel) s
5 514 M
(   This message does not consume window space and can be sent even if no) s
5 503 M
(   window space is available.) s
5 481 M
(   It is recommended that any data sent before this message is delivered) s
5 470 M
(   to the actual destination, if possible.) s
5 448 M
(5.4 Channel-Specific Requests) s
5 426 M
(   Many channel types have extensions that are specific to that) s
5 415 M
(   particular channel type.  An example is requesting a pty \(pseudo) s
5 404 M
(   terminal\) for an interactive session.) s
5 382 M
(   All channel-specific requests use the following format.) s
5 360 M
(     byte      SSH_MSG_CHANNEL_REQUEST) s
5 349 M
(     uint32    recipient channel) s
5 338 M
(     string    request type \(restricted to US-ASCII\)) s
5 327 M
(     boolean   want reply) s
5 316 M
(     ... type-specific data) s
5 294 M
(   If want reply is FALSE, no response will be sent to the request.) s
5 283 M
(   Otherwise, the recipient responds with either SSH_MSG_CHANNEL_SUCCESS) s
5 272 M
(   or SSH_MSG_CHANNEL_FAILURE, or request-specific continuation) s
5 261 M
(   messages. If the request is not recognized or is not supported for) s
5 250 M
(   the channel, SSH_MSG_CHANNEL_FAILURE is returned.) s
5 228 M
(   This message does not consume window space and can be sent even if no) s
5 217 M
(   window space is available. Request types are local to each channel) s
5 206 M
(   type.) s
5 184 M
(   The client is allowed to send further messages without waiting for) s
5 173 M
(   the response to the request.) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004               [Page 7]) s
_R
S
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 8 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(   request type names follow the DNS extensibility naming convention) s
5 679 M
(   outlined in [SSH-ARCH]) s
5 657 M
(     byte      SSH_MSG_CHANNEL_SUCCESS) s
5 646 M
(     uint32    recipient_channel) s
5 613 M
(     byte      SSH_MSG_CHANNEL_FAILURE) s
5 602 M
(     uint32    recipient_channel) s
5 580 M
(   These messages do not consume window space and can be sent even if no) s
5 569 M
(   window space is available.) s
5 547 M
(6. Interactive Sessions) s
5 525 M
(   A session is a remote execution of a program.  The program may be a) s
5 514 M
(   shell, an application, a system command, or some built-in subsystem.) s
5 503 M
(   It may or may not have a tty, and may or may not involve X11) s
5 492 M
(   forwarding. Multiple sessions can be active simultaneously.) s
5 470 M
(6.1 Opening a Session) s
5 448 M
(   A session is started by sending the following message.) s
5 426 M
(     byte      SSH_MSG_CHANNEL_OPEN) s
5 415 M
(     string    "session") s
5 404 M
(     uint32    sender channel) s
5 393 M
(     uint32    initial window size) s
5 382 M
(     uint32    maximum packet size) s
5 360 M
(   Client implementations SHOULD reject any session channel open) s
5 349 M
(   requests to make it more difficult for a corrupt server to attack the) s
5 338 M
(   client.) s
5 316 M
(6.2 Requesting a Pseudo-Terminal) s
5 294 M
(   A pseudo-terminal can be allocated for the session by sending the) s
5 283 M
(   following message.) s
5 261 M
(     byte      SSH_MSG_CHANNEL_REQUEST) s
5 250 M
(     uint32    recipient_channel) s
5 239 M
(     string    "pty-req") s
5 228 M
(     boolean   want_reply) s
5 217 M
(     string    TERM environment variable value \(e.g., vt100\)) s
5 206 M
(     uint32    terminal width, characters \(e.g., 80\)) s
5 195 M
(     uint32    terminal height, rows \(e.g., 24\)) s
5 184 M
(     uint32    terminal width, pixels \(e.g., 640\)) s
5 173 M
(     uint32    terminal height, pixels \(e.g., 480\)) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004               [Page 8]) s
_R
S
PStoPSsaved restore
%%Page: (8,9) 5
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 9 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(     string    encoded terminal modes) s
5 668 M
(   The encoding of terminal modes is described in Section Encoding of) s
5 657 M
(   Terminal Modes \(Section 8\). Zero dimension parameters MUST be) s
5 646 M
(   ignored. The character/row dimensions override the pixel dimensions) s
5 635 M
(   \(when nonzero\). Pixel dimensions refer to the drawable area of the) s
5 624 M
(   window.) s
5 602 M
(   The dimension parameters are only informational.) s
5 580 M
(   The client SHOULD ignore pty requests.) s
5 558 M
(6.3 X11 Forwarding) s
5 536 M
(6.3.1 Requesting X11 Forwarding) s
5 514 M
(   X11 forwarding may be requested for a session by sending) s
5 492 M
(     byte      SSH_MSG_CHANNEL_REQUEST) s
5 481 M
(     uint32    recipient channel) s
5 470 M
(     string    "x11-req") s
5 459 M
(     boolean   want reply) s
5 448 M
(     boolean   single connection) s
5 437 M
(     string    x11 authentication protocol) s
5 426 M
(     string    x11 authentication cookie) s
5 415 M
(     uint32    x11 screen number) s
5 393 M
(   It is recommended that the authentication cookie that is sent be a) s
5 382 M
(   fake, random cookie, and that the cookie is checked and replaced by) s
5 371 M
(   the real cookie when a connection request is received.) s
5 349 M
(   X11 connection forwarding should stop when the session channel is) s
5 338 M
(   closed; however, already opened forwardings should not be) s
5 327 M
(   automatically closed when the session channel is closed.) s
5 305 M
(   If `single connection' is TRUE, only a single connection should be) s
5 294 M
(   forwarded.  No more connections will be forwarded after the first, or) s
5 283 M
(   after the session channel has been closed.) s
5 261 M
(   The "x11 authentication protocol" is the name of the X11) s
5 250 M
(   authentication method used, e.g. "MIT-MAGIC-COOKIE-1".) s
5 228 M
(   The x11 authentication cookie MUST be hexadecimal encoded.) s
5 206 M
(   X Protocol is documented in [SCHEIFLER].) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004               [Page 9]) s
_R
S
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 10 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(6.3.2 X11 Channels) s
5 668 M
(   X11 channels are opened with a channel open request.  The resulting) s
5 657 M
(   channels are independent of the session, and closing the session) s
5 646 M
(   channel does not close the forwarded X11 channels.) s
5 624 M
(     byte      SSH_MSG_CHANNEL_OPEN) s
5 613 M
(     string    "x11") s
5 602 M
(     uint32    sender channel) s
5 591 M
(     uint32    initial window size) s
5 580 M
(     uint32    maximum packet size) s
5 569 M
(     string    originator address \(e.g. "192.168.7.38"\)) s
5 558 M
(     uint32    originator port) s
5 536 M
(   The recipient should respond with SSH_MSG_CHANNEL_OPEN_CONFIRMATION) s
5 525 M
(   or SSH_MSG_CHANNEL_OPEN_FAILURE.) s
5 503 M
(   Implementations MUST reject any X11 channel open requests if they) s
5 492 M
(   have not requested X11 forwarding.) s
5 470 M
(6.4 Environment Variable Passing) s
5 448 M
(   Environment variables may be passed to the shell/command to be) s
5 437 M
(   started later. Uncontrolled setting of environment variables in a) s
5 426 M
(   privileged process can be a security hazard.  It is recommended that) s
5 415 M
(   implementations either maintain a list of allowable variable names or) s
5 404 M
(   only set environment variables after the server process has dropped) s
5 393 M
(   sufficient privileges.) s
5 371 M
(     byte      SSH_MSG_CHANNEL_REQUEST) s
5 360 M
(     uint32    recipient channel) s
5 349 M
(     string    "env") s
5 338 M
(     boolean   want reply) s
5 327 M
(     string    variable name) s
5 316 M
(     string    variable value) s
5 283 M
(6.5 Starting a Shell or a Command) s
5 261 M
(   Once the session has been set up, a program is started at the remote) s
5 250 M
(   end. The program can be a shell, an application program or a) s
5 239 M
(   subsystem with a host-independent name.  Only one of these requests) s
5 228 M
(   can succeed per channel.) s
5 206 M
(     byte      SSH_MSG_CHANNEL_REQUEST) s
5 195 M
(     uint32    recipient channel) s
5 184 M
(     string    "shell") s
5 173 M
(     boolean   want reply) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 10]) s
_R
S
PStoPSsaved restore
%%Page: (10,11) 6
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 11 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(   This message will request the user's default shell \(typically defined) s
5 679 M
(   in /etc/passwd in UNIX systems\) to be started at the other end.) s
5 657 M
(     byte      SSH_MSG_CHANNEL_REQUEST) s
5 646 M
(     uint32    recipient channel) s
5 635 M
(     string    "exec") s
5 624 M
(     boolean   want reply) s
5 613 M
(     string    command) s
5 591 M
(   This message will request the server to start the execution of the) s
5 580 M
(   given command. The command string may contain a path. Normal) s
5 569 M
(   precautions MUST be taken to prevent the execution of unauthorized) s
5 558 M
(   commands.) s
5 536 M
(     byte      SSH_MSG_CHANNEL_REQUEST) s
5 525 M
(     uint32    recipient channel) s
5 514 M
(     string    "subsystem") s
5 503 M
(     boolean   want reply) s
5 492 M
(     string    subsystem name) s
5 470 M
(   This last form executes a predefined subsystem.  It is expected that) s
5 459 M
(   these will include a general file transfer mechanism, and possibly) s
5 448 M
(   other features.  Implementations may also allow configuring more such) s
5 437 M
(   mechanisms. As the user's shell is usually used to execute the) s
5 426 M
(   subsystem, it is advisable for the subsystem protocol to have a) s
5 415 M
(   "magic cookie" at the beginning of the protocol transaction to) s
5 404 M
(   distinguish it from arbitrary output generated by shell) s
5 393 M
(   initialization scripts etc. This spurious output from the shell may) s
5 382 M
(   be filtered out either at the server or at the client.) s
5 360 M
(   The server SHOULD not halt the execution of the protocol stack when) s
5 349 M
(   starting a shell or a program. All input and output from these SHOULD) s
5 338 M
(   be redirected to the channel or to the encrypted tunnel.) s
5 316 M
(   It is RECOMMENDED to request and check the reply for these messages.) s
5 305 M
(   The client SHOULD ignore these messages.) s
5 283 M
(   Subsystem names follow the DNS extensibility naming convention) s
5 272 M
(   outlined in [SSH-ARCH].) s
5 250 M
(6.6 Session Data Transfer) s
5 228 M
(   Data transfer for a session is done using SSH_MSG_CHANNEL_DATA and) s
5 217 M
(   SSH_MSG_CHANNEL_EXTENDED_DATA packets and the window mechanism.  The) s
5 206 M
(   extended data type SSH_EXTENDED_DATA_STDERR has been defined for) s
5 195 M
(   stderr data.) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 11]) s
_R
S
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 12 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(6.7 Window Dimension Change Message) s
5 668 M
(   When the window \(terminal\) size changes on the client side, it MAY) s
5 657 M
(   send a message to the other side to inform it of the new dimensions.) s
5 635 M
(     byte      SSH_MSG_CHANNEL_REQUEST) s
5 624 M
(     uint32    recipient_channel) s
5 613 M
(     string    "window-change") s
5 602 M
(     boolean   FALSE) s
5 591 M
(     uint32    terminal width, columns) s
5 580 M
(     uint32    terminal height, rows) s
5 569 M
(     uint32    terminal width, pixels) s
5 558 M
(     uint32    terminal height, pixels) s
5 536 M
(    No response SHOULD be sent to this message.) s
5 514 M
(6.8 Local Flow Control) s
5 492 M
(   On many systems, it is possible to determine if a pseudo-terminal is) s
5 481 M
(   using control-S/control-Q flow control.  When flow control is) s
5 470 M
(   allowed, it is often desirable to do the flow control at the client) s
5 459 M
(   end to speed up responses to user requests.  This is facilitated by) s
5 448 M
(   the following notification.  Initially, the server is responsible for) s
5 437 M
(   flow control. \(Here, again, client means the side originating the) s
5 426 M
(   session, and server means the other side.\)) s
5 404 M
(   The message below is used by the server to inform the client when it) s
5 393 M
(   can or cannot perform flow control \(control-S/control-Q processing\).) s
5 382 M
(   If `client can do' is TRUE, the client is allowed to do flow control) s
5 371 M
(   using control-S and control-Q.  The client MAY ignore this message.) s
5 349 M
(     byte      SSH_MSG_CHANNEL_REQUEST) s
5 338 M
(     uint32    recipient channel) s
5 327 M
(     string    "xon-xoff") s
5 316 M
(     boolean   FALSE) s
5 305 M
(     boolean   client can do) s
5 283 M
(   No response is sent to this message.) s
5 261 M
(6.9 Signals) s
5 239 M
(   A signal can be delivered to the remote process/service using the) s
5 228 M
(   following message.  Some systems may not implement signals, in which) s
5 217 M
(   case they SHOULD ignore this message.) s
5 195 M
(     byte      SSH_MSG_CHANNEL_REQUEST) s
5 184 M
(     uint32    recipient channel) s
5 173 M
(     string    "signal") s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 12]) s
_R
S
PStoPSsaved restore
%%Page: (12,13) 7
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 13 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(     boolean   FALSE) s
5 679 M
(     string    signal name without the "SIG" prefix.) s
5 657 M
(   Signal names will be encoded as discussed in the "exit-signal") s
5 646 M
(   SSH_MSG_CHANNEL_REQUEST.) s
5 624 M
(6.10 Returning Exit Status) s
5 602 M
(   When the command running at the other end terminates, the following) s
5 591 M
(   message can be sent to return the exit status of the command.) s
5 580 M
(   Returning the status is RECOMMENDED.  No acknowledgment is sent for) s
5 569 M
(   this message.  The channel needs to be closed with) s
5 558 M
(   SSH_MSG_CHANNEL_CLOSE after this message.) s
5 536 M
(   The client MAY ignore these messages.) s
5 514 M
(     byte      SSH_MSG_CHANNEL_REQUEST) s
5 503 M
(     uint32    recipient_channel) s
5 492 M
(     string    "exit-status") s
5 481 M
(     boolean   FALSE) s
5 470 M
(     uint32    exit_status) s
5 448 M
(   The remote command may also terminate violently due to a signal.) s
5 437 M
(   Such a condition can be indicated by the following message. A zero) s
5 426 M
(   exit_status usually means that the command terminated successfully.) s
5 404 M
(     byte      SSH_MSG_CHANNEL_REQUEST) s
5 393 M
(     uint32    recipient channel) s
5 382 M
(     string    "exit-signal") s
5 371 M
(     boolean   FALSE) s
5 360 M
(     string    signal name without the "SIG" prefix.) s
5 349 M
(     boolean   core dumped) s
5 338 M
(     string    error message \(ISO-10646 UTF-8\)) s
5 327 M
(     string    language tag \(as defined in [RFC3066]\)) s
5 305 M
(   The signal name is one of the following \(these are from [POSIX]\)) s
5 283 M
(     ABRT) s
5 272 M
(     ALRM) s
5 261 M
(     FPE) s
5 250 M
(     HUP) s
5 239 M
(     ILL) s
5 228 M
(     INT) s
5 217 M
(     KILL) s
5 206 M
(     PIPE) s
5 195 M
(     QUIT) s
5 184 M
(     SEGV) s
5 173 M
(     TERM) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 13]) s
_R
S
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 14 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(     USR1) s
5 679 M
(     USR2) s
5 657 M
(   Additional signal names MAY be sent in the format "sig-name@xyz",) s
5 646 M
(   where `sig-name' and `xyz' may be anything a particular implementor) s
5 635 M
(   wants \(except the `@' sign\). However, it is suggested that if a) s
5 624 M
(   `configure' script is used, the non-standard signal names it finds be) s
5 613 M
(   encoded as "SIG@xyz.config.guess", where `SIG' is the signal name) s
5 602 M
(   without the "SIG" prefix, and `xyz' be the host type, as determined) s
5 591 M
(   by `config.guess'.) s
5 569 M
(   The `error message' contains an additional explanation of the error) s
5 558 M
(   message. The message may consist of multiple lines. The client) s
5 547 M
(   software MAY display this message to the user. If this is done, the) s
5 536 M
(   client software should take the precautions discussed in [SSH-ARCH].) s
5 514 M
(7. TCP/IP Port Forwarding) s
5 492 M
(7.1 Requesting Port Forwarding) s
5 470 M
(   A party need not explicitly request forwardings from its own end to) s
5 459 M
(   the other direction.  However, if it wishes that connections to a) s
5 448 M
(   port on the other side be forwarded to the local side, it must) s
5 437 M
(   explicitly request this.) s
5 404 M
(     byte      SSH_MSG_GLOBAL_REQUEST) s
5 393 M
(     string    "tcpip-forward") s
5 382 M
(     boolean   want reply) s
5 371 M
(     string    address to bind \(e.g. "0.0.0.0"\)) s
5 360 M
(     uint32    port number to bind) s
5 338 M
(   `Address to bind' and `port number to bind' specify the IP address) s
5 327 M
(   and port to which the socket to be listened is bound.  The address) s
5 316 M
(   should be "0.0.0.0" if connections are allowed from anywhere. \(Note) s
5 305 M
(   that the client can still filter connections based on information) s
5 294 M
(   passed in the open request.\)) s
5 272 M
(   Implementations should only allow forwarding privileged ports if the) s
5 261 M
(   user has been authenticated as a privileged user.) s
5 239 M
(   Client implementations SHOULD reject these messages; they are) s
5 228 M
(   normally only sent by the client.) s
5 195 M
(   If a client passes 0 as port number to bind and has want reply TRUE) s
5 184 M
(   then the server allocates the next available unprivileged port number) s
5 173 M
(   and replies with the following message, otherwise there is no) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 14]) s
_R
S
PStoPSsaved restore
%%Page: (14,15) 8
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 15 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(   response specific data.) s
5 657 M
(     byte     SSH_MSG_GLOBAL_REQUEST_SUCCESS) s
5 646 M
(     uint32   port that was bound on the server) s
5 624 M
(   A port forwarding can be cancelled with the following message.  Note) s
5 613 M
(   that channel open requests may be received until a reply to this) s
5 602 M
(   message is received.) s
5 580 M
(     byte      SSH_MSG_GLOBAL_REQUEST) s
5 569 M
(     string    "cancel-tcpip-forward") s
5 558 M
(     boolean   want reply) s
5 547 M
(     string    address_to_bind \(e.g. "127.0.0.1"\)) s
5 536 M
(     uint32    port number to bind) s
5 514 M
(   Client implementations SHOULD reject these messages; they are) s
5 503 M
(   normally only sent by the client.) s
5 481 M
(7.2 TCP/IP Forwarding Channels) s
5 459 M
(   When a connection comes to a port for which remote forwarding has) s
5 448 M
(   been requested, a channel is opened to forward the port to the other) s
5 437 M
(   side.) s
5 415 M
(     byte      SSH_MSG_CHANNEL_OPEN) s
5 404 M
(     string    "forwarded-tcpip") s
5 393 M
(     uint32    sender channel) s
5 382 M
(     uint32    initial window size) s
5 371 M
(     uint32    maximum packet size) s
5 360 M
(     string    address that was connected) s
5 349 M
(     uint32    port that was connected) s
5 338 M
(     string    originator IP address) s
5 327 M
(     uint32    originator port) s
5 305 M
(   Implementations MUST reject these messages unless they have) s
5 294 M
(   previously requested a remote TCP/IP port forwarding with the given) s
5 283 M
(   port number.) s
5 261 M
(   When a connection comes to a locally forwarded TCP/IP port, the) s
5 250 M
(   following packet is sent to the other side.  Note that these messages) s
5 239 M
(   MAY be sent also for ports for which no forwarding has been) s
5 228 M
(   explicitly requested.  The receiving side must decide whether to) s
5 217 M
(   allow the forwarding.) s
5 195 M
(     byte      SSH_MSG_CHANNEL_OPEN) s
5 184 M
(     string    "direct-tcpip") s
5 173 M
(     uint32    sender channel) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 15]) s
_R
S
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 16 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(     uint32    initial window size) s
5 679 M
(     uint32    maximum packet size) s
5 668 M
(     string    host to connect) s
5 657 M
(     uint32    port to connect) s
5 646 M
(     string    originator IP address) s
5 635 M
(     uint32    originator port) s
5 613 M
(   `Host to connect' and `port to connect' specify the TCP/IP host and) s
5 602 M
(   port where the recipient should connect the channel. `Host to) s
5 591 M
(   connect' may be either a domain name or a numeric IP address.) s
5 569 M
(   `Originator IP address' is the numeric IP address of the machine) s
5 558 M
(   where the connection request comes from, and `originator port' is the) s
5 547 M
(   port on the originator host from where the connection came from.) s
5 525 M
(   Forwarded TCP/IP channels are independent of any sessions, and) s
5 514 M
(   closing a session channel does not in any way imply that forwarded) s
5 503 M
(   connections should be closed.) s
5 481 M
(   Client implementations SHOULD reject direct TCP/IP open requests for) s
5 470 M
(   security reasons.) s
5 448 M
(8. Encoding of Terminal Modes) s
5 426 M
(   Terminal modes \(as passed in a pty request\) are encoded into a byte) s
5 415 M
(   stream.  It is intended that the coding be portable across different) s
5 404 M
(   environments.) s
5 382 M
(   The tty mode description is a stream of bytes.  The stream consists) s
5 371 M
(   of opcode-argument pairs.  It is terminated by opcode TTY_OP_END \(0\).) s
5 360 M
(   Opcodes 1 to 159 have a single uint32 argument. Opcodes 160 to 255) s
5 349 M
(   are not yet defined, and cause parsing to stop \(they should only be) s
5 338 M
(   used after any other data\).) s
5 316 M
(   The client SHOULD put in the stream any modes it knows about, and the) s
5 305 M
(   server MAY ignore any modes it does not know about.  This allows some) s
5 294 M
(   degree of machine-independence, at least between systems that use a) s
5 283 M
(   POSIX-like tty interface.  The protocol can support other systems as) s
5 272 M
(   well, but the client may need to fill reasonable values for a number) s
5 261 M
(   of parameters so the server pty gets set to a reasonable mode \(the) s
5 250 M
(   server leaves all unspecified mode bits in their default values, and) s
5 239 M
(   only some combinations make sense\).) s
5 217 M
(   The following opcodes have been defined.  The naming of opcodes) s
5 206 M
(   mostly follows the POSIX terminal mode flags.) s
5 184 M
(   0   TTY_OP_END     Indicates end of options.) s
5 173 M
(   1   VINTR          Interrupt character; 255 if none.  Similarly for the) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 16]) s
_R
S
PStoPSsaved restore
%%Page: (16,17) 9
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 17 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(                      other characters. Not all of these characters are) s
5 679 M
(                      supported on all systems.) s
5 668 M
(   2   VQUIT          The quit character \(sends SIGQUIT signal on POSIX) s
5 657 M
(                      systems\).) s
5 646 M
(   3   VERASE         Erase the character to left of the cursor.) s
5 635 M
(   4   VKILL          Kill the current input line.) s
5 624 M
(   5   VEOF           End-of-file character \(sends EOF from the terminal\).) s
5 613 M
(   6   VEOL           End-of-line character in addition to carriage return) s
5 602 M
(                      and/or linefeed.) s
5 591 M
(   7   VEOL2          Additional end-of-line character.) s
5 580 M
(   8   VSTART         Continues paused output \(normally control-Q\).) s
5 569 M
(   9   VSTOP          Pauses output \(normally control-S\).) s
5 558 M
(   10  VSUSP          Suspends the current program.) s
5 547 M
(   11  VDSUSP         Another suspend character.) s
5 536 M
(   12  VREPRINT       Reprints the current input line.) s
5 525 M
(   13  VWERASE        Erases a word left of cursor.) s
5 514 M
(   14  VLNEXT         Enter the next character typed literally, even if it) s
5 503 M
(                      is a special character) s
5 492 M
(   15  VFLUSH         Character to flush output.) s
5 481 M
(   16  VSWTCH         Switch to a different shell layer.) s
5 470 M
(   17  VSTATUS        Prints system status line \(load, command, pid etc\).) s
5 459 M
(   18  VDISCARD       Toggles the flushing of terminal output.) s
5 448 M
(   30  IGNPAR         The ignore parity flag.  The parameter SHOULD be 0 if) s
5 437 M
(                      this flag is FALSE set, and 1 if it is TRUE.) s
5 426 M
(   31  PARMRK         Mark parity and framing errors.) s
5 415 M
(   32  INPCK          Enable checking of parity errors.) s
5 404 M
(   33  ISTRIP         Strip 8th bit off characters.) s
5 393 M
(   34  INLCR          Map NL into CR on input.) s
5 382 M
(   35  IGNCR          Ignore CR on input.) s
5 371 M
(   36  ICRNL          Map CR to NL on input.) s
5 360 M
(   37  IUCLC          Translate uppercase characters to lowercase.) s
5 349 M
(   38  IXON           Enable output flow control.) s
5 338 M
(   39  IXANY          Any char will restart after stop.) s
5 327 M
(   40  IXOFF          Enable input flow control.) s
5 316 M
(   41  IMAXBEL        Ring bell on input queue full.) s
5 305 M
(   50  ISIG           Enable signals INTR, QUIT, [D]SUSP.) s
5 294 M
(   51  ICANON         Canonicalize input lines.) s
5 283 M
(   52  XCASE          Enable input and output of uppercase characters by) s
5 272 M
(                      preceding their lowercase equivalents with `\\'.) s
5 261 M
(   53  ECHO           Enable echoing.) s
5 250 M
(   54  ECHOE          Visually erase chars.) s
5 239 M
(   55  ECHOK          Kill character discards current line.) s
5 228 M
(   56  ECHONL         Echo NL even if ECHO is off.) s
5 217 M
(   57  NOFLSH         Don't flush after interrupt.) s
5 206 M
(   58  TOSTOP         Stop background jobs from output.) s
5 195 M
(   59  IEXTEN         Enable extensions.) s
5 184 M
(   60  ECHOCTL        Echo control characters as ^\(Char\).) s
5 173 M
(   61  ECHOKE         Visual erase for line kill.) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 17]) s
_R
S
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 18 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(   62  PENDIN         Retype pending input.) s
5 679 M
(   70  OPOST          Enable output processing.) s
5 668 M
(   71  OLCUC          Convert lowercase to uppercase.) s
5 657 M
(   72  ONLCR          Map NL to CR-NL.) s
5 646 M
(   73  OCRNL          Translate carriage return to newline \(output\).) s
5 635 M
(   74  ONOCR          Translate newline to carriage return-newline) s
5 624 M
(                      \(output\).) s
5 613 M
(   75  ONLRET         Newline performs a carriage return \(output\).) s
5 602 M
(   90  CS7            7 bit mode.) s
5 591 M
(   91  CS8            8 bit mode.) s
5 580 M
(   92  PARENB         Parity enable.) s
5 569 M
(   93  PARODD         Odd parity, else even.) s
5 547 M
(   128 TTY_OP_ISPEED  Specifies the input baud rate in bits per second.) s
5 536 M
(   129 TTY_OP_OSPEED  Specifies the output baud rate in bits per second.) s
5 503 M
(9. Summary of Message Numbers) s
5 481 M
(     #define SSH_MSG_GLOBAL_REQUEST                  80) s
5 470 M
(     #define SSH_MSG_REQUEST_SUCCESS                 81) s
5 459 M
(     #define SSH_MSG_REQUEST_FAILURE                 82) s
5 448 M
(     #define SSH_MSG_CHANNEL_OPEN                    90) s
5 437 M
(     #define SSH_MSG_CHANNEL_OPEN_CONFIRMATION       91) s
5 426 M
(     #define SSH_MSG_CHANNEL_OPEN_FAILURE            92) s
5 415 M
(     #define SSH_MSG_CHANNEL_WINDOW_ADJUST           93) s
5 404 M
(     #define SSH_MSG_CHANNEL_DATA                    94) s
5 393 M
(     #define SSH_MSG_CHANNEL_EXTENDED_DATA           95) s
5 382 M
(     #define SSH_MSG_CHANNEL_EOF                     96) s
5 371 M
(     #define SSH_MSG_CHANNEL_CLOSE                   97) s
5 360 M
(     #define SSH_MSG_CHANNEL_REQUEST                 98) s
5 349 M
(     #define SSH_MSG_CHANNEL_SUCCESS                 99) s
5 338 M
(     #define SSH_MSG_CHANNEL_FAILURE                 100) s
5 305 M
(10. Security Considerations) s
5 283 M
(   This protocol is assumed to run on top of a secure, authenticated) s
5 272 M
(   transport.  User authentication and protection against network-level) s
5 261 M
(   attacks are assumed to be provided by the underlying protocols.) s
5 239 M
(   It is RECOMMENDED that implementations disable all the potentially) s
5 228 M
(   dangerous features \(e.g. agent forwarding, X11 forwarding, and TCP/IP) s
5 217 M
(   forwarding\) if the host key has changed.) s
5 195 M
(   Full security considerations for this protocol are provided in) s
5 184 M
(   Section 8 of [SSH-ARCH]) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 18]) s
_R
S
PStoPSsaved restore
%%Page: (18,19) 10
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 19 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(11. iana cONSiderations) s
5 668 M
(   This document is part of a set, the IANA considerations for the SSH) s
5 657 M
(   protocol as defined in [SSH-ARCH], [SSH-TRANS], [SSH-USERAUTH],) s
5 646 M
(   [SSH-CONNECT] are detailed in [SSH-NUMBERS].) s
5 624 M
(12. Intellectual Property) s
5 602 M
(   The IETF takes no position regarding the validity or scope of any) s
5 591 M
(   intellectual property or other rights that might be claimed to) s
5 580 M
(   pertain to the implementation or use of the technology described in) s
5 569 M
(   this document or the extent to which any license under such rights) s
5 558 M
(   might or might not be available; neither does it represent that it) s
5 547 M
(   has made any effort to identify any such rights. Information on the) s
5 536 M
(   IETF's procedures with respect to rights in standards-track and) s
5 525 M
(   standards-related documentation can be found in BCP-11. Copies of) s
5 514 M
(   claims of rights made available for publication and any assurances of) s
5 503 M
(   licenses to be made available, or the result of an attempt made to) s
5 492 M
(   obtain a general license or permission for the use of such) s
5 481 M
(   proprietary rights by implementers or users of this specification can) s
5 470 M
(   be obtained from the IETF Secretariat.) s
5 448 M
(   The IETF has been notified of intellectual property rights claimed in) s
5 437 M
(   regard to some or all of the specification contained in this) s
5 426 M
(   document. For more information consult the online list of claimed) s
5 415 M
(   rights.) s
5 393 M
(Normative References) s
5 371 M
(   [SSH-ARCH]) s
5 360 M
(              Ylonen, T., "SSH Protocol Architecture", I-D) s
5 349 M
(              draft-ietf-architecture-15.txt, Oct 2003.) s
5 327 M
(   [SSH-TRANS]) s
5 316 M
(              Ylonen, T., "SSH Transport Layer Protocol", I-D) s
5 305 M
(              draft-ietf-transport-17.txt, Oct 2003.) s
5 283 M
(   [SSH-USERAUTH]) s
5 272 M
(              Ylonen, T., "SSH Authentication Protocol", I-D) s
5 261 M
(              draft-ietf-userauth-18.txt, Oct 2003.) s
5 239 M
(   [SSH-CONNECT]) s
5 228 M
(              Ylonen, T., "SSH Connection Protocol", I-D) s
5 217 M
(              draft-ietf-connect-18.txt, Oct 2003.) s
5 195 M
(   [SSH-NUMBERS]) s
5 184 M
(              Lehtinen, S. and D. Moffat, "SSH Protocol Assigned) s
5 173 M
(              Numbers", I-D draft-ietf-secsh-assignednumbers-05.txt, Oct) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 19]) s
_R
S
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 20 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(              2003.) s
5 668 M
(   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate) s
5 657 M
(              Requirement Levels", BCP 14, RFC 2119, March 1997.) s
5 635 M
(Informative References) s
5 613 M
(   [RFC3066]  Alvestrand, H., "Tags for the Identification of) s
5 602 M
(              Languages", BCP 47, RFC 3066, January 2001.) s
5 580 M
(   [RFC1884]  Hinden, R. and S. Deering, "IP Version 6 Addressing) s
5 569 M
(              Architecture", RFC 1884, December 1995.) s
5 547 M
(   [RFC2279]  Yergeau, F., "UTF-8, a transformation format of ISO) s
5 536 M
(              10646", RFC 2279, January 1998.) s
5 514 M
(   [SCHEIFLER]) s
5 503 M
(              Scheifler, R., "X Window System : The Complete Reference) s
5 492 M
(              to Xlib, X Protocol, Icccm, Xlfd, 3rd edition.", Digital) s
5 481 M
(              Press ISBN 1555580882, Feburary 1992.) s
5 459 M
(   [POSIX]    ISO/IEC, 9945-1., "Information technology -- Portable) s
5 448 M
(              Operating System Interface  \(POSIX\)-Part 1: System) s
5 437 M
(              Application Program Interface \(API\) C Language", ANSI/IEE) s
5 426 M
(              Std 1003.1, July 1996.) s
5 393 M
(Authors' Addresses) s
5 371 M
(   Tatu Ylonen) s
5 360 M
(   SSH Communications Security Corp) s
5 349 M
(   Fredrikinkatu 42) s
5 338 M
(   HELSINKI  FIN-00100) s
5 327 M
(   Finland) s
5 305 M
(   EMail: ylo@ssh.com) s
5 272 M
(   Darren J. Moffat \(editor\)) s
5 261 M
(   Sun Microsystems, Inc) s
5 250 M
(   17 Network Circle) s
5 239 M
(   Menlo Park  CA 94025) s
5 228 M
(   USA) s
5 206 M
(   EMail: Darren.Moffat@Sun.COM) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 20]) s
_R
S
PStoPSsaved restore
%%Page: (20,21) 11
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 21 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(Intellectual Property Statement) s
5 668 M
(   The IETF takes no position regarding the validity or scope of any) s
5 657 M
(   intellectual property or other rights that might be claimed to) s
5 646 M
(   pertain to the implementation or use of the technology described in) s
5 635 M
(   this document or the extent to which any license under such rights) s
5 624 M
(   might or might not be available; neither does it represent that it) s
5 613 M
(   has made any effort to identify any such rights. Information on the) s
5 602 M
(   IETF's procedures with respect to rights in standards-track and) s
5 591 M
(   standards-related documentation can be found in BCP-11. Copies of) s
5 580 M
(   claims of rights made available for publication and any assurances of) s
5 569 M
(   licenses to be made available, or the result of an attempt made to) s
5 558 M
(   obtain a general license or permission for the use of such) s
5 547 M
(   proprietary rights by implementors or users of this specification can) s
5 536 M
(   be obtained from the IETF Secretariat.) s
5 514 M
(   The IETF invites any interested party to bring to its attention any) s
5 503 M
(   copyrights, patents or patent applications, or other proprietary) s
5 492 M
(   rights which may cover technology that may be required to practice) s
5 481 M
(   this standard. Please address the information to the IETF Executive) s
5 470 M
(   Director.) s
5 448 M
(   The IETF has been notified of intellectual property rights claimed in) s
5 437 M
(   regard to some or all of the specification contained in this) s
5 426 M
(   document. For more information consult the online list of claimed) s
5 415 M
(   rights.) s
5 382 M
(Full Copyright Statement) s
5 360 M
(   Copyright \(C\) The Internet Society \(2003\). All Rights Reserved.) s
5 338 M
(   This document and translations of it may be copied and furnished to) s
5 327 M
(   others, and derivative works that comment on or otherwise explain it) s
5 316 M
(   or assist in its implementation may be prepared, copied, published) s
5 305 M
(   and distributed, in whole or in part, without restriction of any) s
5 294 M
(   kind, provided that the above copyright notice and this paragraph are) s
5 283 M
(   included on all such copies and derivative works. However, this) s
5 272 M
(   document itself may not be modified in any way, such as by removing) s
5 261 M
(   the copyright notice or references to the Internet Society or other) s
5 250 M
(   Internet organizations, except as needed for the purpose of) s
5 239 M
(   developing Internet standards in which case the procedures for) s
5 228 M
(   copyrights defined in the Internet Standards process must be) s
5 217 M
(   followed, or as required to translate it into languages other than) s
5 206 M
(   English.) s
5 184 M
(   The limited permissions granted above are perpetual and will not be) s
5 173 M
(   revoked by the Internet Society or its successors or assignees.) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 21]) s
_R
S
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
_S
75 0 translate
/pagenum 22 def
/fname () def
/fdir () def
/ftail () def
/user_header_p false def
%%EndPageSetup
5 723 M
(Internet-Draft          SSH Connection Protocol                 Oct 2003) s
5 690 M
(   This document and the information contained herein is provided on an) s
5 679 M
(   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING) s
5 668 M
(   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING) s
5 657 M
(   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION) s
5 646 M
(   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF) s
5 635 M
(   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.) s
5 602 M
(Acknowledgment) s
5 580 M
(   Funding for the RFC Editor function is currently provided by the) s
5 569 M
(   Internet Society.) s
5 129 M
(Ylonen & Moffat, Editor    Expires March 31, 2004              [Page 22]) s
_R
S
PStoPSsaved restore
%%Trailer
%%Pages: 22
%%DocumentNeededResources: font Courier-Bold Courier 
%%EOF
