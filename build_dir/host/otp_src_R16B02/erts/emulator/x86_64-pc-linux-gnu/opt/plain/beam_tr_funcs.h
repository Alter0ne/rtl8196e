/*
 *  Warning: Do not edit this file.
 *  Auto-generated by 'beam_makeops'.
 */

case 0: RVAL = const_select_val(st, var[0], var[1], var[2], var+3); break;
case 1: RVAL = gen_jump_tab(st, var[0], var[1], var[2], var+3); break;
case 2: RVAL = gen_jump_tab(st, var[1], var[0], var[2], var+3); break;
case 3: RVAL = gen_split_values(st, var[1], var[0], var[2], var[3], var+4); break;
case 4: RVAL = gen_split_values(st, var[0], var[1], var[1], var[2], var+3); break;
case 5: RVAL = gen_select_val(st, var[1], var[0], var[2], var+3); break;
case 6: RVAL = gen_select_literals(st, var[0], var[1], var[2], var+3); break;
case 7: RVAL = gen_select_val(st, var[0], var[1], var[2], var+3); break;
case 8: RVAL = gen_select_tuple_arity(st, var[1], var[0], var[2], var+3); break;
case 9: RVAL = gen_select_tuple_arity(st, var[0], var[1], var[2], var+3); break;
case 10: RVAL = gen_literal_timeout(st, var[0], var[1]); break;
case 11: RVAL = gen_literal_timeout_locked(st, var[0], var[1]); break;
case 12: RVAL = tuple_append_put5(st, var[1], var[0], var+7, var[2], var[3], var[4], var[5], var[6]); break;
case 13: RVAL = tuple_append_put(st, var[1], var[0], var+3, var[2]); break;
case 14: RVAL = gen_element(st, var[0], var[1], var[2], var[3]); break;
case 15: RVAL = gen_make_fun2(st, var[0]); break;
case 16: RVAL = gen_bs_save(st, var[0], var[1]); break;
case 17: RVAL = gen_bs_restore(st, var[0], var[1]); break;
case 18: RVAL = gen_get_integer2(st, var[0], var[1], var[2], var[3], var[4], var[5], var[6]); break;
case 19: RVAL = gen_get_binary2(st, var[0], var[1], var[2], var[3], var[4], var[5], var[6]); break;
case 20: RVAL = gen_get_float2(st, var[0], var[1], var[2], var[3], var[4], var[5], var[6]); break;
case 21: RVAL = gen_skip_bits2(st, var[0], var[1], var[2], var[3], var[4]); break;
case 22: RVAL = gen_put_integer(st, var[0], var[1], var[2], var[3], var[4]); break;
case 23: RVAL = gen_put_float(st, var[0], var[1], var[2], var[3], var[4]); break;
case 24: RVAL = gen_put_binary(st, var[0], var[1], var[2], var[3], var[4]); break;
case 25: RVAL = gen_increment(st, var[2], var[1], var[0], var[3]); break;
case 26: RVAL = gen_increment(st, var[1], var[2], var[0], var[3]); break;
case 27: RVAL = gen_increment_from_minus(st, var[1], var[2], var[0], var[3]); break;
case 28: RVAL = gen_guard_bif1(st, var[0], var[1], var[2], var[3], var[4]); break;
case 29: RVAL = gen_guard_bif2(st, var[0], var[1], var[2], var[3], var[4], var[5]); break;
case 30: RVAL = gen_guard_bif3(st, var[0], var[1], var[2], var[3], var[4], var[5], var[6]); break;
