dnl @ ../doc/m4.texi:7831: Origin of test
dnl @ expected status: 1
dnl @ extra options:  -L9
dnl @ Copyright (C) 2006, 2007, 2008, 2009 Free Software
dnl @ Foundation, Inc.
dnl @ This file is free software; the Free Software Foundation
dnl @ gives unlimited permission to copy and/or distribute it
dnl @ with or without modifications, as long as this notice
dnl @ is preserved.
define(`arg1', `$1')include(`forloop2.m4')include(`quote.m4')
dnl @result{}
define(`double', `define(`$1'`2',
  arg1(patsubst(dquote(defn(`$1')), `[`']', `\&\&')))')
dnl @result{}
double(`forloop')double(`_forloop')defn(`forloop2')
dnl @result{}ifelse(eval(``($2) <= ($3)''), ``1'',
dnl @result{}  ``pushdef(``$1'')_$0(``$1'', eval(``$2''),
dnl @result{}    eval(``$3''), ``$4'')popdef(``$1'')'')
forloop(i, 1, 5, `ifelse(')forloop(i, 1, 5, `)')
dnl @result{}
changequote(`[', `]')changequote([``], [''])
dnl @result{}
forloop2(i, 1, 5, ``ifelse('')forloop2(i, 1, 5, ``)'')
dnl @result{}
changequote`'include(`forloop.m4')
dnl @result{}
double(`forloop')double(`_forloop')defn(`forloop2')
dnl @result{}pushdef(``$1'', ``$2'')_forloop($@)popdef(``$1'')
forloop(i, 1, 5, `ifelse(')forloop(i, 1, 5, `)')
dnl @result{}
changequote(`[', `]')changequote([``], [''])
dnl @result{}
forloop2(i, 1, 5, ``ifelse('')forloop2(i, 1, 5, ``)'')
dnl @error{}m4:stdin:12: recursion limit of 9 exceeded, use -L<N> to change it
