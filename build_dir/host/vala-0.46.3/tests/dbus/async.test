Packages: gio-2.0
D-Bus

Program: client

[DBus (name = "org.example.Test")]
interface Test : Object {
	public abstract async void test_void () throws IOError;
	public abstract async int test_int (int i, out int j) throws IOError;
	public abstract async string test_string (string s, out string t) throws IOError;
}

MainLoop main_loop;

async void run () {
	Test test = yield Bus.get_proxy (BusType.SESSION, "org.example.Test", "/org/example/test");

	yield test.test_void ();

	int j, k;
	k = yield test.test_int (42, out j);
	assert (j == 23);
	assert (k == 11);

	string t, u;
	u = yield test.test_string ("hello", out t);
	assert (t == "world");
	assert (u == "vala");

	main_loop.quit ();
}

void main () {
	// client
	run.begin ();

	main_loop = new MainLoop (null, false);
	main_loop.run ();
}

Program: server

[DBus (name = "org.example.Test")]
class Test : Object {
	public async void test_void () {
		Idle.add (test_void.callback);
		yield;
	}

	public async int test_int (int i, out int j) {
		assert (i == 42);
		Idle.add (test_int.callback);
		yield;
		j = 23;
		return 11;
	}

	public async string test_string (string s, out string t) {
		assert (s == "hello");
		Idle.add (test_string.callback);
		yield;
		t = "world";
		return "vala";
	}
}

MainLoop main_loop;

void client_exit (Pid pid, int status) {
	// client finished, terminate server
	assert (status == 0);
	main_loop.quit ();
}

void main () {
	var conn = Bus.get_sync (BusType.SESSION);
	conn.register_object ("/org/example/test", new Test ());

	// try to register service in session bus
	var request_result = conn.call_sync ("org.freedesktop.DBus", "/org/freedesktop/DBus", "org.freedesktop.DBus", "RequestName",
	                                      new Variant ("(su)", "org.example.Test", 0x4), null, 0, -1);
	assert ((uint) request_result.get_child_value (0) == 1);

	// server ready, spawn client
	Pid client_pid;
	Process.spawn_async (null, { "dbus_async_client" }, null, SpawnFlags.DO_NOT_REAP_CHILD, null, out client_pid);
	ChildWatch.add (client_pid, client_exit);

	main_loop = new MainLoop ();
	main_loop.run ();
}
