/* gdk-2.0.vapi generated by vapigen, do not modify. */

[CCode (gir_namespace = "Gdk", gir_version = "2.0")]
[Version (replacement = "gdk-3.0")]
namespace Gdk {
	namespace Key {
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @0;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_AltCursor;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Attn;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_BackTab;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_ChangeScreen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Copy;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_CursorBlink;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_CursorSelect;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_DeleteWord;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Duplicate;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Enter;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_EraseEOF;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_EraseInput;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_ExSelect;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_FieldMark;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Ident;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Jump;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_KeyClick;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Left2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_PA1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_PA2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_PA3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Play;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_PrintScreen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Quit;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Record;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Reset;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Right2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Rule;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Setup;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @3270_Test;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @6;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @7;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @8;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int @9;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int A;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Aacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Abelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Abreve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Abreveacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Abrevebelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Abrevegrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Abrevehook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Abrevetilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AccessX_Enable;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AccessX_Feedback_Enable;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Acircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Acircumflexacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Acircumflexbelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Acircumflexgrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Acircumflexhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Acircumflextilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AddFavorite;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Adiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Agrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ahook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Alt_L;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Alt_R;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Amacron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Aogonek;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ApplicationLeft;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ApplicationRight;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_0;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_6;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_7;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_8;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_9;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_ain;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_alef;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_alefmaksura;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_beh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_comma;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_dad;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_dal;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_damma;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_dammatan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_ddal;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_farsi_yeh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_fatha;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_fathatan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_feh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_fullstop;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_gaf;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_ghain;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_ha;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_hah;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_hamza;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_hamza_above;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_hamza_below;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_hamzaonalef;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_hamzaonwaw;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_hamzaonyeh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_hamzaunderalef;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_heh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_heh_doachashmee;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_heh_goal;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_jeem;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_jeh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_kaf;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_kasra;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_kasratan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_keheh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_khah;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_lam;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_madda_above;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_maddaonalef;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_meem;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_noon;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_noon_ghunna;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_peh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_percent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_qaf;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_question_mark;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_ra;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_rreh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_sad;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_seen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_semicolon;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_shadda;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_sheen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_sukun;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_superscript_alef;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_switch;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_tah;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_tatweel;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_tcheh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_teh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_tehmarbuta;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_thal;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_theh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_tteh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_veh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_waw;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_yeh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_yeh_baree;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_zah;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Arabic_zain;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Aring;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_AT;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_AYB;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_BEN;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_CHA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_DA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_DZA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_E;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_FE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_GHAT;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_GIM;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_HI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_HO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_INI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_JE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_KE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_KEN;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_KHE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_LYUN;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_MEN;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_NU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_O;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_PE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_PYUR;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_RA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_RE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_SE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_SHA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_TCHE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_TO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_TSA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_TSO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_TYUN;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_VEV;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_VO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_VYUN;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_YECH;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_ZA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_ZHE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_accent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_amanak;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_apostrophe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_at;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_ayb;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_ben;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_but;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_cha;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_da;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_dza;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_e;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_exclam;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_fe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_full_stop;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_ghat;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_gim;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_hi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_ho;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_hyphen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_ini;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_je;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_ke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_ken;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_khe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_ligature_ew;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_lyun;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_men;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_nu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_o;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_paruyk;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_pe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_pyur;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_question;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_ra;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_re;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_se;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_separation_mark;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_sha;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_shesht;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_tche;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_to;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_tsa;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_tso;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_tyun;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_verjaket;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_vev;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_vo;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_vyun;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_yech;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_yentamna;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_za;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Armenian_zhe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Atilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudibleBell_Enable;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioCycleTrack;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioForward;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioLowerVolume;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioMedia;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioMute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioNext;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioPause;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioPlay;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioPrev;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioRaiseVolume;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioRandomPlay;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioRecord;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioRepeat;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioRewind;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int AudioStop;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Away;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int B;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Babovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Back;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int BackForward;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int BackSpace;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Battery;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Begin;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Blue;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Bluetooth;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Book;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int BounceKeys_Enable;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Break;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int BrightnessAdjust;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Byelorussian_SHORTU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Byelorussian_shortu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int C;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int CD;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Calculator;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Calendar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cancel;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Caps_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ccaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ccedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ccircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Clear;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ClearGrab;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Close;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Codeinput;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ColonSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Community;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ContrastAdjust;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Control_L;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Control_R;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Copy;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int CruzeiroSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cut;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int CycleAngle;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_A;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_BE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_CHE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_CHE_descender;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_CHE_vertstroke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_DE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_DZHE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_E;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_EF;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_EL;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_EM;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_EN;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_EN_descender;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ER;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ES;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_GHE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_GHE_bar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_HA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_HARDSIGN;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_HA_descender;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_I;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_IE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_IO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_I_macron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_JE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_KA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_KA_descender;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_KA_vertstroke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_LJE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_NJE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_O;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_O_bar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_PE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_SCHWA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_SHA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_SHCHA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_SHHA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_SHORTI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_SOFTSIGN;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_TE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_TSE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_U;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_U_macron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_U_straight;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_U_straight_bar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_VE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_YA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_YERU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_YU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ZE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ZHE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ZHE_descender;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_a;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_be;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_che;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_che_descender;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_che_vertstroke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_de;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_dzhe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_e;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ef;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_el;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_em;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_en;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_en_descender;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_er;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_es;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ghe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ghe_bar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ha;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ha_descender;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_hardsign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_i;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_i_macron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ie;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_io;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_je;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ka;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ka_descender;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ka_vertstroke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_lje;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_nje;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_o;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_o_bar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_pe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_schwa;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_sha;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_shcha;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_shha;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_shorti;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_softsign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_te;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_tse;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_u;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_u_macron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_u_straight;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_u_straight_bar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ya;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_yeru;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_yu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_ze;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_zhe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Cyrillic_zhe_descender;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int D;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int DOS;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Dabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Dcaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Delete;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Display;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Documents;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int DongSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Down;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Dstroke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int E;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ENG;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ETH;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Eabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Eacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ebelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ecaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ecircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ecircumflexacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ecircumflexbelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ecircumflexgrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ecircumflexhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ecircumflextilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int EcuSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ediaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Egrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ehook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Eisu_Shift;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Eisu_toggle;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Eject;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Emacron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int End;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Eogonek;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Escape;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Eth;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Etilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int EuroSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Excel;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Execute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Explorer;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F10;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F11;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F12;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F13;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F14;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F15;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F16;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F17;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F18;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F19;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F20;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F21;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F22;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F23;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F24;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F25;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F26;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F27;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F28;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F29;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F30;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F31;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F32;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F33;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F34;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F35;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F6;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F7;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F8;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int F9;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int FFrancSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Fabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Farsi_0;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Farsi_1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Farsi_2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Farsi_3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Farsi_4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Farsi_5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Farsi_6;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Farsi_7;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Farsi_8;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Farsi_9;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Farsi_yeh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Favorites;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Finance;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Find;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int First_Virtual_Screen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Forward;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int FrameBack;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int FrameForward;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int G;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Gabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Game;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Gbreve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Gcaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Gcedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Gcircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_an;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_ban;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_can;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_char;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_chin;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_cil;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_don;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_en;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_fi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_gan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_ghan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_hae;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_har;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_he;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_hie;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_hoe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_in;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_jhan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_jil;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_kan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_khar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_las;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_man;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_nar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_on;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_par;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_phar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_qar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_rae;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_san;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_shin;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_tan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_tar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_un;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_vin;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_we;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_xan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_zen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Georgian_zhar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Go;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_ALPHA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_ALPHAaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_BETA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_CHI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_DELTA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_EPSILON;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_EPSILONaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_ETA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_ETAaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_GAMMA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_IOTA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_IOTAaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_IOTAdiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_IOTAdieresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_KAPPA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_LAMBDA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_LAMDA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_MU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_NU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_OMEGA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_OMEGAaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_OMICRON;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_OMICRONaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_PHI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_PI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_PSI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_RHO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_SIGMA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_TAU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_THETA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_UPSILON;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_UPSILONaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_UPSILONdieresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_XI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_ZETA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_accentdieresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_alpha;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_alphaaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_beta;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_chi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_delta;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_epsilon;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_epsilonaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_eta;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_etaaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_finalsmallsigma;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_gamma;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_horizbar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_iota;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_iotaaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_iotaaccentdieresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_iotadieresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_kappa;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_lambda;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_lamda;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_mu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_nu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_omega;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_omegaaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_omicron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_omicronaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_phi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_pi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_psi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_rho;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_sigma;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_switch;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_tau;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_theta;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_upsilon;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_upsilonaccent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_upsilonaccentdieresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_upsilondieresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_xi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Greek_zeta;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Green;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int H;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_A;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_AE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_AraeA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_AraeAE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Banja;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Cieuc;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Codeinput;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Dikeud;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_E;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_EO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_EU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_End;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Hanja;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Hieuh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_I;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Ieung;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Cieuc;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Dikeud;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Hieuh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Ieung;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Jieuj;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Khieuq;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Kiyeog;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_KiyeogSios;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_KkogjiDalrinIeung;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Mieum;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Nieun;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_NieunHieuh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_NieunJieuj;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_PanSios;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Phieuf;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Pieub;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_PieubSios;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Rieul;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_RieulHieuh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_RieulKiyeog;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_RieulMieum;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_RieulPhieuf;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_RieulPieub;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_RieulSios;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_RieulTieut;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Sios;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_SsangKiyeog;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_SsangSios;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_Tieut;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_J_YeorinHieuh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Jamo;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Jeonja;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Jieuj;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Khieuq;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Kiyeog;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_KiyeogSios;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_KkogjiDalrinIeung;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Mieum;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_MultipleCandidate;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Nieun;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_NieunHieuh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_NieunJieuj;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_O;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_OE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_PanSios;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Phieuf;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Pieub;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_PieubSios;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_PostHanja;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_PreHanja;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_PreviousCandidate;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Rieul;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_RieulHieuh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_RieulKiyeog;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_RieulMieum;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_RieulPhieuf;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_RieulPieub;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_RieulSios;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_RieulTieut;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_RieulYeorinHieuh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Romaja;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_SingleCandidate;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Sios;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Special;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_SsangDikeud;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_SsangJieuj;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_SsangKiyeog;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_SsangPieub;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_SsangSios;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Start;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_SunkyeongeumMieum;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_SunkyeongeumPhieuf;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_SunkyeongeumPieub;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_Tieut;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_U;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_WA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_WAE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_WE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_WEO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_WI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_YA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_YAE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_YE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_YEO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_YI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_YO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_YU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_YeorinHieuh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hangul_switch;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hankaku;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hcircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hebrew_switch;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Help;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Henkan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Henkan_Mode;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hibernate;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hiragana;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hiragana_Katakana;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int History;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Home;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int HomePage;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int HotLinks;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hstroke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hyper_L;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Hyper_R;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int I;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Center_Object;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Continuous_Underline;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Discontinuous_Underline;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Emphasize;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Enter;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Fast_Cursor_Down;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Fast_Cursor_Left;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Fast_Cursor_Right;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Fast_Cursor_Up;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_First_Group;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_First_Group_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Group_Latch;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Group_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Group_Shift;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Last_Group;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Last_Group_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Left_Tab;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Level2_Latch;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Level3_Latch;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Level3_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Level3_Shift;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Level5_Latch;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Level5_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Level5_Shift;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Move_Line_Down;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Move_Line_Up;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Next_Group;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Next_Group_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Partial_Line_Down;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Partial_Line_Up;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Partial_Space_Left;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Partial_Space_Right;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Prev_Group;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Prev_Group_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Release_Both_Margins;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Release_Margin_Left;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Release_Margin_Right;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Set_Margin_Left;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ISO_Set_Margin_Right;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Iabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Iacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ibelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ibreve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Icircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Idiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Igrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ihook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Imacron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Insert;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Iogonek;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Itilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int J;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Jcircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int K;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_0;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_6;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_7;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_8;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_9;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Add;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Begin;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Decimal;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Delete;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Divide;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Down;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_End;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Enter;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Equal;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_F1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_F2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_F3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_F4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Home;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Insert;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Left;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Multiply;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Next;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Page_Down;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Page_Up;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Prior;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Right;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Separator;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Space;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Subtract;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Tab;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KP_Up;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Kana_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Kana_Shift;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Kanji;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Kanji_Bangou;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Katakana;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KbdBrightnessDown;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KbdBrightnessUp;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int KbdLightOnOff;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Kcedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Korean_Won;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int L;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int L1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int L10;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int L2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int L3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int L4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int L5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int L6;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int L7;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int L8;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int L9;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Lacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Last_Virtual_Screen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Launch0;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Launch1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Launch2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Launch3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Launch4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Launch5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Launch6;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Launch7;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Launch8;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Launch9;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int LaunchA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int LaunchB;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int LaunchC;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int LaunchD;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int LaunchE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int LaunchF;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Lbelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Lcaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Lcedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Left;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int LightBulb;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Linefeed;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int LiraSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int LogOff;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Lstroke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int M;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Mabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Macedonia_DSE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Macedonia_GJE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Macedonia_KJE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Macedonia_dse;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Macedonia_gje;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Macedonia_kje;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Mae_Koho;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Mail;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int MailForward;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Market;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Massyo;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Meeting;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Memo;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Menu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int MenuKB;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int MenuPB;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Messenger;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Meta_L;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Meta_R;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int MillSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ModeLock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Mode_switch;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int MonBrightnessDown;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int MonBrightnessUp;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int MouseKeys_Accel_Enable;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int MouseKeys_Enable;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Muhenkan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Multi_key;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int MultipleCandidate;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Music;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int MyComputer;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int MySites;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int N;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Nacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int NairaSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ncaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ncedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int New;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int NewSheqelSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int News;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Next;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Next_VMode;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Next_Virtual_Screen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ntilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Num_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int O;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int OE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Oacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Obarred;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Obelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ocaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ocircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ocircumflexacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ocircumflexbelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ocircumflexgrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ocircumflexhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ocircumflextilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Odiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Odoubleacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int OfficeHome;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ograve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ohook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ohorn;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ohornacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ohornbelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ohorngrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ohornhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ohorntilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Omacron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ooblique;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Open;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int OpenURL;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Option;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Oslash;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Otilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Overlay1_Enable;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Overlay2_Enable;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int P;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Page_Down;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Page_Up;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Paste;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pause;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int PesetaSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Phone;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pictures;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Accelerate;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Button1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Button2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Button3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Button4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Button5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Button_Dflt;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_DblClick1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_DblClick2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_DblClick3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_DblClick4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_DblClick5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_DblClick_Dflt;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_DfltBtnNext;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_DfltBtnPrev;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Down;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_DownLeft;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_DownRight;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Drag1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Drag2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Drag3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Drag4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Drag5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Drag_Dflt;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_EnableKeys;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Left;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Right;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_Up;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_UpLeft;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Pointer_UpRight;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int PowerDown;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int PowerOff;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Prev_VMode;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Prev_Virtual_Screen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int PreviousCandidate;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Print;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Prior;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Q;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R10;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R11;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R12;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R13;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R14;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R15;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R6;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R7;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R8;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int R9;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Racute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Rcaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Rcedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Red;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Redo;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Refresh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Reload;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int RepeatKeys_Enable;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Reply;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Return;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Right;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int RockerDown;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int RockerEnter;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int RockerUp;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Romaji;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int RotateWindows;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int RotationKB;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int RotationPB;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int RupeeSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int S;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int SCHWA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Sabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Sacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Save;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Scaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Scedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Scircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ScreenSaver;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ScrollClick;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ScrollDown;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ScrollUp;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Scroll_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Search;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Select;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int SelectButton;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Send;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Serbian_DJE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Serbian_DZE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Serbian_JE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Serbian_LJE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Serbian_NJE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Serbian_TSHE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Serbian_dje;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Serbian_dze;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Serbian_je;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Serbian_lje;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Serbian_nje;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Serbian_tshe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Shift_L;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Shift_Lock;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Shift_R;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Shop;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int SingleCandidate;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Sleep;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int SlowKeys_Enable;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Spell;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int SplitScreen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Standby;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Start;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int StickyKeys_Enable;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Stop;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Subtitle;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Super_L;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Super_R;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Support;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Suspend;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Switch_VT_1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Switch_VT_10;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Switch_VT_11;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Switch_VT_12;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Switch_VT_2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Switch_VT_3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Switch_VT_4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Switch_VT_5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Switch_VT_6;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Switch_VT_7;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Switch_VT_8;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Switch_VT_9;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Sys_Req;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int T;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int THORN;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Tab;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Tabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int TaskPane;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Tcaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Tcedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Terminal;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Terminate_Server;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_baht;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_bobaimai;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_chochan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_chochang;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_choching;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_chochoe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_dochada;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_dodek;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_fofa;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_fofan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_hohip;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_honokhuk;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_khokhai;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_khokhon;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_khokhuat;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_khokhwai;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_khorakhang;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_kokai;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_lakkhangyao;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_lekchet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_lekha;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_lekhok;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_lekkao;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_leknung;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_lekpaet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_leksam;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_leksi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_leksong;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_leksun;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_lochula;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_loling;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_lu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_maichattawa;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_maiek;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_maihanakat;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_maihanakat_maitho;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_maitaikhu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_maitho;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_maitri;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_maiyamok;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_moma;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_ngongu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_nikhahit;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_nonen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_nonu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_oang;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_paiyannoi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_phinthu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_phophan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_phophung;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_phosamphao;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_popla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_rorua;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_ru;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_saraa;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_saraaa;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_saraae;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_saraaimaimalai;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_saraaimaimuan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_saraam;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_sarae;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_sarai;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_saraii;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_sarao;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_sarau;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_saraue;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_sarauee;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_sarauu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_sorusi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_sosala;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_soso;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_sosua;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_thanthakhat;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_thonangmontho;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_thophuthao;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_thothahan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_thothan;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_thothong;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_thothung;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_topatak;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_totao;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_wowaen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_yoyak;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thai_yoying;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Thorn;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Time;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ToDoList;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Tools;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int TopMenu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int TouchpadToggle;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Touroku;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Travel;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Tslash;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int U;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int UWB;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Uacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ubelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ubreve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ucircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Udiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Udoubleacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ugrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Uhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Uhorn;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Uhornacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Uhornbelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Uhorngrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Uhornhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Uhorntilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukrainian_GHE_WITH_UPTURN;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukrainian_I;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukrainian_IE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukrainian_YI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukrainian_ghe_with_upturn;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukrainian_i;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukrainian_ie;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukrainian_yi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukranian_I;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukranian_JE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukranian_YI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukranian_i;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukranian_je;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ukranian_yi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Umacron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Undo;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ungrab;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Uogonek;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Up;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Uring;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int User1KB;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int User2KB;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int UserPB;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Utilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int V;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int VendorHome;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Video;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int View;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int VoidSymbol;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int W;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int WLAN;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int WWW;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Wacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int WakeUp;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Wcircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Wdiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int WebCam;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Wgrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int WheelButton;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int WindowClear;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int WonSign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Word;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int X;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Xabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Xfer;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Y;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Yacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ybelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ycircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ydiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Yellow;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ygrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Yhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Ytilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Z;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Zabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Zacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Zcaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Zen_Koho;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Zenkaku;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Zenkaku_Hankaku;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ZoomIn;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ZoomOut;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int Zstroke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int a;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int aacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int abelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int abovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int abreve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int abreveacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int abrevebelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int abrevegrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int abrevehook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int abrevetilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int acircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int acircumflexacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int acircumflexbelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int acircumflexgrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int acircumflexhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int acircumflextilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int acute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int adiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ae;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int agrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ahook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int amacron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ampersand;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int aogonek;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int apostrophe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int approxeq;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int approximate;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int aring;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int asciicircum;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int asciitilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int asterisk;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int at;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int atilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int b;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int babovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int backslash;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ballotcross;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int bar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int because;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int blank;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int botintegral;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int botleftparens;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int botleftsqbracket;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int botleftsummation;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int botrightparens;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int botrightsqbracket;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int botrightsummation;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int bott;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int botvertsummationconnector;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braceleft;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braceright;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int bracketleft;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int bracketright;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_blank;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dot_1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dot_10;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dot_2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dot_3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dot_4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dot_5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dot_6;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dot_7;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dot_8;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dot_9;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_123;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1234;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12345;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_123456;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1234567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12345678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1234568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_123457;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1234578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_123458;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12346;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_123467;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1234678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_123468;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12347;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_123478;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12348;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1235;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12356;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_123567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1235678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_123568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12357;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_123578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12358;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1236;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12367;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_123678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12368;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1237;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12378;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1238;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_124;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1245;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12456;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_124567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1245678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_124568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12457;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_124578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12458;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1246;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12467;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_124678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12468;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1247;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12478;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1248;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_125;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1256;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_125678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1257;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1258;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_126;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1267;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_12678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1268;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_127;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1278;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_128;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_13;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_134;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1345;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_13456;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_134567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1345678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_134568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_13457;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_134578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_13458;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1346;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_13467;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_134678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_13468;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1347;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_13478;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1348;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_135;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1356;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_13567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_135678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_13568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1357;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_13578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1358;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_136;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1367;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_13678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1368;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_137;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1378;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_138;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_14;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_145;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1456;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_14567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_145678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_14568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1457;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_14578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1458;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_146;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1467;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_14678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1468;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_147;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1478;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_148;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_15;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_156;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_15678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_157;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_158;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_16;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_167;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_1678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_168;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_17;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_178;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_18;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_23;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_234;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2345;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_23456;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_234567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2345678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_234568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_23457;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_234578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_23458;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2346;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_23467;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_234678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_23468;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2347;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_23478;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2348;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_235;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2356;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_23567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_235678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_23568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2357;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_23578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2358;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_236;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2367;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_23678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2368;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_237;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2378;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_238;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_24;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_245;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2456;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_24567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_245678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_24568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2457;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_24578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2458;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_246;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2467;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_24678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2468;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_247;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2478;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_248;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_25;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_256;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_25678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_257;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_258;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_26;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_267;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_2678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_268;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_27;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_278;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_28;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_34;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_345;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_3456;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_34567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_345678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_34568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_3457;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_34578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_3458;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_346;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_3467;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_34678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_3468;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_347;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_3478;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_348;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_35;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_356;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_3567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_35678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_3568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_357;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_3578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_358;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_36;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_367;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_3678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_368;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_37;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_378;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_38;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_4;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_45;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_456;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_4567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_45678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_4568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_457;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_4578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_458;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_46;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_467;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_4678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_468;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_47;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_478;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_48;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_56;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_567;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_5678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_568;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_57;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_578;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_58;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_6;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_67;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_678;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_68;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_7;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_78;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int braille_dots_8;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int breve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int brokenbar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int c;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int cabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int cacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int careof;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int caret;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int caron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ccaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ccedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ccircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int cedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int cent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int checkerboard;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int checkmark;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int circle;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int club;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int colon;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int comma;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int containsas;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int copyright;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int cr;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int crossinglines;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int cuberoot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int currency;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int cursor;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int d;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dagger;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dcaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_A;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_E;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_I;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_O;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_U;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_a;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_abovecomma;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_abovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_abovereversedcomma;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_abovering;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_acute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_belowbreve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_belowcircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_belowcomma;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_belowdiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_belowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_belowmacron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_belowring;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_belowtilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_breve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_capital_schwa;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_caron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_cedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_circumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_currency;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_dasia;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_diaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_doubleacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_doublegrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_e;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_grave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_hook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_horn;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_i;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_invertedbreve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_iota;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_macron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_o;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_ogonek;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_perispomeni;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_psili;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_semivoiced_sound;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_small_schwa;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_stroke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_tilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_u;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dead_voiced_sound;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int decimalpoint;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int degree;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int diaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int diamond;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int digitspace;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dintegral;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int division;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dollar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int doubbaselinedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int doubleacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int doubledagger;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int doublelowquotemark;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int downarrow;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int downcaret;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int downshoe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int downstile;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int downtack;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int dstroke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int e;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int eabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int eacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ebelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ecaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ecircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ecircumflexacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ecircumflexbelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ecircumflexgrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ecircumflexhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ecircumflextilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ediaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int egrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ehook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int eightsubscript;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int eightsuperior;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int elementof;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ellipsis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int em3space;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int em4space;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int emacron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int emdash;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int emfilledcircle;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int emfilledrect;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int emopencircle;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int emopenrectangle;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int emptyset;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int emspace;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int endash;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int enfilledcircbullet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int enfilledsqbullet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int eng;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int enopencircbullet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int enopensquarebullet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int enspace;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int eogonek;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int equal;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int eth;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int etilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int exclam;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int exclamdown;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int f;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int fabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int femalesymbol;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ff;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int figdash;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int filledlefttribullet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int filledrectbullet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int filledrighttribullet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int filledtribulletdown;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int filledtribulletup;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int fiveeighths;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int fivesixths;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int fivesubscript;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int fivesuperior;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int fourfifths;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int foursubscript;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int foursuperior;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int fourthroot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int function;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int g;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int gabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int gbreve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int gcaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int gcedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int gcircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int grave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int greater;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int greaterthanequal;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int guillemotleft;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int guillemotright;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int h;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hairspace;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hcircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int heart;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_aleph;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_ayin;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_bet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_beth;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_chet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_dalet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_daleth;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_doublelowline;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_finalkaph;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_finalmem;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_finalnun;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_finalpe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_finalzade;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_finalzadi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_gimel;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_gimmel;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_he;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_het;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_kaph;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_kuf;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_lamed;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_mem;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_nun;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_pe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_qoph;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_resh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_samech;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_samekh;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_shin;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_taf;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_taw;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_tet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_teth;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_waw;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_yod;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_zade;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_zadi;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_zain;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hebrew_zayin;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hexagram;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int horizconnector;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int horizlinescan1;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int horizlinescan3;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int horizlinescan5;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int horizlinescan7;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int horizlinescan9;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hstroke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ht;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int hyphen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int i;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int iTouch;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int iacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ibelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ibreve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int icircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int identical;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int idiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int idotless;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ifonlyif;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int igrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ihook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int imacron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int implies;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int includedin;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int includes;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int infinity;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int integral;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int intersection;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int iogonek;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int itilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int j;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int jcircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int jot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int k;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_A;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_CHI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_E;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_FU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_HA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_HE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_HI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_HO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_HU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_I;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_KA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_KE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_KI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_KO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_KU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_MA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_ME;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_MI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_MO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_MU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_N;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_NA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_NE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_NI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_NO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_NU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_O;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_RA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_RE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_RI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_RO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_RU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_SA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_SE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_SHI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_SO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_SU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_TA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_TE;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_TI;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_TO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_TSU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_TU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_U;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_WA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_WO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_YA;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_YO;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_YU;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_a;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_closingbracket;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_comma;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_conjunctive;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_e;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_fullstop;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_i;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_middledot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_o;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_openingbracket;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_switch;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_tsu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_tu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_u;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_ya;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_yo;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kana_yu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kappa;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kcedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int kra;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int l;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int lacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int latincross;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int lbelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int lcaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int lcedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int leftanglebracket;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int leftarrow;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int leftcaret;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int leftdoublequotemark;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int leftmiddlecurlybrace;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int leftopentriangle;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int leftpointer;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int leftradical;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int leftshoe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int leftsinglequotemark;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int leftt;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int lefttack;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int less;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int lessthanequal;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int lf;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int logicaland;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int logicalor;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int lowleftcorner;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int lowrightcorner;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int lstroke;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int m;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int mabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int macron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int malesymbol;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int maltesecross;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int marker;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int masculine;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int minus;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int minutes;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int mu;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int multiply;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int musicalflat;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int musicalsharp;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int n;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int nabla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int nacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ncaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ncedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ninesubscript;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ninesuperior;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int nl;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int nobreakspace;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int notapproxeq;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int notelementof;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int notequal;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int notidentical;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int notsign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ntilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int numbersign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int numerosign;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int o;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int oacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int obarred;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int obelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ocaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ocircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ocircumflexacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ocircumflexbelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ocircumflexgrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ocircumflexhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ocircumflextilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int odiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int odoubleacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int oe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ogonek;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ograve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ohook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ohorn;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ohornacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ohornbelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ohorngrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ohornhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ohorntilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int omacron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int oneeighth;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int onefifth;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int onehalf;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int onequarter;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int onesixth;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int onesubscript;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int onesuperior;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int onethird;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ooblique;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int openrectbullet;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int openstar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int opentribulletdown;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int opentribulletup;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ordfeminine;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int oslash;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int otilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int overbar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int overline;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int p;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int pabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int paragraph;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int parenleft;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int parenright;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int partdifferential;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int partialderivative;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int percent;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int period;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int periodcentered;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int phonographcopyright;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int plus;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int plusminus;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int prescription;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int prolongedsound;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int punctspace;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int q;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int quad;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int question;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int questiondown;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int quotedbl;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int quoteleft;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int quoteright;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int r;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int racute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int radical;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rcaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rcedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int registered;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rightanglebracket;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rightarrow;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rightcaret;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rightdoublequotemark;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rightmiddlecurlybrace;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rightmiddlesummation;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rightopentriangle;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rightpointer;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rightshoe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rightsinglequotemark;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int rightt;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int righttack;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int s;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int sabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int sacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int scaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int scedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int schwa;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int scircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int script_switch;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int seconds;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int section;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int semicolon;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int semivoicedsound;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int seveneighths;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int sevensubscript;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int sevensuperior;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int signaturemark;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int signifblank;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int similarequal;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int singlelowquotemark;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int sixsubscript;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int sixsuperior;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int slash;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int soliddiamond;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int space;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int squareroot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ssharp;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int sterling;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int stricteq;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int t;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int tabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int tcaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int tcedilla;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int telephone;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int telephonerecorder;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int therefore;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int thinspace;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int thorn;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int threeeighths;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int threefifths;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int threequarters;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int threesubscript;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int threesuperior;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int tintegral;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int topintegral;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int topleftparens;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int topleftradical;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int topleftsqbracket;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int topleftsummation;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int toprightparens;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int toprightsqbracket;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int toprightsummation;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int topt;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int topvertsummationconnector;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int trademark;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int trademarkincircle;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int tslash;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int twofifths;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int twosubscript;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int twosuperior;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int twothirds;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int u;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ubelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ubreve;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ucircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int udiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int udoubleacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ugrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uhorn;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uhornacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uhornbelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uhorngrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uhornhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uhorntilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int umacron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int underbar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int underscore;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int union;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uogonek;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uparrow;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int upcaret;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int upleftcorner;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uprightcorner;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int upshoe;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int upstile;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uptack;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int uring;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int utilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int v;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int variation;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int vertbar;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int vertconnector;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int voicedsound;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int vt;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int w;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int wacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int wcircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int wdiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int wgrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int x;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int xabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int y;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int yacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ybelowdot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ycircumflex;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ydiaeresis;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int yen;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ygrave;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int yhook;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int ytilde;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int z;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int zabovedot;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int zacute;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int zcaron;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int zerosubscript;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int zerosuperior;
		[CCode (cheader_filename = "gdk/gdkkeysyms.h")]
		public const int zstroke;
	}
	namespace Selection {
		[CCode (cheader_filename = "gdk/gdk.h")]
		public static void convert (Gdk.Window requestor, Gdk.Atom selection, Gdk.Atom target, uint32 time_);
		[CCode (cheader_filename = "gdk/gdk.h")]
		public static unowned Gdk.Window owner_get (Gdk.Atom selection);
		[CCode (cheader_filename = "gdk/gdk.h")]
		public static unowned Gdk.Window owner_get_for_display (Gdk.Display display, Gdk.Atom selection);
		[CCode (cheader_filename = "gdk/gdk.h")]
		public static bool owner_set (Gdk.Window owner, Gdk.Atom selection, uint32 time_, bool send_event);
		[CCode (cheader_filename = "gdk/gdk.h")]
		public static bool owner_set_for_display (Gdk.Display display, Gdk.Window owner, Gdk.Atom selection, uint32 time_, bool send_event);
		[CCode (cheader_filename = "gdk/gdk.h")]
		public static int property_get (Gdk.Window requestor, uchar[] data, out Gdk.Atom prop_type, int prop_format);
		[CCode (cheader_filename = "gdk/gdk.h")]
		public static void send_notify (Gdk.NativeWindow requestor, Gdk.Atom selection, Gdk.Atom target, Gdk.Atom property, uint32 time_);
		[CCode (cheader_filename = "gdk/gdk.h")]
		public static void send_notify_for_display (Gdk.Display display, Gdk.NativeWindow requestor, Gdk.Atom selection, Gdk.Atom target, Gdk.Atom property, uint32 time_);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class AppLaunchContext : GLib.AppLaunchContext {
		[CCode (has_construct_function = false)]
		public AppLaunchContext ();
		public void set_desktop (int desktop);
		public void set_display (Gdk.Display display);
		public void set_icon (GLib.Icon icon);
		public void set_icon_name (string icon_name);
		public void set_screen (Gdk.Screen screen);
		public void set_timestamp (uint32 timestamp);
	}
	[CCode (cheader_filename = "gdk/gdk.h", ref_function = "g_object_ref", unref_function = "g_object_unref")]
	public class Bitmap {
		public weak GLib.Object parent_instance;
		[Version (deprecated_since = "2.22")]
		public static Gdk.Bitmap create_from_data (Gdk.Drawable drawable, [CCode (array_length = false)] uint8[] data, int width, int height);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class Colormap : GLib.Object {
		public Gdk.Color colors;
		public int size;
		public weak Gdk.Visual visual;
		public void* windowing_data;
		[CCode (has_construct_function = false)]
		public Colormap (Gdk.Visual visual, bool allocate);
		public bool alloc_color (Gdk.Color color, bool writeable, bool best_match);
		public int alloc_colors (Gdk.Color[] colors, bool writeable, bool best_match, bool success);
		public void change (int ncolors);
		public void free_colors (Gdk.Color[] colors);
		public unowned Gdk.Screen get_screen ();
		public static unowned Gdk.Colormap get_system ();
		public unowned Gdk.Visual get_visual ();
		public void query_color (ulong pixel, out Gdk.Color _result);
	}
	[CCode (cheader_filename = "gdk/gdk.h", ref_function = "gdk_cursor_ref", type_id = "gdk_cursor_get_type ()", unref_function = "gdk_cursor_unref")]
	[Compact]
	public class Cursor {
		public uint ref_count;
		public Gdk.CursorType type;
		[CCode (has_construct_function = false)]
		public Cursor (Gdk.CursorType cursor_type);
		[CCode (has_construct_function = false)]
		public Cursor.for_display (Gdk.Display display, Gdk.CursorType cursor_type);
		[CCode (has_construct_function = false)]
		public Cursor.from_name (Gdk.Display display, string name);
		[CCode (has_construct_function = false)]
		public Cursor.from_pixbuf (Gdk.Display display, Gdk.Pixbuf pixbuf, int x, int y);
		[CCode (has_construct_function = false)]
		public Cursor.from_pixmap (Gdk.Pixmap source, Gdk.Pixmap mask, Gdk.Color fg, Gdk.Color bg, int x, int y);
		public Gdk.CursorType get_cursor_type ();
		public unowned Gdk.Display get_display ();
		public unowned Gdk.Pixbuf get_image ();
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class Device : GLib.Object {
		[CCode (array_length = false)]
		public weak Gdk.DeviceAxis[] axes;
		public bool has_cursor;
		[CCode (array_length = false)]
		public weak Gdk.DeviceKey[] keys;
		public Gdk.InputMode mode;
		public weak string name;
		public int num_axes;
		public int num_keys;
		public Gdk.InputSource source;
		[CCode (has_construct_function = false)]
		protected Device ();
		public static void free_history (Gdk.TimeCoord[] events);
		public bool get_axis ([CCode (array_length = false)] double[] axes, Gdk.AxisUse use, out double value);
		public Gdk.AxisUse get_axis_use (uint index);
		public static unowned Gdk.Device get_core_pointer ();
		public bool get_has_cursor ();
		public bool get_history (Gdk.Window window, uint32 start, uint32 stop, out Gdk.TimeCoord[] events);
		public void get_key (uint index, out uint keyval, out Gdk.ModifierType modifiers);
		public Gdk.InputMode get_mode ();
		public int get_n_axes ();
		public int get_n_keys ();
		public unowned string get_name ();
		public Gdk.InputSource get_source ();
		public void get_state (Gdk.Window window, [CCode (array_length = false)] double[] axes, out Gdk.ModifierType mask);
		public void set_axis_use (uint index_, Gdk.AxisUse use);
		public void set_key (uint index_, uint keyval, Gdk.ModifierType modifiers);
		public bool set_mode (Gdk.InputMode mode);
		public void set_source (Gdk.InputSource source);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class Display : GLib.Object {
		[CCode (array_length = false)]
		public weak uint32[] button_click_time;
		[CCode (array_length = false)]
		public weak int[] button_number;
		[CCode (array_length = false)]
		public weak Gdk.Window[] button_window;
		[CCode (array_length = false)]
		public weak int[] button_x;
		[CCode (array_length = false)]
		public weak int[] button_y;
		public weak Gdk.Device core_pointer;
		public uint double_click_distance;
		public uint double_click_time;
		public uint ignore_core_events;
		public weak Gdk.KeyboardGrabInfo keyboard_grab;
		public uint32 last_event_time;
		public weak GLib.List pointer_grabs;
		public weak Gdk.DisplayPointerHooks pointer_hooks;
		public weak Gdk.PointerWindowInfo pointer_info;
		public weak GLib.List queued_events;
		public weak GLib.List queued_tail;
		[CCode (has_construct_function = false)]
		protected Display ();
		public void add_client_message_filter (Gdk.Atom message_type, Gdk.FilterFunc func);
		public void beep ();
		public void close ();
		public void flush ();
		public unowned Gdk.Device get_core_pointer ();
		public static unowned Gdk.Display get_default ();
		public uint get_default_cursor_size ();
		public unowned Gdk.Window get_default_group ();
		public virtual unowned Gdk.Screen get_default_screen ();
		[NoWrapper]
		public virtual unowned string get_display_name ();
		public Gdk.Event get_event ();
		public void get_maximal_cursor_size (out uint width, out uint height);
		public virtual int get_n_screens ();
		public unowned string get_name ();
		public void get_pointer (out unowned Gdk.Screen screen, out int x, out int y, out Gdk.ModifierType mask);
		public virtual unowned Gdk.Screen get_screen (int screen_num);
		public unowned Gdk.Window get_window_at_pointer (int win_x, int win_y);
		public bool is_closed ();
		public void keyboard_ungrab (uint32 time_);
		public unowned GLib.List<Gdk.Device> list_devices ();
		public static unowned Gdk.Display open (string display_name);
		public static unowned Gdk.Display open_default_libgtk_only ();
		public Gdk.Event peek_event ();
		public bool pointer_is_grabbed ();
		public void pointer_ungrab (uint32 time_);
		public void put_event (Gdk.Event event);
		public bool request_selection_notification (Gdk.Atom selection);
		public void set_double_click_distance (uint distance);
		public void set_double_click_time (uint msec);
		public unowned Gdk.DisplayPointerHooks set_pointer_hooks (Gdk.DisplayPointerHooks new_hooks);
		public void store_clipboard (Gdk.Window clipboard_window, uint32 time_, Gdk.Atom[] targets);
		public bool supports_clipboard_persistence ();
		public bool supports_composite ();
		public bool supports_cursor_alpha ();
		public bool supports_cursor_color ();
		public bool supports_input_shapes ();
		public bool supports_selection_notification ();
		public bool supports_shapes ();
		public void sync ();
		public void warp_pointer (Gdk.Screen screen, int x, int y);
		public virtual signal void closed (bool is_error);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class DisplayManager : GLib.Object {
		[CCode (has_construct_function = false)]
		protected DisplayManager ();
		public static unowned Gdk.DisplayManager @get ();
		public unowned Gdk.Display get_default_display ();
		public GLib.SList<weak Gdk.Display> list_displays ();
		public void set_default_display (Gdk.Display display);
		public Gdk.Display default_display { get; set; }
		public virtual signal void display_opened (Gdk.Display display);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Compact]
	public class DisplayPointerHooks {
		public weak GLib.Callback get_pointer;
		public weak GLib.Callback window_at_pointer;
		public weak GLib.Callback window_get_pointer;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class DragContext : GLib.Object {
		public Gdk.DragAction action;
		public Gdk.DragAction actions;
		public weak Gdk.Window dest_window;
		public bool is_source;
		public Gdk.DragProtocol protocol;
		public weak Gdk.Window source_window;
		public uint32 start_time;
		public Gdk.DragAction suggested_action;
		public weak GLib.List<Gdk.Atom> targets;
		public void* windowing_data;
		[CCode (has_construct_function = false)]
		public DragContext ();
		public Gdk.DragAction get_actions ();
		public unowned Gdk.Window get_dest_window ();
		public Gdk.DragProtocol get_protocol ();
		public Gdk.DragAction get_selected_action ();
		public unowned Gdk.Window get_source_window ();
		public Gdk.DragAction get_suggested_action ();
		public unowned GLib.List list_targets ();
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class Drawable : GLib.Object {
		[CCode (has_construct_function = false)]
		protected Drawable ();
		[Version (deprecated = true, deprecated_since = "2.22")]
		public unowned Gdk.Image copy_to_image (Gdk.Image image, int src_x, int src_y, int dest_x, int dest_y, int width, int height);
		[NoWrapper]
		public virtual unowned Cairo.Surface create_cairo_surface (int width, int height);
		[NoWrapper]
		public virtual unowned Gdk.GC create_gc (Gdk.GCValues values, Gdk.GCValuesMask mask);
		[CCode (cname = "gdk_draw_arc")]
		public virtual void draw_arc (Gdk.GC gc, bool filled, int x, int y, int width, int height, int angle1, int angle2);
		[CCode (cname = "gdk_draw_drawable")]
		public virtual void draw_drawable (Gdk.GC gc, Gdk.Drawable src, int xsrc, int ysrc, int xdest, int ydest, int width, int height);
		[CCode (cname = "gdk_draw_glyphs")]
		public virtual void draw_glyphs (Gdk.GC gc, Pango.Font font, int x, int y, Pango.GlyphString glyphs);
		[CCode (cname = "gdk_draw_glyphs_transformed")]
		public virtual void draw_glyphs_transformed (Gdk.GC gc, Pango.Matrix matrix, Pango.Font font, int x, int y, Pango.GlyphString glyphs);
		[CCode (cname = "gdk_draw_image")]
		public virtual void draw_image (Gdk.GC gc, Gdk.Image image, int xsrc, int ysrc, int xdest, int ydest, int width, int height);
		[CCode (cname = "gdk_draw_lines")]
		public virtual void draw_lines (Gdk.GC gc, Gdk.Point[] points);
		[CCode (cname = "gdk_draw_pixbuf")]
		public virtual void draw_pixbuf (Gdk.GC? gc, Gdk.Pixbuf pixbuf, int src_x, int src_y, int dest_x, int dest_y, int width, int height, Gdk.RgbDither dither, int x_dither, int y_dither);
		[CCode (cname = "gdk_draw_points")]
		public virtual void draw_points (Gdk.GC gc, Gdk.Point[] points);
		[CCode (cname = "gdk_draw_polygon")]
		public virtual void draw_polygon (Gdk.GC gc, bool filled, Gdk.Point[] points);
		[CCode (cname = "gdk_draw_rectangle")]
		public virtual void draw_rectangle (Gdk.GC gc, bool filled, int x, int y, int width, int height);
		[CCode (cname = "gdk_draw_segments")]
		public virtual void draw_segments (Gdk.GC gc, Gdk.Segment[] segs);
		[CCode (cname = "gdk_draw_text")]
		public virtual void draw_text (Gdk.Font font, Gdk.GC gc, int x, int y, string text, int text_length);
		[CCode (cname = "gdk_draw_text_wc")]
		public virtual void draw_text_wc (Gdk.Font font, Gdk.GC gc, int x, int y, Gdk.WChar text, int text_length);
		[CCode (cname = "gdk_draw_trapezoids")]
		public virtual void draw_trapezoids (Gdk.GC gc, Gdk.Trapezoid[] trapezoids);
		public virtual unowned Gdk.Region get_clip_region ();
		public virtual unowned Gdk.Colormap get_colormap ();
		[NoWrapper]
		public virtual unowned Gdk.Drawable get_composite_drawable (int x, int y, int width, int height, int composite_x_offset, int composite_y_offset);
		public virtual int get_depth ();
		public unowned Gdk.Display get_display ();
		public virtual unowned Gdk.Image get_image (int x, int y, int width, int height);
		public virtual unowned Gdk.Screen get_screen ();
		public virtual void get_size (out int width, out int height);
		[NoWrapper]
		public virtual unowned Gdk.Drawable get_source_drawable ();
		public virtual unowned Gdk.Region get_visible_region ();
		public virtual unowned Gdk.Visual get_visual ();
		[NoWrapper]
		public virtual unowned Cairo.Surface ref_cairo_surface ();
		[NoWrapper]
		public virtual void set_cairo_clip (Cairo.Context cr);
		public virtual void set_colormap (Gdk.Colormap colormap);
	}
	[CCode (cheader_filename = "gdk/gdk.h", copy_function = "gdk_event_copy", type_id = "gdk_event_get_type ()")]
	[Compact]
	public class Event {
		public Gdk.EventAny any;
		public Gdk.EventButton button;
		public Gdk.EventClient client;
		public Gdk.EventConfigure configure;
		public Gdk.EventCrossing crossing;
		public Gdk.EventDND dnd;
		public Gdk.EventExpose expose;
		public Gdk.EventFocus focus_change;
		public Gdk.EventGrabBroken grab_broken;
		public Gdk.EventKey key;
		public Gdk.EventMotion motion;
		public Gdk.EventNoExpose no_expose;
		public Gdk.EventOwnerChange owner_change;
		public Gdk.EventProperty property;
		public Gdk.EventProximity proximity;
		public Gdk.EventScroll scroll;
		public Gdk.EventSelection selection;
		public Gdk.EventSetting setting;
		public Gdk.EventType type;
		public Gdk.EventVisibility visibility;
		public Gdk.EventWindowState window_state;
		[CCode (has_construct_function = false)]
		public Event (Gdk.EventType type);
		public Gdk.Event copy ();
		public static unowned Gdk.Event @get ();
		public bool get_axis (Gdk.AxisUse axis_use, out double value);
		public bool get_coords (out double x_win, out double y_win);
		public bool get_root_coords (out double x_root, out double y_root);
		public unowned Gdk.Screen get_screen ();
		public bool get_state (out Gdk.ModifierType state);
		public uint32 get_time ();
		public static void handler_set (owned Gdk.EventFunc func);
		public static unowned Gdk.Event peek ();
		public void put ();
		public static void request_motions (Gdk.EventMotion event);
		public bool send_client_message (Gdk.NativeWindow winid);
		public static bool send_client_message_for_display (Gdk.Display display, Gdk.Event event, Gdk.NativeWindow winid);
		public void send_clientmessage_toall ();
		public void set_screen (Gdk.Screen screen);
	}
	[CCode (cheader_filename = "gdk/gdk.h", ref_function = "gdk_font_ref", type_id = "gdk_font_get_type ()", unref_function = "gdk_font_unref")]
	[Compact]
	public class Font {
		public int ascent;
		public int descent;
		public Gdk.FontType type;
		public bool equal (Gdk.Font fontb);
		public static unowned Gdk.Font from_description_for_display (Gdk.Display display, Pango.FontDescription font_desc);
		public int id ();
		public static unowned Gdk.Font load_for_display (Gdk.Display display, string font_name);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public class GC : GLib.Object {
		public int clip_x_origin;
		public int clip_y_origin;
		public weak Gdk.Colormap colormap;
		public int ts_x_origin;
		public int ts_y_origin;
		[CCode (has_construct_function = false)]
		public GC (Gdk.Drawable drawable);
		public void copy (Gdk.GC src_gc);
		public unowned Gdk.Colormap get_colormap ();
		public unowned Gdk.Screen get_screen ();
		public virtual void get_values (out Gdk.GCValues values);
		public void offset (int x_offset, int y_offset);
		public void set_background (Gdk.Color color);
		public void set_clip_mask (Gdk.Bitmap mask);
		public void set_clip_origin (int x, int y);
		public void set_clip_rectangle (Gdk.Rectangle rectangle);
		public void set_clip_region (Gdk.Region region);
		public void set_colormap (Gdk.Colormap colormap);
		public virtual void set_dashes (int dash_offset, char[] dash_list, int n);
		public void set_exposures (bool exposures);
		public void set_fill (Gdk.Fill fill);
		public void set_foreground (Gdk.Color color);
		public void set_function (Gdk.Function function);
		public void set_line_attributes (int line_width, Gdk.LineStyle line_style, Gdk.CapStyle cap_style, Gdk.JoinStyle join_style);
		public void set_rgb_bg_color (Gdk.Color color);
		public void set_rgb_fg_color (Gdk.Color color);
		public void set_stipple (Gdk.Pixmap stipple);
		public void set_subwindow (Gdk.SubwindowMode mode);
		public void set_tile (Gdk.Pixmap tile);
		public void set_ts_origin (int x, int y);
		public virtual void set_values (Gdk.GCValues values, Gdk.GCValuesMask values_mask);
		[CCode (has_construct_function = false)]
		public GC.with_values (Gdk.Drawable drawable, Gdk.GCValues values, Gdk.GCValuesMask values_mask);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public class Image : GLib.Object {
		public uint16 bits_per_pixel;
		public uint16 bpl;
		public uint16 bpp;
		public Gdk.ByteOrder byte_order;
		public weak Gdk.Colormap colormap;
		public uint16 depth;
		public int height;
		public void* mem;
		public Gdk.ImageType type;
		public weak Gdk.Visual visual;
		public int width;
		public void* windowing_data;
		[CCode (has_construct_function = false)]
		public Image (Gdk.ImageType type, Gdk.Visual visual, int width, int height);
		public uint16 get_bits_per_pixel ();
		public Gdk.ByteOrder get_byte_order ();
		public uint16 get_bytes_per_line ();
		public uint16 get_bytes_per_pixel ();
		public unowned Gdk.Colormap get_colormap ();
		public uint16 get_depth ();
		public int get_height ();
		public Gdk.ImageType get_image_type ();
		public uint32 get_pixel (int x, int y);
		public unowned Gdk.Visual get_visual ();
		public int get_width ();
		public void put_pixel (int x, int y, uint32 pixel);
		public void set_colormap (Gdk.Colormap colormap);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Compact]
	public class KeyboardGrabInfo {
		public weak Gdk.Window native_window;
		public bool owner_events;
		public ulong serial;
		public uint32 time;
		public weak Gdk.Window window;
		public static bool libgtk_only (Gdk.Display display, out unowned Gdk.Window grab_window, bool owner_events);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class Keymap : GLib.Object {
		public weak Gdk.Display display;
		[CCode (has_construct_function = false)]
		protected Keymap ();
		public void add_virtual_modifiers (Gdk.ModifierType state);
		public bool get_caps_lock_state ();
		public static unowned Gdk.Keymap get_default ();
		public Pango.Direction get_direction ();
		public bool get_entries_for_keycode (uint hardware_keycode, [CCode (array_length = false)] out Gdk.KeymapKey[] keys, [CCode (array_length = false)] out uint[] keyvals, out int n_entries);
		public bool get_entries_for_keyval (uint keyval, out unowned Gdk.KeymapKey[] keys);
		public static unowned Gdk.Keymap get_for_display (Gdk.Display display);
		public bool have_bidi_layouts ();
		public uint lookup_key (Gdk.KeymapKey key);
		public bool map_virtual_modifiers (Gdk.ModifierType state);
		public bool translate_keyboard_state (uint hardware_keycode, Gdk.ModifierType state, int group, uint keyval, int effective_group, int level, Gdk.ModifierType consumed_modifiers);
		public virtual signal void direction_changed ();
		public virtual signal void keys_changed ();
		public virtual signal void state_changed ();
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class PangoRenderer : Pango.Renderer {
		[CCode (has_construct_function = false, type = "PangoRenderer*")]
		public PangoRenderer (Gdk.Screen screen);
		public static unowned Pango.Renderer get_default (Gdk.Screen screen);
		public void set_drawable (Gdk.Drawable drawable);
		public void set_gc (Gdk.GC gc);
		public void set_override_color (Pango.RenderPart part, Gdk.Color color);
		public void set_stipple (Pango.RenderPart part, Gdk.Bitmap stipple);
		[NoAccessorMethod]
		public Gdk.Screen screen { owned get; construct; }
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class Pixmap : Gdk.Drawable {
		[CCode (has_construct_function = false)]
		public Pixmap (Gdk.Drawable? drawable, int width, int height, int depth);
		[Version (deprecated = true, deprecated_since = "2.22")]
		public static unowned Gdk.Pixmap colormap_create_from_xpm (Gdk.Drawable drawable, Gdk.Colormap colormap, out unowned Gdk.Bitmap mask, Gdk.Color transparent_color, string filename);
		[Version (deprecated = true, deprecated_since = "2.22")]
		public static unowned Gdk.Pixmap colormap_create_from_xpm_d (Gdk.Drawable drawable, Gdk.Colormap colormap, out unowned Gdk.Bitmap mask, Gdk.Color transparent_color, string data);
		[Version (deprecated = true, deprecated_since = "2.22")]
		public static unowned Gdk.Pixmap create_from_data (Gdk.Drawable drawable, [CCode (array_length = false)] uint8[] data, int width, int height, int depth, Gdk.Color fg, Gdk.Color bg);
		[Version (deprecated = true, deprecated_since = "2.22")]
		public static unowned Gdk.Pixmap create_from_xpm (Gdk.Drawable drawable, out unowned Gdk.Bitmap mask, Gdk.Color transparent_color, string filename);
		[Version (deprecated = true, deprecated_since = "2.22")]
		public static unowned Gdk.Pixmap create_from_xpm_d (Gdk.Drawable drawable, out unowned Gdk.Bitmap mask, Gdk.Color transparent_color, string data);
		public static unowned Gdk.Pixmap foreign_new (Gdk.NativeWindow anid);
		public static unowned Gdk.Pixmap foreign_new_for_display (Gdk.Display display, Gdk.NativeWindow anid);
		public static unowned Gdk.Pixmap foreign_new_for_screen (Gdk.Screen screen, Gdk.NativeWindow anid, int width, int height, int depth);
		public void get_size (int width, int height);
		public static unowned Gdk.Pixmap lookup (Gdk.NativeWindow anid);
		public static unowned Gdk.Pixmap lookup_for_display (Gdk.Display display, Gdk.NativeWindow anid);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Compact]
	public class PointerHooks {
		public weak GLib.Callback get_pointer;
		public weak GLib.Callback window_at_pointer;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Compact]
	public class PointerWindowInfo {
		public uint32 button;
		public ulong motion_hint_serial;
		public uint32 state;
		public weak Gdk.Window toplevel_under_pointer;
		public double toplevel_x;
		public double toplevel_y;
		public weak Gdk.Window window_under_pointer;
	}
	[CCode (cheader_filename = "gdk/gdk.h", copy_function = "gdk_region_copy", free_function = "gdk_region_destroy")]
	[Compact]
	public class Region {
		[CCode (has_construct_function = false)]
		public Region ();
		public Gdk.Region copy ();
		public bool empty ();
		public bool equal (Gdk.Region region2);
		public void get_clipbox (out Gdk.Rectangle rectangle);
		public void get_rectangles (out Gdk.Rectangle[] rectangles);
		public void intersect (Gdk.Region source2);
		public void offset (int dx, int dy);
		public bool point_in (int x, int y);
		public static Gdk.Region polygon (Gdk.Point[] points, Gdk.FillRule fill_rule);
		public bool rect_equal (Gdk.Rectangle rectangle);
		public Gdk.OverlapType rect_in (Gdk.Rectangle rectangle);
		public static Gdk.Region rectangle (Gdk.Rectangle rectangle);
		public void shrink (int dx, int dy);
		public void spans_intersect_foreach (Gdk.Span[] spans, bool sorted, Gdk.SpanFunc function, void* data);
		public void subtract (Gdk.Region source2);
		public void union (Gdk.Region source2);
		public void union_with_rect (Gdk.Rectangle rect);
		public void xor (Gdk.Region source2);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class Screen : GLib.Object {
		public uint closed;
		[CCode (array_length = false)]
		public weak Gdk.GC[] exposure_gcs;
		[CCode (array_length = false)]
		public weak Gdk.GC[] normal_gcs;
		[CCode (array_length = false)]
		public weak Gdk.GC[] subwindow_gcs;
		[CCode (has_construct_function = false)]
		protected Screen ();
		public void broadcast_client_message (Gdk.Event event);
		public unowned Gdk.Window get_active_window ();
		public static unowned Gdk.Screen get_default ();
		public unowned Gdk.Colormap get_default_colormap ();
		public unowned Gdk.Display get_display ();
		public unowned Cairo.FontOptions get_font_options ();
		public int get_height ();
		public int get_height_mm ();
		public int get_monitor_at_point (int x, int y);
		public int get_monitor_at_window (Gdk.Window window);
		public void get_monitor_geometry (int monitor_num, out Gdk.Rectangle dest);
		public int get_monitor_height_mm (int monitor_num);
		public unowned string get_monitor_plug_name (int monitor_num);
		public int get_monitor_width_mm (int monitor_num);
		public int get_n_monitors ();
		public int get_number ();
		public int get_primary_monitor ();
		public double get_resolution ();
		public unowned Gdk.Colormap get_rgb_colormap ();
		public unowned Gdk.Visual get_rgb_visual ();
		public unowned Gdk.Colormap get_rgba_colormap ();
		public unowned Gdk.Visual get_rgba_visual ();
		public unowned Gdk.Window get_root_window ();
		public bool get_setting (string name, GLib.Value value);
		public unowned Gdk.Colormap get_system_colormap ();
		public unowned Gdk.Visual get_system_visual ();
		public GLib.List<weak Gdk.Window> get_toplevel_windows ();
		public int get_width ();
		public int get_width_mm ();
		public GLib.List<Gdk.Window>? get_window_stack ();
		public static int height ();
		public static int height_mm ();
		public bool is_composited ();
		public GLib.List<weak Gdk.Visual> list_visuals ();
		public unowned string make_display_name ();
		public void set_default_colormap (Gdk.Colormap colormap);
		public void set_font_options (Cairo.FontOptions options);
		public void set_resolution (double dpi);
		public static int width ();
		public static int width_mm ();
		public void* font_options { get; set; }
		public double resolution { get; set; }
		public virtual signal void composited_changed ();
		public virtual signal void monitors_changed ();
		public virtual signal void size_changed ();
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class Visual : GLib.Object {
		public int bits_per_rgb;
		public uint32 blue_mask;
		public int blue_prec;
		public int blue_shift;
		public Gdk.ByteOrder byte_order;
		public int colormap_size;
		public int depth;
		public uint32 green_mask;
		public int green_prec;
		public int green_shift;
		public uint32 red_mask;
		public int red_prec;
		public int red_shift;
		public Gdk.VisualType type;
		[CCode (has_construct_function = false)]
		protected Visual ();
		public static unowned Gdk.Visual get_best ();
		public static int get_best_depth ();
		public static Gdk.VisualType get_best_type ();
		public static unowned Gdk.Visual get_best_with_both (int depth, Gdk.VisualType visual_type);
		public static unowned Gdk.Visual get_best_with_depth (int depth);
		public static unowned Gdk.Visual get_best_with_type (Gdk.VisualType visual_type);
		public int get_bits_per_rgb ();
		public void get_blue_pixel_details (uint32 mask, int shift, int precision);
		public Gdk.ByteOrder get_byte_order ();
		public int get_colormap_size ();
		public int get_depth ();
		public void get_green_pixel_details (uint32 mask, int shift, int precision);
		public void get_red_pixel_details (uint32 mask, int shift, int precision);
		public unowned Gdk.Screen get_screen ();
		public static unowned Gdk.Visual get_system ();
		public Gdk.VisualType get_visual_type ();
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public class Window : Gdk.Drawable {
		[CCode (has_construct_function = false)]
		public Window (Gdk.Window? parent, Gdk.WindowAttr attributes, int attributes_mask);
		public void add_filter (Gdk.FilterFunc function);
		public static unowned Gdk.Window at_pointer (out int win_x, out int win_y);
		public void beep ();
		public void begin_move_drag (int button, int root_x, int root_y, uint32 timestamp);
		public void begin_paint_rect (Gdk.Rectangle rectangle);
		public void begin_paint_region (Gdk.Region region);
		public void begin_resize_drag (Gdk.WindowEdge edge, int button, int root_x, int root_y, uint32 timestamp);
		public void clear ();
		public void clear_area (int x, int y, int width, int height);
		public void clear_area_e (int x, int y, int width, int height);
		public void configure_finished ();
		public static void constrain_size (Gdk.Geometry geometry, uint flags, int width, int height, out int new_width, out int new_height);
		public void coords_from_parent (double parent_x, double parent_y, double x, double y);
		public void coords_to_parent (double x, double y, double parent_x, double parent_y);
		public Cairo.Surface create_similar_surface (Cairo.Content content, int width, int height);
		public void deiconify ();
		public void destroy ();
		public void enable_synchronized_configure ();
		public void end_paint ();
		public bool ensure_native ();
		public void flush ();
		public void focus (uint32 timestamp);
		public static unowned Gdk.Window foreign_new (Gdk.NativeWindow anid);
		public static unowned Gdk.Window foreign_new_for_display (Gdk.Display display, Gdk.NativeWindow anid);
		public void freeze_toplevel_updates_libgtk_only ();
		public void freeze_updates ();
		public void fullscreen ();
		public void geometry_changed ();
		public bool get_accept_focus ();
		public unowned Cairo.Pattern get_background_pattern ();
		public GLib.List<weak Gdk.Window> get_children ();
		public bool get_composited ();
		public unowned Gdk.Cursor? get_cursor ();
		public bool get_decorations (out Gdk.WMDecoration decorations);
		public bool get_deskrelative_origin (out int x, out int y);
		public unowned Gdk.Display get_display ();
		public unowned Gdk.Window get_effective_parent ();
		public unowned Gdk.Window get_effective_toplevel ();
		public Gdk.EventMask get_events ();
		public bool get_focus_on_map ();
		public void get_frame_extents (out Gdk.Rectangle rect);
		public void get_geometry (out int x, out int y, out int width, out int height, out int depth);
		public unowned Gdk.Window get_group ();
		public int get_height ();
		public void get_internal_paint_info (out unowned Gdk.Drawable real_drawable, out int x_offset, out int y_offset);
		public bool get_modal_hint ();
		public int get_origin (out int x, out int y);
		public unowned Gdk.Window get_parent ();
		public unowned Gdk.Window get_pointer (out int x, out int y, out Gdk.ModifierType mask);
		public void get_position (out int x, out int y);
		public void get_root_coords (int x, int y, out int root_x, out int root_y);
		public void get_root_origin (out int x, out int y);
		public unowned Gdk.Screen get_screen ();
		public Gdk.WindowState get_state ();
		public unowned Gdk.Window get_toplevel ();
		public Gdk.WindowTypeHint get_type_hint ();
		public unowned Gdk.Region get_update_area ();
		public void get_user_data (void* data);
		public unowned Gdk.Visual get_visual ();
		public int get_width ();
		public Gdk.WindowType get_window_type ();
		public bool has_native ();
		public void hide ();
		public void iconify ();
		public void input_shape_combine_mask (Gdk.Bitmap? mask, int x, int y);
		public void input_shape_combine_region (Gdk.Region shape_region, int offset_x, int offset_y);
		public void invalidate_maybe_recurse (Gdk.Region region, GLib.Callback child_func);
		public void invalidate_rect (Gdk.Rectangle? rect, bool invalidate_children);
		public void invalidate_region (Gdk.Region region, bool invalidate_children);
		public bool is_destroyed ();
		public bool is_input_only ();
		public bool is_shaped ();
		public bool is_viewable ();
		public bool is_visible ();
		public static unowned Gdk.Window lookup (Gdk.NativeWindow anid);
		public static unowned Gdk.Window lookup_for_display (Gdk.Display display, Gdk.NativeWindow anid);
		public void lower ();
		public void maximize ();
		public void merge_child_input_shapes ();
		public void merge_child_shapes ();
		public void move (int x, int y);
		public void move_region (Gdk.Region region, int dx, int dy);
		public void move_resize (int x, int y, int width, int height);
		public unowned GLib.List<Gdk.Window> peek_children ();
		public static void process_all_updates ();
		public void process_updates (bool update_children);
		public void raise ();
		public void register_dnd ();
		public void remove_filter (Gdk.FilterFunc function);
		public void remove_redirection ();
		public void reparent (Gdk.Window new_parent, int x, int y);
		public void resize (int width, int height);
		public void restack (Gdk.Window sibling, bool above);
		public void scroll (int dx, int dy);
		public void set_accept_focus (bool accept_focus);
		public void set_back_pixmap (Gdk.Pixmap? pixmap, bool parent_relative);
		public void set_background (Gdk.Color color);
		public void set_child_input_shapes ();
		public void set_child_shapes ();
		public void set_composited (bool composited);
		public void set_cursor (Gdk.Cursor? cursor);
		public static void set_debug_updates (bool setting);
		public void set_decorations (Gdk.WMDecoration decorations);
		public void set_events (Gdk.EventMask event_mask);
		public void set_focus_on_map (bool focus_on_map);
		public void set_functions (Gdk.WMFunction functions);
		public void set_geometry_hints (Gdk.Geometry geometry, Gdk.WindowHints geom_mask);
		public void set_group (Gdk.Window leader);
		public void set_icon (Gdk.Window icon_window, Gdk.Pixmap pixmap, Gdk.Bitmap mask);
		public void set_icon_list (GLib.List<Gdk.Pixbuf> pixbufs);
		public void set_icon_name (string name);
		public void set_keep_above (bool setting);
		public void set_keep_below (bool setting);
		public void set_modal_hint (bool modal);
		public void set_opacity (double opacity);
		public void set_override_redirect (bool override_redirect);
		public void set_role (string role);
		public void set_skip_pager_hint (bool skips_pager);
		public void set_skip_taskbar_hint (bool skips_taskbar);
		public void set_startup_id (string startup_id);
		public bool set_static_gravities (bool use_static);
		public void set_title (string title);
		public void set_transient_for (Gdk.Window parent);
		public void set_type_hint (Gdk.WindowTypeHint hint);
		public void set_urgency_hint (bool urgent);
		public void set_user_data (void* user_data);
		public void shape_combine_mask (Gdk.Bitmap mask, int x, int y);
		public void shape_combine_region (Gdk.Region shape_region, int offset_x, int offset_y);
		public void show ();
		public void show_unraised ();
		public void stick ();
		public void thaw_toplevel_updates_libgtk_only ();
		public void thaw_updates ();
		public void unfullscreen ();
		public void unmaximize ();
		public void unstick ();
		public void withdraw ();
		public Gdk.Cursor cursor { get; set; }
		public virtual signal void from_embedder (double p0, double p1, void* p2, void* p3);
		public virtual signal unowned Gdk.Window pick_embedded_child (double p0, double p1);
		public virtual signal void to_embedder (double p0, double p1, void* p2, void* p3);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	[IntegerType]
	public struct Atom : uint {
		[CCode (cname = "GDK_NONE")]
		public static Gdk.Atom NONE;
		public static Gdk.Atom intern (string atom_name, bool only_if_exists);
		public static Gdk.Atom intern_static_string (string atom_name);
		public string name ();
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct Color {
		public uint32 pixel;
		public uint16 red;
		public uint16 green;
		public uint16 blue;
		public Gdk.Color copy ();
		public bool equal (Gdk.Color colorb);
		public void free ();
		public uint hash ();
		public static bool parse (string spec, out Gdk.Color color);
		public string to_string ();
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct DeviceAxis {
		public Gdk.AxisUse use;
		public double min;
		public double max;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct DeviceKey {
		public uint keyval;
		public Gdk.ModifierType modifiers;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventAny {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventButton {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public uint32 time;
		public double x;
		public double y;
		[CCode (array_length = false)]
		public weak double[] axes;
		public Gdk.ModifierType state;
		public uint button;
		public weak Gdk.Device device;
		public double x_root;
		public double y_root;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventClient {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public Gdk.Atom message_type;
		public ushort data_format;
		public void* data;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventConfigure {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public int x;
		public int y;
		public int width;
		public int height;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventCrossing {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public weak Gdk.Window subwindow;
		public uint32 time;
		public double x;
		public double y;
		public double x_root;
		public double y_root;
		public Gdk.CrossingMode mode;
		public Gdk.NotifyType detail;
		public bool focus;
		public Gdk.ModifierType state;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventDND {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public weak Gdk.DragContext context;
		public uint32 time;
		public short x_root;
		public short y_root;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventExpose {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public Gdk.Rectangle area;
		public weak Gdk.Region region;
		public int count;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventFocus {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public int16 @in;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventGrabBroken {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public bool keyboard;
		public bool implicit;
		public weak Gdk.Window grab_window;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventKey {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public uint32 time;
		public Gdk.ModifierType state;
		public uint keyval;
		public int length;
		[CCode (cname = "string")]
		public weak string str;
		public uint16 hardware_keycode;
		public uchar group;
		public uint is_modifier;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventMotion {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public uint32 time;
		public double x;
		public double y;
		[CCode (array_length = false)]
		public weak double[] axes;
		public Gdk.ModifierType state;
		public bool is_hint;
		public weak Gdk.Device device;
		public double x_root;
		public double y_root;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventNoExpose {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventOwnerChange {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public Gdk.NativeWindow owner;
		public Gdk.OwnerChange reason;
		public Gdk.Atom selection;
		public uint32 time;
		public uint32 selection_time;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventProperty {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public Gdk.Atom atom;
		public uint32 time;
		public Gdk.PropertyState state;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventProximity {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public uint32 time;
		public weak Gdk.Device device;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventScroll {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public uint32 time;
		public double x;
		public double y;
		public Gdk.ModifierType state;
		public Gdk.ScrollDirection direction;
		public weak Gdk.Device device;
		public double x_root;
		public double y_root;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventSelection {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public Gdk.Atom selection;
		public Gdk.Atom target;
		public Gdk.Atom property;
		public uint32 time;
		public Gdk.NativeWindow requestor;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventSetting {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public Gdk.SettingAction action;
		public weak string name;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventVisibility {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public Gdk.VisibilityState state;
	}
	[CCode (cheader_filename = "gdk/gdk.h", has_type_id = false)]
	public struct EventWindowState {
		public Gdk.EventType type;
		public weak Gdk.Window window;
		public char send_event;
		public Gdk.WindowState changed_mask;
		public Gdk.WindowState new_window_state;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct GCValues {
		public Gdk.Color foreground;
		public Gdk.Color background;
		public weak Gdk.Font font;
		public Gdk.Function function;
		public Gdk.Fill fill;
		public weak Gdk.Pixmap tile;
		public weak Gdk.Pixmap stipple;
		public weak Gdk.Pixmap clip_mask;
		public Gdk.SubwindowMode subwindow_mode;
		public int ts_x_origin;
		public int ts_y_origin;
		public int clip_x_origin;
		public int clip_y_origin;
		public int graphics_exposures;
		public int line_width;
		public Gdk.LineStyle line_style;
		public Gdk.CapStyle cap_style;
		public Gdk.JoinStyle join_style;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct Geometry {
		public int min_width;
		public int min_height;
		public int max_width;
		public int max_height;
		public int base_width;
		public int base_height;
		public int width_inc;
		public int height_inc;
		public double min_aspect;
		public double max_aspect;
		public Gdk.Gravity win_gravity;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct KeymapKey {
		public uint keycode;
		public int group;
		public int level;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	[SimpleType]
	public struct NativeWindow {
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct PangoAttrEmbossColor {
		public weak Pango.Attribute attr;
		public Pango.Color color;
		[CCode (has_construct_function = false)]
		public PangoAttrEmbossColor (Gdk.Color color);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct PangoAttrEmbossed {
		public weak Pango.Attribute attr;
		public bool embossed;
		[CCode (has_construct_function = false)]
		public PangoAttrEmbossed (bool embossed);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct PangoAttrStipple {
		public weak Pango.Attribute attr;
		public weak Gdk.Bitmap stipple;
		[CCode (has_construct_function = false)]
		public PangoAttrStipple (Gdk.Bitmap stipple);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct Point {
		public int x;
		public int y;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct Rectangle {
		public int x;
		public int y;
		public int width;
		public int height;
		public bool intersect (Gdk.Rectangle src2, out Gdk.Rectangle dest);
		public void union (Gdk.Rectangle src2, out Gdk.Rectangle dest);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public struct RgbCmap {
		[CCode (array_length = false)]
		public weak uint32[] colors;
		public int n_colors;
		public weak GLib.SList info_list;
		[CCode (has_construct_function = false)]
		[Version (deprecated = true, deprecated_since = "2.22")]
		public RgbCmap (uint32[] colors);
		[Version (deprecated = true, deprecated_since = "2.22")]
		public void free ();
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct Segment {
		public int x1;
		public int y1;
		public int x2;
		public int y2;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct Span {
		public int x;
		public int y;
		public int width;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct TimeCoord {
		public uint32 time;
		[CCode (array_length = false)]
		public weak double[] axes;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct Trapezoid {
		public double y1;
		public double x11;
		public double x21;
		public double y2;
		public double x12;
		public double x22;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct WChar {
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct WindowAttr {
		public weak string title;
		public int event_mask;
		public int x;
		public int y;
		public int width;
		public int height;
		public Gdk.WindowClass wclass;
		public weak Gdk.Visual visual;
		public weak Gdk.Colormap colormap;
		public Gdk.WindowType window_type;
		public weak Gdk.Cursor cursor;
		public weak string wmclass_name;
		public weak string wmclass_class;
		public bool override_redirect;
		public Gdk.WindowTypeHint type_hint;
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct WindowRedirect {
		public static void to_drawable (Gdk.Window window, Gdk.Drawable drawable, int src_x, int src_y, int dest_x, int dest_y, int width, int height);
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public struct XEvent {
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_AXIS_")]
	public enum AxisUse {
		IGNORE,
		X,
		Y,
		PRESSURE,
		XTILT,
		YTILT,
		WHEEL,
		LAST
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_")]
	public enum ByteOrder {
		LSB_FIRST,
		MSB_FIRST
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_CAP_")]
	public enum CapStyle {
		NOT_LAST,
		BUTT,
		ROUND,
		PROJECTING
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_CROSSING_")]
	public enum CrossingMode {
		NORMAL,
		GRAB,
		UNGRAB,
		GTK_GRAB,
		GTK_UNGRAB,
		STATE_CHANGED
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_")]
	public enum CursorType {
		X_CURSOR,
		ARROW,
		BASED_ARROW_DOWN,
		BASED_ARROW_UP,
		BOAT,
		BOGOSITY,
		BOTTOM_LEFT_CORNER,
		BOTTOM_RIGHT_CORNER,
		BOTTOM_SIDE,
		BOTTOM_TEE,
		BOX_SPIRAL,
		CENTER_PTR,
		CIRCLE,
		CLOCK,
		COFFEE_MUG,
		CROSS,
		CROSS_REVERSE,
		CROSSHAIR,
		DIAMOND_CROSS,
		DOT,
		DOTBOX,
		DOUBLE_ARROW,
		DRAFT_LARGE,
		DRAFT_SMALL,
		DRAPED_BOX,
		EXCHANGE,
		FLEUR,
		GOBBLER,
		GUMBY,
		HAND1,
		HAND2,
		HEART,
		ICON,
		IRON_CROSS,
		LEFT_PTR,
		LEFT_SIDE,
		LEFT_TEE,
		LEFTBUTTON,
		LL_ANGLE,
		LR_ANGLE,
		MAN,
		MIDDLEBUTTON,
		MOUSE,
		PENCIL,
		PIRATE,
		PLUS,
		QUESTION_ARROW,
		RIGHT_PTR,
		RIGHT_SIDE,
		RIGHT_TEE,
		RIGHTBUTTON,
		RTL_LOGO,
		SAILBOAT,
		SB_DOWN_ARROW,
		SB_H_DOUBLE_ARROW,
		SB_LEFT_ARROW,
		SB_RIGHT_ARROW,
		SB_UP_ARROW,
		SB_V_DOUBLE_ARROW,
		SHUTTLE,
		SIZING,
		SPIDER,
		SPRAYCAN,
		STAR,
		TARGET,
		TCROSS,
		TOP_LEFT_ARROW,
		TOP_LEFT_CORNER,
		TOP_RIGHT_CORNER,
		TOP_SIDE,
		TOP_TEE,
		TREK,
		UL_ANGLE,
		UMBRELLA,
		UR_ANGLE,
		WATCH,
		XTERM,
		LAST_CURSOR,
		BLANK_CURSOR,
		CURSOR_IS_PIXMAP
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_ACTION_")]
	[Flags]
	public enum DragAction {
		DEFAULT,
		COPY,
		MOVE,
		LINK,
		PRIVATE,
		ASK
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_DRAG_PROTO_")]
	public enum DragProtocol {
		MOTIF,
		XDND,
		ROOTWIN,
		NONE,
		WIN32_DROPFILES,
		OLE2,
		LOCAL
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_")]
	[Flags]
	public enum EventMask {
		EXPOSURE_MASK,
		POINTER_MOTION_MASK,
		POINTER_MOTION_HINT_MASK,
		BUTTON_MOTION_MASK,
		BUTTON1_MOTION_MASK,
		BUTTON2_MOTION_MASK,
		BUTTON3_MOTION_MASK,
		BUTTON_PRESS_MASK,
		BUTTON_RELEASE_MASK,
		KEY_PRESS_MASK,
		KEY_RELEASE_MASK,
		ENTER_NOTIFY_MASK,
		LEAVE_NOTIFY_MASK,
		FOCUS_CHANGE_MASK,
		STRUCTURE_MASK,
		PROPERTY_CHANGE_MASK,
		VISIBILITY_NOTIFY_MASK,
		PROXIMITY_IN_MASK,
		PROXIMITY_OUT_MASK,
		SUBSTRUCTURE_MASK,
		SCROLL_MASK,
		ALL_EVENTS_MASK
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_")]
	public enum EventType {
		NOTHING,
		DELETE,
		DESTROY,
		EXPOSE,
		MOTION_NOTIFY,
		BUTTON_PRESS,
		@2BUTTON_PRESS,
		@3BUTTON_PRESS,
		BUTTON_RELEASE,
		KEY_PRESS,
		KEY_RELEASE,
		ENTER_NOTIFY,
		LEAVE_NOTIFY,
		FOCUS_CHANGE,
		CONFIGURE,
		MAP,
		UNMAP,
		PROPERTY_NOTIFY,
		SELECTION_CLEAR,
		SELECTION_REQUEST,
		SELECTION_NOTIFY,
		PROXIMITY_IN,
		PROXIMITY_OUT,
		DRAG_ENTER,
		DRAG_LEAVE,
		DRAG_MOTION,
		DRAG_STATUS,
		DROP_START,
		DROP_FINISHED,
		CLIENT_EVENT,
		VISIBILITY_NOTIFY,
		NO_EXPOSE,
		SCROLL,
		WINDOW_STATE,
		SETTING,
		OWNER_CHANGE,
		GRAB_BROKEN,
		DAMAGE,
		EVENT_LAST
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_EXTENSION_EVENTS_")]
	public enum ExtensionMode {
		NONE,
		ALL,
		CURSOR
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_")]
	public enum Fill {
		SOLID,
		TILED,
		STIPPLED,
		OPAQUE_STIPPLED
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_")]
	public enum FillRule {
		EVEN_ODD_RULE,
		WINDING_RULE
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_FILTER_")]
	public enum FilterReturn {
		CONTINUE,
		TRANSLATE,
		REMOVE
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_FONT_")]
	public enum FontType {
		FONT,
		FONTSET
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_")]
	public enum Function {
		COPY,
		INVERT,
		XOR,
		CLEAR,
		AND,
		AND_REVERSE,
		AND_INVERT,
		NOOP,
		OR,
		EQUIV,
		OR_REVERSE,
		COPY_INVERT,
		OR_INVERT,
		NAND,
		NOR,
		SET
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_GC_")]
	[Flags]
	public enum GCValuesMask {
		FOREGROUND,
		BACKGROUND,
		FONT,
		FUNCTION,
		FILL,
		TILE,
		STIPPLE,
		CLIP_MASK,
		SUBWINDOW,
		TS_X_ORIGIN,
		TS_Y_ORIGIN,
		CLIP_X_ORIGIN,
		CLIP_Y_ORIGIN,
		EXPOSURES,
		LINE_WIDTH,
		LINE_STYLE,
		CAP_STYLE,
		JOIN_STYLE
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_GRAB_")]
	public enum GrabStatus {
		SUCCESS,
		ALREADY_GRABBED,
		INVALID_TIME,
		NOT_VIEWABLE,
		FROZEN
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_GRAVITY_")]
	public enum Gravity {
		NORTH_WEST,
		NORTH,
		NORTH_EAST,
		WEST,
		CENTER,
		EAST,
		SOUTH_WEST,
		SOUTH,
		SOUTH_EAST,
		STATIC
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_IMAGE_")]
	public enum ImageType {
		NORMAL,
		SHARED,
		FASTEST
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_INPUT_")]
	[Flags]
	public enum InputCondition {
		READ,
		WRITE,
		EXCEPTION
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_MODE_")]
	public enum InputMode {
		DISABLED,
		SCREEN,
		WINDOW
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_SOURCE_")]
	public enum InputSource {
		MOUSE,
		PEN,
		ERASER,
		CURSOR
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_JOIN_")]
	public enum JoinStyle {
		MITER,
		ROUND,
		BEVEL
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_LINE_")]
	public enum LineStyle {
		SOLID,
		ON_OFF_DASH,
		DOUBLE_DASH
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_")]
	[Flags]
	public enum ModifierType {
		SHIFT_MASK,
		LOCK_MASK,
		CONTROL_MASK,
		MOD1_MASK,
		MOD2_MASK,
		MOD3_MASK,
		MOD4_MASK,
		MOD5_MASK,
		BUTTON1_MASK,
		BUTTON2_MASK,
		BUTTON3_MASK,
		BUTTON4_MASK,
		BUTTON5_MASK,
		SUPER_MASK,
		HYPER_MASK,
		META_MASK,
		RELEASE_MASK,
		MODIFIER_MASK
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_NOTIFY_")]
	public enum NotifyType {
		ANCESTOR,
		VIRTUAL,
		INFERIOR,
		NONLINEAR,
		NONLINEAR_VIRTUAL,
		UNKNOWN
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_OVERLAP_RECTANGLE_")]
	public enum OverlapType {
		IN,
		OUT,
		PART
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_OWNER_CHANGE_")]
	public enum OwnerChange {
		NEW_OWNER,
		DESTROY,
		CLOSE
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_PROP_MODE_")]
	public enum PropMode {
		REPLACE,
		PREPEND,
		APPEND
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_PROPERTY_")]
	public enum PropertyState {
		NEW_VALUE,
		DELETE
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_RGB_DITHER_")]
	public enum RgbDither {
		NONE,
		NORMAL,
		MAX
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_SCROLL_")]
	public enum ScrollDirection {
		UP,
		DOWN,
		LEFT,
		RIGHT
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_SETTING_ACTION_")]
	public enum SettingAction {
		NEW,
		CHANGED,
		DELETED
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_")]
	public enum Status {
		OK,
		ERROR,
		ERROR_PARAM,
		ERROR_FILE,
		ERROR_MEM
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_")]
	public enum SubwindowMode {
		CLIP_BY_CHILDREN,
		INCLUDE_INFERIORS
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_VISIBILITY_")]
	public enum VisibilityState {
		UNOBSCURED,
		PARTIAL,
		FULLY_OBSCURED
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_VISUAL_")]
	public enum VisualType {
		STATIC_GRAY,
		GRAYSCALE,
		STATIC_COLOR,
		PSEUDO_COLOR,
		TRUE_COLOR,
		DIRECT_COLOR
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_DECOR_")]
	[Flags]
	public enum WMDecoration {
		ALL,
		BORDER,
		RESIZEH,
		TITLE,
		MENU,
		MINIMIZE,
		MAXIMIZE
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_FUNC_")]
	[Flags]
	public enum WMFunction {
		ALL,
		RESIZE,
		MOVE,
		MINIMIZE,
		MAXIMIZE,
		CLOSE
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_WA_")]
	[Flags]
	public enum WindowAttributesType {
		TITLE,
		X,
		Y,
		CURSOR,
		COLORMAP,
		VISUAL,
		WMCLASS,
		NOREDIR,
		TYPE_HINT
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_")]
	public enum WindowClass {
		INPUT_OUTPUT,
		INPUT_ONLY
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_WINDOW_EDGE_")]
	public enum WindowEdge {
		NORTH_WEST,
		NORTH,
		NORTH_EAST,
		WEST,
		EAST,
		SOUTH_WEST,
		SOUTH,
		SOUTH_EAST
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_HINT_")]
	[Flags]
	public enum WindowHints {
		POS,
		MIN_SIZE,
		MAX_SIZE,
		BASE_SIZE,
		ASPECT,
		RESIZE_INC,
		WIN_GRAVITY,
		USER_POS,
		USER_SIZE
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_WINDOW_STATE_")]
	[Flags]
	public enum WindowState {
		WITHDRAWN,
		ICONIFIED,
		MAXIMIZED,
		STICKY,
		FULLSCREEN,
		ABOVE,
		BELOW
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_WINDOW_")]
	public enum WindowType {
		ROOT,
		TOPLEVEL,
		CHILD,
		DIALOG,
		TEMP,
		FOREIGN,
		OFFSCREEN
	}
	[CCode (cheader_filename = "gdk/gdk.h", cprefix = "GDK_WINDOW_TYPE_HINT_")]
	public enum WindowTypeHint {
		NORMAL,
		DIALOG,
		MENU,
		TOOLBAR,
		SPLASHSCREEN,
		UTILITY,
		DOCK,
		DESKTOP,
		DROPDOWN_MENU,
		POPUP_MENU,
		TOOLTIP,
		NOTIFICATION,
		COMBO,
		DND
	}
	[CCode (cheader_filename = "gdk/gdk.h")]
	public delegate void EventFunc (Gdk.Event event);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public delegate Gdk.FilterReturn FilterFunc (Gdk.XEvent xevent, Gdk.Event event);
	[CCode (cheader_filename = "gdk/gdk.h", has_target = false)]
	public delegate void InputFunction (void* data, int source, Gdk.InputCondition condition);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public delegate void SpanFunc (Gdk.Span span);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public const int CURRENT_TIME;
	[CCode (cheader_filename = "gdk/gdk.h")]
	public const int MAX_TIMECOORD_AXES;
	[CCode (cheader_filename = "gdk/gdk.h")]
	public const int PARENT_RELATIVE;
	[CCode (cheader_filename = "gdk/gdk.h")]
	public const int PRIORITY_REDRAW;
	[CCode (cheader_filename = "gdk/gdk.h")]
	public const Gdk.Atom SELECTION_CLIPBOARD;
	[CCode (cheader_filename = "gdk/gdk.h")]
	public const Gdk.Atom SELECTION_PRIMARY;
	[CCode (cheader_filename = "gdk/gdk.h")]
	public const Gdk.Atom SELECTION_SECONDARY;
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void add_client_message_filter (Gdk.Atom message_type, Gdk.FilterFunc func);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void add_option_entries_libgtk_only (GLib.OptionGroup group);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void beep ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static Cairo.Context cairo_create (Gdk.Drawable drawable);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void cairo_rectangle (Cairo.Context cr, Gdk.Rectangle rectangle);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void cairo_region (Cairo.Context cr, Gdk.Region region);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void cairo_reset_clip (Cairo.Context cr, Gdk.Drawable drawable);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void cairo_set_source_color (Cairo.Context cr, Gdk.Color color);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void cairo_set_source_pixbuf (Cairo.Context cr, Gdk.Pixbuf pixbuf, double pixbuf_x, double pixbuf_y);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void cairo_set_source_pixmap (Cairo.Context cr, Gdk.Pixmap pixmap, double pixmap_x, double pixmap_y);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void cairo_set_source_window (Cairo.Context cr, Gdk.Window window, double x, double y);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static int colors_alloc (Gdk.Colormap colormap, bool contiguous, ulong planes, int nplanes, ulong pixels, int npixels);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void colors_free (Gdk.Colormap colormap, ulong pixels, int npixels, ulong planes);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned GLib.List<Gdk.Device> devices_list ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void drag_abort (Gdk.DragContext context, uint32 time_);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned Gdk.DragContext drag_begin (Gdk.Window window, GLib.List<Gdk.Atom> targets);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void drag_drop (Gdk.DragContext context, uint32 time_);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool drag_drop_succeeded (Gdk.DragContext context);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void drag_find_window (Gdk.DragContext context, Gdk.Window drag_window, int x_root, int y_root, out unowned Gdk.Window dest_window, Gdk.DragProtocol protocol);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void drag_find_window_for_screen (Gdk.DragContext context, Gdk.Window drag_window, Gdk.Screen screen, int x_root, int y_root, out unowned Gdk.Window dest_window, Gdk.DragProtocol protocol);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static Gdk.NativeWindow drag_get_protocol (Gdk.NativeWindow xid, Gdk.DragProtocol protocol);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static Gdk.NativeWindow drag_get_protocol_for_display (Gdk.Display display, Gdk.NativeWindow xid, Gdk.DragProtocol protocol);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static Gdk.Atom drag_get_selection (Gdk.DragContext context);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool drag_motion (Gdk.DragContext context, Gdk.Window dest_window, Gdk.DragProtocol protocol, int x_root, int y_root, Gdk.DragAction suggested_action, Gdk.DragAction possible_actions, uint32 time_);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void drag_status (Gdk.DragContext context, Gdk.DragAction action, uint32 time_);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_arc (Gdk.Drawable drawable, Gdk.GC gc, bool filled, int x, int y, int width, int height, int angle1, int angle2);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_drawable (Gdk.Drawable drawable, Gdk.GC gc, Gdk.Drawable src, int xsrc, int ysrc, int xdest, int ydest, int width, int height);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_glyphs (Gdk.Drawable drawable, Gdk.GC gc, Pango.Font font, int x, int y, Pango.GlyphString glyphs);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_glyphs_transformed (Gdk.Drawable drawable, Gdk.GC gc, Pango.Matrix matrix, Pango.Font font, int x, int y, Pango.GlyphString glyphs);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_gray_image (Gdk.Drawable drawable, Gdk.GC gc, int x, int y, int width, int height, Gdk.RgbDither dith, [CCode (array_length = false)] uchar[] buf, int rowstride);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_image (Gdk.Drawable drawable, Gdk.GC gc, Gdk.Image image, int xsrc, int ysrc, int xdest, int ydest, int width, int height);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_indexed_image (Gdk.Drawable drawable, Gdk.GC gc, int x, int y, int width, int height, Gdk.RgbDither dith, [CCode (array_length = false)] uchar[] buf, int rowstride, Gdk.RgbCmap cmap);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_layout (Gdk.Drawable drawable, Gdk.GC gc, int x, int y, Pango.Layout layout);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_layout_line (Gdk.Drawable drawable, Gdk.GC gc, int x, int y, Pango.LayoutLine line);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_layout_line_with_colors (Gdk.Drawable drawable, Gdk.GC gc, int x, int y, Pango.LayoutLine line, Gdk.Color foreground, Gdk.Color background);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_layout_with_colors (Gdk.Drawable drawable, Gdk.GC gc, int x, int y, Pango.Layout layout, Gdk.Color foreground, Gdk.Color background);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_line (Gdk.Drawable drawable, Gdk.GC gc, int x1_, int y1_, int x2_, int y2_);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_lines (Gdk.Drawable drawable, Gdk.GC gc, Gdk.Point[] points);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_pixbuf (Gdk.Drawable drawable, Gdk.GC gc, Gdk.Pixbuf pixbuf, int src_x, int src_y, int dest_x, int dest_y, int width, int height, Gdk.RgbDither dither, int x_dither, int y_dither);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_point (Gdk.Drawable drawable, Gdk.GC gc, int x, int y);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_points (Gdk.Drawable drawable, Gdk.GC gc, Gdk.Point[] points);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_polygon (Gdk.Drawable drawable, Gdk.GC gc, bool filled, Gdk.Point[] points);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_rectangle (Gdk.Drawable drawable, Gdk.GC gc, bool filled, int x, int y, int width, int height);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_rgb_32_image (Gdk.Drawable drawable, Gdk.GC gc, int x, int y, int width, int height, Gdk.RgbDither dith, [CCode (array_length = false)] uchar[] buf, int rowstride);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_rgb_32_image_dithalign (Gdk.Drawable drawable, Gdk.GC gc, int x, int y, int width, int height, Gdk.RgbDither dith, [CCode (array_length = false)] uchar[] buf, int rowstride, int xdith, int ydith);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_rgb_image (Gdk.Drawable drawable, Gdk.GC gc, int x, int y, int width, int height, Gdk.RgbDither dith, [CCode (array_length = false)] uchar[] rgb_buf, int rowstride);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_rgb_image_dithalign (Gdk.Drawable drawable, Gdk.GC gc, int x, int y, int width, int height, Gdk.RgbDither dith, [CCode (array_length = false)] uchar[] rgb_buf, int rowstride, int xdith, int ydith);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_segments (Gdk.Drawable drawable, Gdk.GC gc, Gdk.Segment[] segs);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_text (Gdk.Drawable drawable, Gdk.Font font, Gdk.GC gc, int x, int y, string text, int text_length);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_text_wc (Gdk.Drawable drawable, Gdk.Font font, Gdk.GC gc, int x, int y, Gdk.WChar text, int text_length);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void draw_trapezoids (Gdk.Drawable drawable, Gdk.GC gc, Gdk.Trapezoid[] trapezoids);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void drop_finish (Gdk.DragContext context, bool success, uint32 time_);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void drop_reply (Gdk.DragContext context, bool ok, uint32 time_);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static int error_trap_pop ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void error_trap_push ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool events_pending ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void flush ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned Gdk.Font fontset_load_for_display (Gdk.Display display, string fontset_name);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void free_compound_text (uchar[] ctext);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void free_text_list (string list);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned Gdk.Window get_default_root_window ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned string get_display ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned string get_display_arg_name ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned string get_program_class ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool get_show_events ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void init ([CCode (array_length_pos = 0.9)] ref unowned string[] argv);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool init_check ([CCode (array_length_pos = 0.9)] ref unowned string[] argv);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void input_set_extension_events (Gdk.Window window, int mask, Gdk.ExtensionMode mode);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static Gdk.GrabStatus keyboard_grab (Gdk.Window window, bool owner_events, uint32 time_);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void keyboard_ungrab (uint32 time_);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void keyval_convert_case (uint symbol, uint lower, uint upper);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static uint keyval_from_name (string keyval_name);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool keyval_is_lower (uint keyval);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool keyval_is_upper (uint keyval);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned string keyval_name (uint keyval);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static uint keyval_to_lower (uint keyval);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static uint32 keyval_to_unicode (uint keyval);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static uint keyval_to_upper (uint keyval);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static GLib.List<weak Gdk.Visual> list_visuals ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void notify_startup_complete ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void notify_startup_complete_with_id (string startup_id);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned Gdk.Window? offscreen_window_get_embedder (Gdk.Window window);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned Gdk.Pixmap? offscreen_window_get_pixmap (Gdk.Window window);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void offscreen_window_set_embedder (Gdk.Window window, Gdk.Window embedder);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned Pango.Context pango_context_get ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned Pango.Context pango_context_get_for_screen (Gdk.Screen screen);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned Gdk.Region pango_layout_get_clip_region (Pango.Layout layout, int x_origin, int y_origin, int index_ranges, int n_ranges);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned Gdk.Region pango_layout_line_get_clip_region (Pango.LayoutLine line, int x_origin, int y_origin, int index_ranges, int n_ranges);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void parse_args (int argc, string argv);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned Gdk.Pixbuf pixbuf_get_from_drawable (Gdk.Pixbuf? dest, Gdk.Drawable src, Gdk.Colormap? cmap, int src_x, int src_y, int dest_x, int dest_y, int width, int height);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned Gdk.Pixbuf pixbuf_get_from_image (Gdk.Pixbuf? dest, Gdk.Image src, Gdk.Colormap? cmap, int src_x, int src_y, int dest_x, int dest_y, int width, int height);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void pixbuf_render_pixmap_and_mask (Gdk.Pixbuf pixbuf, out unowned Gdk.Pixmap pixmap_return, out unowned Gdk.Bitmap mask_return, int alpha_threshold);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void pixbuf_render_pixmap_and_mask_for_colormap (Gdk.Pixbuf pixbuf, Gdk.Colormap colormap, out unowned Gdk.Pixmap pixmap_return, out unowned Gdk.Bitmap mask_return, int alpha_threshold);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void pixbuf_render_threshold_alpha (Gdk.Pixbuf pixbuf, Gdk.Bitmap bitmap, int src_x, int src_y, int dest_x, int dest_y, int width, int height, int alpha_threshold);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static Gdk.GrabStatus pointer_grab (Gdk.Window window, bool owner_events, Gdk.EventMask event_mask, Gdk.Window? confine_to, Gdk.Cursor? cursor, uint32 time_);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool pointer_grab_info_libgtk_only (Gdk.Display display, out unowned Gdk.Window grab_window, bool owner_events);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool pointer_is_grabbed ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void pointer_ungrab (uint32 time_);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void pre_parse_libgtk_only ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void property_change (Gdk.Window window, Gdk.Atom property, Gdk.Atom type, int format, Gdk.PropMode mode, [CCode (array_length = false)] uchar[] data, int nelements);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void property_delete (Gdk.Window window, Gdk.Atom property);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool property_get (Gdk.Window window, Gdk.Atom property, Gdk.Atom type, ulong offset, ulong length, int pdelete, out Gdk.Atom actual_property_type, out int actual_format, [CCode (array_length_pos = 8.9)] out uchar[] data);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void query_depths (int depths, int count);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void query_visual_types (out Gdk.VisualType visual_types, int count);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static bool rgb_colormap_ditherable (Gdk.Colormap cmap);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static bool rgb_ditherable ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void rgb_find_color (Gdk.Colormap colormap, ref Gdk.Color color);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static unowned Gdk.Colormap rgb_get_colormap ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static unowned Gdk.Visual rgb_get_visual ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void rgb_set_install (bool install);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void rgb_set_min_colors (int min_colors);
	[CCode (cheader_filename = "gdk/gdk.h")]
	[Version (deprecated = true, deprecated_since = "2.22")]
	public static void rgb_set_verbose (bool verbose);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void set_double_click_time (uint msec);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned string set_locale ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned Gdk.PointerHooks set_pointer_hooks (Gdk.PointerHooks new_hooks);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void set_program_class (string program_class);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void set_show_events (bool show_events);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void set_sm_client_id (string sm_client_id);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool setting_get (string name, GLib.Value value);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool spawn_command_line_on_screen (Gdk.Screen screen, string command_line) throws GLib.Error;
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool spawn_on_screen (Gdk.Screen screen, string? working_directory, [CCode (array_length = false)] string[] argv, [CCode (array_length = false)] string[]? envp, GLib.SpawnFlags flags, GLib.SpawnChildSetupFunc? child_setup, out int child_pid) throws GLib.Error;
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool spawn_on_screen_with_pipes (Gdk.Screen screen, string? working_directory, [CCode (array_length = false)] string[] argv, [CCode (array_length = false)] string[] envp, GLib.SpawnFlags flags, GLib.SpawnChildSetupFunc? child_setup, out int child_pid, out int standard_input, out int standard_output, out int standard_error) throws GLib.Error;
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static int string_to_compound_text (string str, out Gdk.Atom encoding, int format, uchar[] ctext, int length);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static int string_to_compound_text_for_display (Gdk.Display display, string str, out Gdk.Atom encoding, int format, uchar[] ctext, int length);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void test_render_sync (Gdk.Window window);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool test_simulate_button (Gdk.Window window, int x, int y, uint button, Gdk.ModifierType modifiers, Gdk.EventType button_pressrelease);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool test_simulate_key (Gdk.Window window, int x, int y, uint keyval, Gdk.ModifierType modifiers, Gdk.EventType key_pressrelease);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static int text_property_to_text_list (Gdk.Atom encoding, int format, uchar[] text, int length, string list);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static int text_property_to_text_list_for_display (Gdk.Display display, Gdk.Atom encoding, int format, uchar[] text, int length, string list);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static int text_property_to_utf8_list (Gdk.Atom encoding, int format, uchar[] text, int length, string list);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static int text_property_to_utf8_list_for_display (Gdk.Display display, Gdk.Atom encoding, int format, uchar[] text, int length, string list);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static uint threads_add_idle (GLib.SourceFunc function);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static uint threads_add_idle_full (int priority, owned GLib.SourceFunc function);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static uint threads_add_timeout (uint interval, GLib.SourceFunc function);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static uint threads_add_timeout_full (int priority, uint interval, owned GLib.SourceFunc function);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static uint threads_add_timeout_seconds (uint interval, GLib.SourceFunc function);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static uint threads_add_timeout_seconds_full (int priority, uint interval, owned GLib.SourceFunc function);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void threads_enter ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void threads_init ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void threads_leave ();
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static void threads_set_lock_functions (GLib.Callback enter_fn, GLib.Callback leave_fn);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static uint unicode_to_keyval (uint32 wc);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool utf8_to_compound_text (string str, out Gdk.Atom encoding, int format, uchar[] ctext, int length);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static bool utf8_to_compound_text_for_display (Gdk.Display display, string str, out Gdk.Atom encoding, int format, uchar[] ctext, int length);
	[CCode (cheader_filename = "gdk/gdk.h")]
	public static unowned string utf8_to_string_target (string str);
}
