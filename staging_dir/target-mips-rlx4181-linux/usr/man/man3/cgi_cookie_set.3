.TH cgi_cookie_set 3 "12 July 2007" "ClearSilver" "cgi/cgi.h"

.de Ss
.sp
.ft CW
.nf
..
.de Se
.fi
.ft P
.sp
..
.SH NAME
cgi_cookie_set  - Set a browser Cookie
.SH SYNOPSIS
.Ss
#include <cgi/cgi.h>
.Se
.Ss
NEOERR *cgi_cookie_set (CGI *cgi, const char *name, const char *value, 
                        const char *path, const char *domain, 
                        const char *time_str, int persistent, int secure);

.Se

.SH ARGUMENTS
cgi - a CGI struct
.br
name - the name of the cookie
.br
value - the value to set the cookie to.  
.br
path - optional path for which the cookie is valid.  Default
.br
is /
.br
domain - optional domain for which the cookie is valid.  You
.br
can use cgi_cookie_authority to determine this
.br
domain.  Default is none, which is interpreted by
.br
the browser as the sending domain only.
.br
time_str - expiration time string in the following format

.SH DESCRIPTION
cgi_cookie_set will issue a Set-Cookie header that
should cause a browser to return a cookie when required.
Note this function does no escaping of anything, you
have to take care of that first.

HH:MM: SS GMT.  Only used if
persistent.  Default is one year from time of call.
persistent - cookie will be stored by the browser between sessions
secure - cookie will only be sent over secure connections

.SH "RETURN VALUE"
None

.SH "SEE ALSO"
.BR cgi_debug_init "(3), "cgi_parse "(3), "cgi_destroy "(3), "cgi_js_escape "(3), "cgi_html_escape_strfunc "(3), "cgi_register_strfuncs "(3), "cgi_output "(3), "parse_rfc2388 "(3), "cgi_url_validate "(3), "open_upload "(3), "cgi_cs_init "(3), "cgi_url_escape_more "(3), "cgi_html_strip_strfunc "(3), "cgi_neo_error "(3), "cgi_redirect "(3), "cgi_filehandle "(3), "cgi_register_parse_cb "(3), "cgi_url_escape "(3), "cgi_init "(3), "cgi_redirect_uri "(3), "cgi_cookie_clear "(3), "cgi_url_unescape "(3), "cgi_vredirect "(3), "cgi_display "(3), "cgi_html_ws_strip "(3), "cgi_error "(3), "cgi_cookie_set "(3), "cgi_text_html_strfunc "(3), "cgi_cookie_authority
