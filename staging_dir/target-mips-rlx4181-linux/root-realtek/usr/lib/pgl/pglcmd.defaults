# pglcmd.defaults - default configuration file for pglcmd

# This file is sourced by a shell script. Any line which starts with a hash (#)
# is a comment and is ignored.

# This file sets sane defaults for pglcmd, so do not modify it.
# Write your changes to pglcmd.conf (/etc/pgl/pglcmd.conf)
# instead.

################################ Paths and names ###############################

# PATH and paths.
PATH="/usr/bin:/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin"
BINDIR="/usr/bin"
SBINDIR="/usr/sbin"
PIDDIR="/var/run"
LOGDIR="/var/log/pgl"
CONFDIR="/etc/pgl"
LIBDIR="/usr/lib/pgl"
TMPDIR="/tmp"

# The description.
DESC="PeerGuardian Linux"
# The version.
VERSION="2.2.2"

# The name, pathname, pidfile and logfile of the daemon.
NAME="pgld"
DAEMON="${SBINDIR}/${NAME}"
PIDFILE="${PIDDIR}/${NAME}.pid"
DAEMON_LOG="${LOGDIR}/${NAME}.log"

# The name, pathname and logfile of the command line interface.
CMD_NAME="pglcmd"
CMD_PATHNAME="${BINDIR}/${CMD_NAME}"
CMD_LOG="${LOGDIR}/${CMD_NAME}.log"

# The pathname and pidfile of the watchdog.
WD_PATHNAME="${SBINDIR}/${CMD_NAME}.wd"
WD_PID="${PIDDIR}/$(basename $WD_PATHNAME).pid"

# The cmd library pathname.
CMD_LIB="${LIBDIR}/${CMD_NAME}.lib"

# The path to the user configuration
CMD_CONF="${CONFDIR}/${CMD_NAME}.conf"

# The path of the local blocklist dir.
# All blocklists in the LOCAL_BLOCKLIST_DIR directory (except those in
# subdirectories, or which end in "~" or start with ".") are used.
# Spaces in listnames are not allowed.
LOCAL_BLOCKLIST_DIR="/etc/pgl/blocklists.local"

# The path of blocklists.list.
# There you can specify URLs and paths of the remote blocklists that you want to
# use.
BLOCKLISTS_LIST="${CONFDIR}/blocklists.list"

# The path of the directory where the blocklists are downloaded and manipulated.
BLOCKLISTS_DIR="/var/spool/pgl"

# The path of the master blocklist dir.
MASTER_BLOCKLIST_DIR="/var/lib/pgl"

# The pathname of the master blocklist.
# All single local and remote blocklists are merged in this list by pglcmd. pgld
# is then started with only this blocklist spcified.
MASTER_BLOCKLIST="${MASTER_BLOCKLIST_DIR}/master_blocklist.p2p"

# The path to the allow lists
# Note that per default the same allow list is used for all input and output
# connections, and is disabled for forward.
# The path to the allow list for incoming connections
ALLOW_IN="${CONFDIR}/allow.p2p"
# The path to the allow list for outgoing connections
ALLOW_OUT="${CONFDIR}/allow.p2p"
# The path to the allow list for forwarded connections.
# WARNING: Don't add your own IP / LAN to the forward allow list or pgl will not
# work at all for FORWARD.
ALLOW_FWD=""

# The directory of the custom iptables scripts.
# All files in this directory, that end in insert.sh/remove.sh will be executed
# on "pglcmd start/stop", if IPTABLES_SETTINGS is 1 or 2.
IPTABLES_CUSTOM_DIR="${CONFDIR}"

# The path of the file with the md5sum of all blocklist configurations
MD5SUM_FILE="$BLOCKLISTS_DIR/MD5SUM"

# The path of the LSB init-functions.
# If LSB file does not exist or variable is set to an empty value, pglcmd's
# builtin LSB init functions are used.
LSB=""

# The name of the sendmail executable, a link pointing there, or any other
# compatible mail transfer agent.
SENDMAIL="sendmail"

# The name of the traceroute executable, a link pointing there, or any other
# compatible application.
TRACEROUTE="tcptraceroute"

# The port traceroute uses (leave empty if you use traditional traceroute)
TRACEROUTE_PORT="12345"

# Remember standard IFS (Internal Field Separator)
STDIFS=$IFS

############################ General configuration ############################

# Turn on/off automatic start.
# ignore this on Gentoo
# Note: this tells the init script not to start pgl on "start".
# The same behaviour can be achieved by removing/tweaking the init file and the
# links pointing to it. You can do this manually or by using an application such
# as rcconf.
# 0 - Don't start pgl at system boot
# 1 - Start pgl at system boot
INIT="1"

# Turn on/off automatic blocklist update.
# 0 - Don't update the blocklists automatically
# 1 - Update the blocklists automatically
CRON="1"

# Turn on/off pglcmd.wd.
# 0 - Don't use watchdog
# 1 - Start watchdog
WD="1"

# Set the interval in seconds in which pglcmd.wd checks if the blocking works.
# Don't choose a too low value! Or the watchdog will think the daemon is not
# working, although the daemon is just still busy with loading the blocklist
# after a start.
WD_SLEEP="300"

# Set the nice level the watchdog is started with. Valid values are between -20
# and 19. Higher values make the watchdog more friendly to other applications.
# Note: This variable is applied by the LSB init functions. pglcmd's builtin and
# Debian's functions use the nicelevel, but Redhat's use the adjustment of the
# nicelevel (since the default nice level is 0, this normally has the same
# effect. More important, Redhat's functions require to specify a "+" for
# positive values, while this can be omitted for the internal and Debian's.
# See nice(1) and renice(1).
WD_NICE="+19"

# Set the nice level the daemon is started with. Valid values are between -20
# and 19. Higher values make the daemon more friendly to other applications, but
# might have drawbacks on its own functionality.
# See the note on WD_NICE above.
NICE_LEVEL="+0"

# You may specify additional options for wget for the blocklist download here.
# Note: In this variable the download application (wget) must be contained! Some
# options are hardcoded in pglcmd.lib and so are not changeable here.
# The default options make sure that pglcmd plays nice with the list
# servers.
# For example you may specify a proxy:
# WGET_OPTS="env http_proxy=URL wget -q -t 5 -T 120 -w 5 --user-agent=${CMD_NAME}/${VERSION}"
WGET_OPTS="wget -q -t 5 -T 120 -w 5 --user-agent=${CMD_NAME}/${VERSION}"

# Try to download this site before blocklist updates.
# If this fails, pglcmd assumes that there is no network available, and thus
# aborts the update. The default configured site is also used to determine the
# user friendly blocklist names for iblocklist.com URLs.
TESTHOST="http://www.iblocklist.com/lists.xml"

################## Settings for the iptables firewall rules ###################

# pgld checks traffic in userspace.
# Iptables rules decide which traffic gets there.

# Set how traffic is sent to pgld.
# 0 - Don't set any iptables rules.
#     You or another script/firewall has to do this!
# 1 - Place the iptables rules in separate iptables chains.
#     Afterwards the custom iptables scripts will be executed (if they exist).
# 2 - Only set custom iptables rules
#     (/etc/pgl/iptables-custom-insert.sh and
#     /etc/pgl/iptables-custom-remove.sh)
IPTABLES_SETTINGS="1"

# pgl can check all network interfaces or only a few of them.
# If you want pgl to work on all interfaces set "all" or just keep it empty.
# Otherwise specify the network interfaces (e.g. "eth0 wlan").
# Separate several entries with whitespace (" "). Be careful: senseless values
# are also accepted.
INTERFACES="all"

# pgl can check all iptables chains or only a few of them.
# If you want pgl to work on all chains set "all" or just keep it empty.
# Otherwise specify the chains (e.g. "INPUT OUTPUT").
# Separate several entries with whitespace (" "). Be careful: senseless values
# are also accepted.
CHAINS="all"

# Set names for the separate iptables chains.
IPTABLES_IN="pgl_in"
IPTABLES_OUT="pgl_out"
IPTABLES_FWD="pgl_fwd"

# Activate the iptables chains?
# This section works only for IPTABLES_SETTINGS="1"
# 0 - Do nothing. You or another script/firewall has to do this!
# 1 - Send all NEW traffic to the separate iptables chains.
#     These activation iptables rules are inserted at the head of the chains
#     INPUT, OUTPUT and FORWARD. It is safe to only check NEW traffic.
# 2 - Send all traffic to the separate iptables chains.
#     These activation iptables rules are inserted at the head of the chains
#     INPUT, OUTPUT and FORWARD. Checking all (not only NEW) traffic might cause
#     problems, because pgld has to check much more traffic then.
#     Further, whitelisting gets more complicated, since you have to think of
#     both directions, incoming and outgoing. Only do this, if you are sure that
#     you want to.
IPTABLES_ACTIVATION="1"

# Set the iptables target for sending traffic to userspace.
# NFQUEUE - available since kernel version 2.6.13
# QUEUE   - (deprecated)
IPTABLES_TARGET="NFQUEUE"

# Set the NFQUEUE queue number.
# Valid queue numbers are 0 to 65535.
NFQUEUE_NUMBER="92"

# Set what happens to matched packets (IP is in the blocklist).
# 0 - DROP them directly (as in MoBlock 0.8).
# 1 - MARK them. Further iptables rules decide what happens to them. E.g. this
#     allows to REJECT packets to avoid the long timeout, which occurs when
#     packets are DROPped, see below. This setting is also necessary for
#     iptables logging to syslog, see below.
REJECT="1"

# Set the corresponding MARK
REJECT_MARK="10"

# Set the iptables target for "marked block" packets.
# This section works only for IPTABLES_ACTIVATION="1" and REJECT="1".
# Valid values are all iptables targets. Be careful: senseless values are also
# accepted.
# REJECT: The sender of the packet is notified that the packet was blocked.
# DROP: The sender of the packet is not notified that the packet was blocked.
REJECT_IN="DROP"
REJECT_OUT="REJECT"
REJECT_FWD="DROP"

# Set what happens to non-matched packets (IP is not in the blocklist).
# 0 - ACCEPT them directly (as in MoBlock 0.8)
# 1 - MARK them. pgl will then ignore them. This allows an integration with
#     other firewalls.
ACCEPT="1"

# Set the corresponding MARK
ACCEPT_MARK="20"

# Set the iptables target for whitelisting packets.
# Valid values are all iptables targets. Be careful: senseless values are also
# accepted.
# ACCEPT: The packets are accepted directly.
# RETURN: Further iptables rules decide what happens to the packets. The IP
#         block daemon will ignore them. This allows an integration with other
#         firewalls.
IPTABLES_TARGET_WHITELISTING="RETURN"

# Automatically whitelist traffic
# 0 - No automatic whitelisting.
# 1 - Automatic whitelisting of LAN and DNS server and loopback device.
# 2 - Automatic whitelisting of DNS server and loopback device.
WHITE_LOCAL="1"

############################### Whitelist ports ###############################

# Whitelist ports (traffic on these ports will not be checked)
# Valid values: port numbers or service names. Port ranges are specified in the
# format "port:port".
# Common ports - service names:
#   80 - http
#  443 - https
#   22 - ssh
#  993 - SSL IMAP
# Separate several entries with whitespace (" ")
# Technical implementation: iptables rules in the corresponding iptables chains,
# matching protocol and --sport/dport PORT, target IPTABLES_TARGET_WHITELISTING.
# This section works only for IPTABLES_SETTINGS="1"
# Do a "pglcmd restart" when you have changed these settings.

WHITE_TCP_IN=""
WHITE_UDP_IN=""
WHITE_TCP_OUT=""
WHITE_UDP_OUT=""
WHITE_TCP_FWD=""
WHITE_UDP_FWD=""
# This is an example to whitelist outgoing web traffic:
# WHITE_TCP_OUT="http https"
# This is an example to whitelist the port range 1000-1024:
# WHITE_TCP_OUT="1000:1024"

################################ Whitelist IPs ################################

# Possibility 1:
# You can specify IP ranges that shall not be checked by pgl in a separate file.
# Per default this is /etc/pgl/allow.p2p. Change the ALLOW_[IN|OUT|FWD]
# variables if you want to use different allow lists for incoming, outgoing and
# forwarded traffic.
# DEPRECATION WARNING: This will be changed to use the same allow list for all
# directions. The underlying technical change is that currently the IP ranges
# from the allow lists get whitelisting iptables rules, but the planned new
# implementation is that these IP ranges get removed from the blocklist.

# Possibility 2:
# Whitelist IPs (traffic from/to these IPs will not be checked)
# Valid values: plain IPs or network IP addresses (with /mask). The mask can
# be either a network mask or a plain number, specifying the number of 1's at
# the left side of the network  mask. Thus, a mask of 24 is equivalent to
# 255.255.255.0.
# Separate several entries with whitespace (" ")
# Technical implementation: iptables rules in the corresponding iptables chains,
# matching --source/destination IP, target IPTABLES_TARGET_WHITELISTING.
# This section works only for IPTABLES_SETTINGS="1"
# Do a "pglcmd restart" when you have changed these settings.

WHITE_IP_IN=""
WHITE_IP_OUT=""
WHITE_IP_FWD=""

###################### Remove lines from the blocklist ########################

# Remove lines from the blocklist matching the specified pattern (the search
# pattern is case-insensitive).
# Separate patterns with a semicolon ";". Be careful: senseless values are also
# accepted.
# Warning for beginners: If you want to whitelist a special IP then use the
# allowlist. If you specify an IP here you will most likely fail.
#
# Do a "pglcmd reload" when you have changed these settings.

IP_REMOVE=""
# This is an example to remove all lines from the blocklist which contain one
# of the words "google", "yahoo", "altavista", "debian" or "sourceforge":
# IP_REMOVE="google;yahoo;altavista;debian;sourceforge"


######################## Logging and verbosity settings ########################

# Turn on/off pgld's logging to syslog
# 0 - Don't log to syslog
# 1 - Log to syslog
LOG_SYSLOG="0"

# Turn on/off pgld's logging to logfile
# 0 - Don't log to logfile
# 1 - Log to logfile
LOG_LOGFILE="1"

# Iptables logging of blocked packets
# Set an iptables target for blocked packets. This will only work if marking
# matched (IP is in the blocklist) packets is on (i.e. REJECT="1").
# The iptables rules will be inserted directly before the iptables rule which
# decides what happens to "marked block" packets.
# Examples:
# "" (empty string): no rule will be inserted
# "LOG --log-level info": blocked packets will be logged to syslog with "info"
#     log level. This allows to find out e.g. the port and to verify if a packet
#     is really blocked and not just "marked block".
LOG_IPTABLES=""

# Set the verbosity of pglcmd
# This only affects the output to STDOUT by pglcmd, cron and init.
# This does not affect logging or the output of the daemon.
# 0 - Output to STDOUT is off (only errors will be reported)
# 1 - Output to STDOUT is on
# 2 - Output to STDOUT is on, but no warning will be shown if an operation is
#     configured not to be executed.
VERBOSE="1"

# Email the result of the automatic (cron) blocklist update.
# Specify the mail recipient.
# If not set, cron will decide what happens with the output.
CRON_MAILTO="root"

# Email stats daily and on every stop/restart (except on system shutdown).
# Specify the mail recipient. If not set, stats will not be emailed.
STATS_MAILTO=$CRON_MAILTO

# Email if watchdog detects a problem.
# Specify the mail recipient. If not set, no notification will be emailed.
WD_MAILTO=$CRON_MAILTO

# Use D-Bus in pgld and pglcmd. Required for pglgui.
# 0 - Do NOT use D-Bus
# 1 - Use D-Bus
DBUS="0"

# Exit Status Codes
# TODO: Rework exit status to LSB conformance:
# In case of an error while processing any init-script action except for
# status, the init script shall print an error message and exit with a
# non-zero status code:
#
# 1     generic or unspecified error (current practice)
# 2     invalid or excess argument(s)
# 3     unimplemented feature (for example, "reload")
# 4     user had insufficient privilege
# 5     program is not installed
# 6     program is not configured
# 7     program is not running
# 8-99  reserved for future LSB use
# 100-149   reserved for distribution use
# 150-199   reserved for application use
# 200-254   reserved
E_BADARGS="2"   # invalid or excess argument(s)
E_NOTROOT="4"   # user had insufficient privilege
E_XBIN="5"      # program is not installed
E_CONFIG="6"    # program is not configured
E_XFILE="7"     # Missing file TODO 177
E_XCD="66"      # No directory TODO 176
E_IPTABLES="8"  # TODO
E_BLOCKLIST="9" # TODO
E_XEXTERNAL="170"    # Missing external binary/function
E_NETWORK_DOWN="171" # Testhost not reachable
