#
#   appweb.conf -- Appweb configuration for Ejscript
#   
#   This configuration file controls the operation of the Appweb server. The 
#   order of configuration directives matters as this file is parsed only once.
#   You must put the server root and error log definitions first to ensure 
#   configuration errors are logged.
#

#
#   Define the logging configuration first so any errors are logged
#
<if LOG>
    #
    #   Log all Appweb errors and trace to this file. This is the error 
    #   file for the whole server including all virtual hosts. 
    #
    ErrorLog "error.log"

    #
    #   The log level can be a number between 0 and 9 (most verbose level).
    #
    LogLevel 2
</if>

<if ACCESS_LOG>
    #
    #   Define the log format for the access log.
    #
    #   CustomLog "access.log" "%h %l %u %t \"%r\" %>s %b"
</if>

#
#   Root directory for Appweb to find necessary files and libraries. 
#   Appweb will change directory to this location when it runs.
#
#   ServerRoot "/usr/lib/ejs"

#
#   Bind Appweb to listen for incoming requests on this address. Formats 
#   include (IP, IP:PORT, PORT). If an IP address is omitted, Appweb will 
#   listen on all interfaces. If a port is omitted, then port 80 is used.
#   Use [::]:port for IPv6 to bind to all addresses. [::1] is the IPv6 loopback.
#
Listen 4000

#
#   Name of the server to use for redirects and error responses to clients. 
#   Uncomment this line and replace it with the public name of your server. 
#   This host name and port do not get used for listening on sockets. If 
#   unspecified, Appweb will use the IP address for the host name.
#
#   ServerName http://localhost:9997

#
#   Location for documents for the primary server host. Virtual hosts 
#   may define their own DocumentRoot directives.
#
DocumentRoot "default-web"

#
#   Default directory index to serve when a directory is requested.
#
DirectoryIndex index.html

#
#   Location of the mime translation file to map content types to file 
#   extensions. For other types, you can use AddType.  
#   "AddType application/x-appweb-other other"
#
TypesConfig mime.types

#
#   Search path for dynamically loadable modules. If modules have been 
#   statically linked into Appweb, this directive and LoadModule directives
#   will be ignored. This directive must be before any LoadModule directives.
#
#	LoadModulePath "."

#
#   Notes on the request processing pipeline. The pipeline consists of a set 
#   of stages comprised of a handler, possible filters and one network 
#   connector. 
#
#   The request processing pipeline can be configured at various levels: 
#   globally, virtual hosts and location blocks. At each level, a set of 
#   processing stages can be defined. Inner levels inherit the pipeline from 
#   the outer levels. The pipeline can be reset at a level by using 
#   ResetPipeline. Each stage may be defined for all requests or only for a 
#   specific file extension or location path prefix.
#
#   The pipeline is defined with the network connector first and the handler 
#   last. If you use the AddConnector, AddFilter or AddHandler directives, the 
#   stage is defined for both input and output processing. For filters you can
#   use AddInputFilter AddOutputFilter directives to define for a single 
#   direction.
#
#   Define the network connector first. This must be before all handlers and 
#   filters. The network connector will transparently use the send connector 
#   for static file data.
#
#   Multiple handlers can be defined, but only the first matching handler will
#   be activated when a request is processed.
#
SetConnector netConnector

<if AUTH_MODULE>
    LoadModule authFilter mod_auth
    #
    #   The auth filter must be first in the pipeline before all handlers and
    #   after the connector definition. Only needed on the output pipeline.
    #
    AddOutputFilter authFilter
</if>

#
#   Add other filters. Order matters. Chunking must be last.
#
<if RANGE_MODULE>
    LoadModule rangeFilter mod_range
    AddOutputFilter rangeFilter
</if>
<if CHUNK_MODULE>
    LoadModule chunkFilter mod_chunk
    AddOutputFilter chunkFilter
</if>


<if DIR_MODULE>
    LoadModule dirHandler mod_dir
    AddHandler dirHandler

    #
    #   Directory listings
    #
    Options Indexes
    IndexOrder ascending name
    IndexOptions FancyIndexing FoldersFirst
</if>

<if EJS_MODULE>
    LoadModule ejsHandler mod_ejs
    AddHandler ejsHandler .ejs

    #
    #   Send errors to user's browser. Change to "browser" to "log" for 
    #   production systems.
    #
    EjsErrors browser

    #
    #   Auto create sessions for EJS
    #
    EjsSession on

    #
    #   Default session timeout (30 mins in seconds)
    #
    EjsSessionTimeout 1800

    <Location /ejs/>
        #
        #   Directory for stand alone ejs scripts (not apps)
        #
        SetHandler ejsHandler
    </Location>

    #
    #   To define Ejs Applications, add an EjsAppAlias directive
    #   This should be put into a separate config file per app under conf/apps
    #
    #   EjsAppAlias  /myApp/    /Users/jim/myApp
    #

    #
    #   Long way to define an ejs appliction
    #
    #   <Location /myApp/>
    #       SetHandler          ejsHandler
    #       EjsApp              on
    #       EjsSession          off 
    #       EjsSessionTimeout   60
    #       Alias /myApp/       /Users/jim/myApp/
    #   </Location>

</if>

<if UPLOAD_MODULE>
    LoadModule uploadFilter mod_upload
    UploadDir /tmp
    UploadAutoDelete on
    #
    #   For URLs that begin with "/upload/"
    #
    <Location /upload/>
        AddInputFilter uploadFilter
    </Location>
</if>

#
#   The file handler supports requests for static files. Put this last after
#   all other modules and it becomes the catch-all due to the empty quotes.
#
<if FILE_MODULE>
    LoadModule fileHandler mod_file
    AddHandler fileHandler .html .gif .jpeg .png .pdf ""
</if>

DirectoryIndex index.html

#
#   Send and receive inactivity timeout to close an idle TCP/IP connection
#
Timeout 60

#
#   Define persistent connections where one TCP/IP connection may serve
#   multiple HTTP requests. (A definite performance boost)
#
KeepAlive on

#
#   Number of seconds to wait for the next HTTP request before closing 
#   the TCP/IP connection.
#
KeepAliveTimeout 60

#
#   Number of HTTP requests to accept on a single TCP/IP connection
#   Reduce this number to minimize the chance of DoS attacks.
#
MaxKeepAliveRequests 200

#
#   Maximum number of threads if built multi-threaded. Set to 0 for single-threaded
#   
#
ThreadLimit 4

#
#   Maximum number of simultaneous clients. This is not the number of client sessions.
#
LimitClients 20

#
#   Maximum size of the maximum request content body (bytes)
#  
LimitRequestBody 4194304

#
#   Maximum number of request header fields 
#  
LimitRequestFields 512  

#
#   Maximum size of request header fields 
#  
LimitRequestFieldSize 1048576

#
#   Maximum size of the maximum response body (bytes)
#  
LimitResponseBody 104857600

#
#   Maximum buffer size for pipeline stages
#
LimitStageBuffer 8192

#
#   Maximum response chunk size
#
LimitChunkSize 8192

#
#   Maximum URL size
#
LimitUrl 30000

#
#   Other tunable parameters
#
#   StartThreads 4
#   ThreadStackSize 65536


Group nogroup
User nobody
#
#   Other useful Directives
#
#   ErrorDocument 404 /notFound.html
#   TraceMethod on
#
#   Redirect temp /pressRelease.html /fixedPressRelease.html
#   Redirect 410 /membersOnly 
#

Include apps/*
