<%
local sys = require "luci.sys"
local twa = require "luci.tools.webadmin"

-- System
local model, system, memtotal, memcached, membuffers, memfree, bogomips = sys.sysinfo()
local uptime = twa.date_format(tonumber(sys.uptime()))
local time = os.date("%a, %d %b %Y, %H:%M:%S")
local load1, load5, load15 = sys.loadavg()
local load = string.format("%.2f, %.2f, %.2f", load1, load5, load15)

local mem = string.format(
	"%.2f MB (%.2f %s, %.2f %s, %.2f %s, %.2f %s)",
	tonumber(memtotal) / 1024,
	tonumber(memtotal - memfree) / 1024,
	tostring(i18n.translate("used")),
	memfree / 1024,
	tostring(i18n.translate("free")),
	memcached / 1024,
	tostring(i18n.translate("cached")),
	membuffers / 1024,
	tostring(i18n.translate("buffered"))
)

-- update interval
local bogomips = bogomips or 100
local interval = 10
if bogomips > 350 then
	interval = 5
end

-- wireless
local ntm = require "luci.model.network".init()
local devices  = ntm:get_wifidevs()
local netlist = { }
local netdevs = { }
local dev
for _, dev in ipairs(devices) do
	local net
	for _, net in ipairs(dev:get_wifinets()) do
		netlist[#netlist+1] = net:ifname()
		netdevs[net:ifname()] = dev:name()
	end
end
local has_iwinfo = pcall(require, "iwinfo")

-- Routes
local defroutev4 = sys.net.defaultroute()
local defroutev6 = sys.net.defaultroute6()

if defroutev4 then
	defroutev4.dest = defroutev4.dest:string()
	defroutev4.gateway = defroutev4.gateway:string()
else
	-- probably policy routing activated, try olsr-default table
	local dr4 = sys.exec("ip r s t olsr-default")
	if dr4 then
		defroutev4 = { }
		defroutev4.dest, defroutev4.gateway, defroutev4.device, defroutev4.metric = dr4:match("^(%w+) via (%d+.%d+.%d+.%d+) dev ([%w-]+) +metric (%d+)")
	end
end

if defroutev6 then
	defroutev6.dest = defroutev6.dest:string()
	defroutev6.nexthop = defroutev6.nexthop:string()
end

if luci.http.formvalue("status") == "1" then
	local rv = { }
	for dev in pairs(netdevs) do
		local j = { id = dev }
		local iw = luci.sys.wifi.getiwinfo(dev)
		if iw then
			local f
			for _, f in ipairs({
				"channel", "txpower", "bitrate", "signal", "noise",
				"quality", "quality_max", "mode", "ssid", "bssid", "encryption", "ifname"
			}) do
				j[f] = iw[f]
			end
		end
		rv[#rv+1] = j
	end

	if defroutev6 then
		def6 = {
			gateway = defroutev6.nexthop,
			dest = defroutev6.dest,
			dev = defroutev6.device,
			metr = defroutev6.metric
		}
	end

	if defroutev4 then
		def4 = {
			gateway = defroutev4.gateway,
			dest = defroutev4.dest,
			dev = defroutev4.device,
			metr = defroutev4.metric
		}
	end

	rv[#rv+1] = {
		time = time,
		uptime = uptime,
		load = load,
		mem = mem,
		defroutev4 = def4,
		defroutev6 = def6
	}

	luci.http.prepare_content("application/json")
	luci.http.write_json(rv)
	return
end
-%>

<%+header%>

<script type="text/javascript" src="<%=resource%>/cbi.js"></script>

<script type="text/javascript">//<![CDATA[
	 XHR.poll(<%=interval%> , '<%=REQUEST_URI%>', { status: 1 },
		function(x, st)
		{
			if (st)
			{
				for( var i = 0; i < st.length; i++ )
				{
					var iw = st[i];
					var is_assoc = (iw.bssid && iw.channel);
					var p = (100 / iw.quality_max * iw.quality);
					var q = is_assoc ? p : -1;

					var icon;
					if (q < 0)
						icon = "<%=resource%>/icons/signal-none.png";
					else if (q == 0)
						icon = "<%=resource%>/icons/signal-0.png";
					else if (q < 25)
						icon = "<%=resource%>/icons/signal-0-25.png";
					else if (q < 50)
						icon = "<%=resource%>/icons/signal-25-50.png";
					else if (q < 75)
						icon = "<%=resource%>/icons/signal-50-75.png";
					else
						icon = "<%=resource%>/icons/signal-75-100.png";

					var power = document.getElementById(iw.id + '-txpower');
					if (power)
						power.innerHTML = String.format('%s dbm', iw.txpower);

					var signal = document.getElementById(iw.id + '-signal');
					if (signal)
						signal.innerHTML = String.format(
							'<img src="%s" title="Signal: %s db / Noise: %s db" alt="Signal Quality" />',
							icon, iw.signal, iw.noise
						);

					var bitrate = document.getElementById(iw.id + '-bitrate');
					if (bitrate)
						bitrate.innerHTML = String.format('%s Mb/s', iw.bitrate ? iw.bitrate / 1000 : '?');

					var ssid = document.getElementById(iw.id + '-ssid');
					if (ssid)
						ssid.innerHTML = iw.ssid;

					var bssid = document.getElementById(iw.id + '-bssid');
					if (bssid)
						bssid.innerHTML = iw.bssid;

					var channel = document.getElementById(iw.id + '-channel');
					if (channel)
						channel.innerHTML = iw.channel;

					var mode = document.getElementById(iw.id + '-mode');
					if (mode)
					mode.innerHTML = iw.mode;
				}

				i = st.length - 1
				var u

				if (u = document.getElementById('dynuptime'))
					u.innerHTML = st[i].uptime;

				if (u = document.getElementById('dynload'))
					u.innerHTML = st[i].load;

				if (u = document.getElementById('dynmem'))
					u.innerHTML = st[i].mem;

				if (u = document.getElementById('dyntime'))
					u.innerHTML = st[i].time;

				if (st[i].defroutev4)
				{
					if (u = document.getElementById('v4dst'))
						u.innerHTML = st[i].defroutev4.dest;

					if (u = document.getElementById('v4gw'))
						u.innerHTML = st[i].defroutev4.gateway;

					if (u = document.getElementById('v4dev'))
						u.innerHTML = st[i].defroutev4.dev;

					if (u = document.getElementById('v4metr'))
						u.innerHTML = st[i].defroutev4.metr;
				}

				if (st[i].defroutev6)
				{
					if (u = document.getElementById('v6dst'))
						u.innerHTML = st[i].defroutev6.dest;

					if (u = document.getElementById('v6gw'))
						u.innerHTML = st[i].defroutev6.gateway;

					if (u = document.getElementById('v6dev'))
						u.innerHTML = st[i].defroutev6.dev;

					if (u = document.getElementById('v6metr'))
						u.innerHTML = st[i].defroutev6.metr;
				}
			}
		}
	);
//]]></script>

<div class="cbi-map">
	<h2><%:System%></h2>
	<div class="cbi-section-node">
		<div class="cbi-value"><label class="cbi-value-title"><%:System%></label><div class="cbi-value-field"><%=system%></div></div>
		<div class="cbi-value"><label class="cbi-value-title"><%:Processor%></label><div class="cbi-value-field"><%=model%></div></div>
		<div class="cbi-value"><label class="cbi-value-title"><%:Load%></label><div class="cbi-value-field" id="dynload"><%=load%></div></div>
		<div class="cbi-value"><label class="cbi-value-title"><%:Memory%></label><div class="cbi-value-field" id="dynmem"><%=mem%></div></div>
		<div class="cbi-value"><label class="cbi-value-title"><%:Local Time%></label><div class="cbi-value-field" id="dyntime"><%=time%></div></div>
		<div class="cbi-value"><label class="cbi-value-title"><%:Uptime%></label><div class="cbi-value-field" id="dynuptime"><%=uptime%></div></div>
	</div>
</div>

<% if devices[1] then %>

<div class="cbi-map">
	<h2><%:Wireless Overview%></h2>

		<% if not has_iwinfo then %>
			<div class="errorbox">
				<strong><%:Package libiwinfo required!%></strong><br />
				<%_The <em>libiwinfo</em> package is not installed. You must install this component for working wireless configuration!%>
			</div>
		<% end %>

		<div class="cbi-section">
			<div class="cbi-section-node">
				<table class="cbi-section-table">
					<tr class="cbi-section-table-titles">
						<th class="cbi-section-table-cell"><%:Signal%></th>
						<th class="cbi-section-table-cell"><%:Bitrate%></th>
						<th class="cbi-section-table-cell"><%:SSID%></th>
						<th class="cbi-section-table-cell"><%:BSSID%></th>
						<th class="cbi-section-table-cell"><%:Channel%></th>
						<th class="cbi-section-table-cell"><%:Mode%></th>
						<th class="cbi-section-table-cell"><%:TX%>-<%:Power%></th>
						<th class="cbi-section-table-cell"><%:Interface%></th>
					</tr>
	<%
	for _, dev in ipairs(devices) do
	local net
		for _, net in ipairs(dev:get_wifinets()) do
			netlist[#netlist+1] = net:ifname()
			netdevs[net:ifname()] = dev:name()

			if net.iwdata.device then
				local signal = net.iwinfo.signal or "N/A"
				local noise = net.iwinfo.noise or "N/A"
				local q = net.iwinfo.quality or "0"
				local qmax = net.iwinfo.quality_max or "100"
				local qperc = q / qmax * 100

				if qperc == 0 then
					icon = "signal-none.png"
				elseif qperc < 26 then
					icon = "signal-0-25.png"
				elseif qperc < 51 then
					icon = "signal-25-50.png"
				elseif qperc < 76 then
					icon = "signal-50-75.png"
				elseif qperc < 100 then
					icon = "signal-75-100.png"
				else
					icon = "signal-0.png"
				end

				signal_string = "<img src='"..resource.."/icons/"..icon.."' title='Signal: "..signal.." db / Noise: "..noise.." db' alt='Signal Quality'></img>"

				local ssid = net.iwinfo.ssid or "N/A"
				local bssid = net.iwinfo.bssid or "N/A"
				local chan = net.iwinfo.channel or "N/A"
				local mode = net.iwinfo.mode or "N/A"
				local txpwr = net.iwinfo.txpower or "N/A"
				if txpwr ~= "N/A" then
					txpwr = txpwr.." dbm"
				end
				local bitrate = net.iwinfo.bitrate or "N/A"
				if bitrate ~= "N/A" then
					bitrate = ( bitrate / 1000 ).."Mb/s"
				end
				local interface = net.iwdata.ifname or "N/A"
	%>
						<tr class="cbi-section-table-row cbi-rowstyle-1">
						<td class="cbi-value-field" id="<%=net:ifname()%>-signal"><%=signal_string%></td>
						<td class="cbi-value-field" id="<%=net:ifname()%>-bitrate"><%=bitrate%></td>
						<td class="cbi-value-field" id="<%=net:ifname()%>-ssid"><%=ssid%></td>
						<td class="cbi-value-field" id="<%=net:ifname()%>-bssid"><%=bssid%></td>
						<td class="cbi-value-field" id="<%=net:ifname()%>-channel"><%=chan%></td>
						<td class="cbi-value-field" id="<%=net:ifname()%>-mode"><%=mode%></td>
						<td class="cbi-value-field" id="<%=net:ifname()%>-txpower"><%=txpwr%></td>
						<td class="cbi-value-field"><%=interface%></td>
					</tr>
			<% end
		end
	end %>
			</table>
		</div>
	</div>
</div>
<% end %>

<div class="cbi-map">
	<h2><%:Default routes%></h2>
		<div class="cbi-section">
			<div class="cbi-section-node">

<% if not defroutev4 and not defroutev6 then %>
	<%:No default routes known.%>
<%else%>
				<table class="cbi-section-table">
						<tr class="cbi-section-table-titles">
							<th class="cbi-section-table-cell"><%:Network%></th>
							<th class="cbi-section-table-cell"><%:Interface%></th>
							<th class="cbi-section-table-cell"><%:Gateway%></th>
							<th class="cbi-section-table-cell"><%:Metric%></th>
						</tr>

	<% if defroutev4 then %>

						<tr class="cbi-section-table-row cbi-rowstyle-1">
							<td class="cbi-value-field" id="v4dst"><%=defroutev4.dest%></td>
							<td class="cbi-value-field" id="v4dev"><%=defroutev4.device%></td>
							<td class="cbi-value-field" id="v4gw"><%=defroutev4.gateway%></td>
							<td class="cbi-value-field" id="v4metr"><%=defroutev4.metric%></td>
						</tr>

	<% end
	if defroutev6 then %>

						<tr class="cbi-section-table-row cbi-rowstyle-2">
							<td class="cbi-value-field" id="v6dst"><%=defroutev6.dest%></td>
							<td class="cbi-value-field" id="v6dev"><%=defroutev6.device%></td>
							<td class="cbi-value-field" id="v6gw"><%=defroutev6.nexthop%></td>
							<td class="cbi-value-field" id="v6metr"><%=defroutev6.metric%></td>
						</tr>

	<% end %>

				</table>
<% end %>
		</div>
	</div>
</div>
<%+footer%>
