Index: linux-3.10.49/drivers/tty/serial/8250/8250_core.c
===================================================================
--- linux-3.10.49.orig/drivers/tty/serial/8250/8250_core.c
+++ linux-3.10.49/drivers/tty/serial/8250/8250_core.c
@@ -2265,7 +2265,7 @@ static unsigned int serial8250_get_divis
 		quot = 0x8002;
 	else {
 		quot = uart_get_divisor(port, baud);
-#ifdef CONFIG_RTL_819X
+#if defined(CONFIG_RTL_819X) && !defined(CONFIG_RTL_8197F)
 		quot--;
 #endif
 	}	
Index: linux-3.10.49/include/uapi/linux/serial_reg.h
===================================================================
--- linux-3.10.49.orig/include/uapi/linux/serial_reg.h
+++ linux-3.10.49/include/uapi/linux/serial_reg.h
@@ -17,8 +17,13 @@
 /*
  * DLAB=0
  */
+#ifdef CONFIG_RTL_8197F
+#define UART_RX		9	/* In:  Receive buffer */
+#define UART_TX		9	/* Out: Transmit buffer */
+#else
 #define UART_RX		0	/* In:  Receive buffer */
 #define UART_TX		0	/* Out: Transmit buffer */
+#endif
 
 #define UART_IER	1	/* Out: Interrupt Enable Register */
 #define UART_IER_MSI		0x08 /* Enable Modem status interrupt */
@@ -32,7 +37,13 @@
 
 #define UART_IIR	2	/* In:  Interrupt ID Register */
 #define UART_IIR_NO_INT		0x01 /* No interrupts pending */
+
+#ifdef CONFIG_RTL_8197F
+#define UART_IIR_ID		0x0E /* Mask for the interrupt ID */
+#else
 #define UART_IIR_ID		0x06 /* Mask for the interrupt ID */
+#endif
+
 #define UART_IIR_MSI		0x00 /* Modem status interrupt */
 #define UART_IIR_THRI		0x02 /* Transmitter holding register empty */
 #define UART_IIR_RDI		0x04 /* Receiver data interrupt */
@@ -101,8 +112,14 @@
 #define UART_LCR_STOP		0x04 /* Stop bits: 0=1 bit, 1=2 bits */
 #define UART_LCR_WLEN5		0x00 /* Wordlength: 5 bits */
 #define UART_LCR_WLEN6		0x01 /* Wordlength: 6 bits */
+
+#ifdef CONFIG_RTL_8197F
+#define UART_LCR_WLEN7		0x00 /* Wordlength: 7 bits */
+#define UART_LCR_WLEN8		0x01 /* Wordlength: 8 bits */
+#else
 #define UART_LCR_WLEN7		0x02 /* Wordlength: 7 bits */
 #define UART_LCR_WLEN8		0x03 /* Wordlength: 8 bits */
+#endif
 
 /*
  * Access to some registers depends on register access / configuration
@@ -146,6 +163,13 @@
 
 #define UART_SCR	7	/* I/O: Scratch Register */
 
+#ifdef CONFIG_RTL_8197F
+#define UART_OVSR_ADJ_MASK	0x7FF0000
+#define UART_STS	8
+#define UART_RESET_RCV	0x08
+#define UART_OVSR_MASK	0x0F
+#endif
+
 /*
  * DLAB=1
  */
